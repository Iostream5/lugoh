%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 25.2)
%%For: ayib
%%CreationDate: 17/04/21
%%BoundingBox: 0 0 750 500
%%HiResBoundingBox: 0 0 750 500
%%CropBox: 0 0 750 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.2.1 x236 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c004 79.164570, 2020/11/18-15:51:46        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">FP21 Flat Geometric background 2 up-02</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2021-04-17T22:24:37+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2021-04-17T22:24:37+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2021-04-17T22:24:37+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator 25.2 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+ICQElDQ19QUk9GSUxFAAEBAAACMEFEQkUCEAAAbW50clJHQiBYWVogB88ABgAD&#xA;AAAAAAAAYWNzcEFQUEwAAAAAbm9uZQAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1BREJFAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKY3BydAAAAPwAAAAy&#xA;ZGVzYwAAATAAAABrd3RwdAAAAZwAAAAUYmtwdAAAAbAAAAAUclRSQwAAAcQAAAAOZ1RSQwAAAdQA&#xA;AAAOYlRSQwAAAeQAAAAOclhZWgAAAfQAAAAUZ1hZWgAAAggAAAAUYlhZWgAAAhwAAAAUdGV4dAAA&#xA;AABDb3B5cmlnaHQgMTk5OSBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZAAAAGRlc2MAAAAAAAAA&#xA;EUFkb2JlIFJHQiAoMTk5OCkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAA&#xA;ARbMWFlaIAAAAAAAAAAAAAAAAAAAAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAGN1&#xA;cnYAAAAAAAAAAQIzAABYWVogAAAAAAAAnBgAAE+lAAAE/FhZWiAAAAAAAAA0jQAAoCwAAA+VWFla&#xA;IAAAAAAAACYxAAAQLwAAvpz/7gAOQWRvYmUAZMAAAAAB/9sAhAAGBAQEBQQGBQUGCQYFBgkLCAYG&#xA;CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8fAQcHBw0MDRgQEBga&#xA;FREVGh8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wAAR&#xA;CACsAQADAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEB&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:9c5b6b9e-485b-4807-95a9-dc8290e95467</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:9c5b6b9e-485b-4807-95a9-dc8290e95467</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:7782bc92-4ff1-7249-ab81-57714c54012c</stRef:instanceID>
            <stRef:documentID>xmp.did:e80f8dc2-9d50-4787-bd91-b6ea98fc728d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9c5b6b9e-485b-4807-95a9-dc8290e95467</stEvt:instanceID>
                  <stEvt:when>2021-04-17T22:24:37+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 25.2 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>750.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Oswald-DemiBold</stFnt:fontName>
                  <stFnt:fontFamily>Oswald</stFnt:fontFamily>
                  <stFnt:fontFace>DemiBold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>3.0; ttfautohint (v0.95) -l 8 -r 50 -G 200 -x 0 -w "G" -W -c</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Oswald-DemiBold.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Montserrat-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Montserrat</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.200;PS 007.200;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Montserrat-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 8</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 5</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=209 B=91 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>209</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=236 G=130 B=125</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>125</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=86 G=84 B=140</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>86</xmpG:red>
                           <xmpG:green>84</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Kulit</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=233 G=229 B=217</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>217</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
750 500 li
750 0 li
cp
clp
gsave
750 500 mo
0 500 li
0 0 li
750 0 li
750 500 li
cp
clp
750 500 mo
0 500 li
0 0 li
750 0 li
750 500 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0286259 .00344854 .0114137 0 cmyk
f
631.358 230.975 mo
631.358 223.298 li
623.682 223.298 li
623.682 230.975 li
631.358 230.975 li
cp
0 .617365 .402533 0 cmyk
f
613.262 230.975 mo
613.262 223.298 li
605.585 223.298 li
605.585 230.975 li
613.262 230.975 li
cp
f
410.056 448.491 mo
410.056 440.813 li
402.379 440.813 li
402.379 448.491 li
410.056 448.491 li
cp
f
391.96 448.491 mo
391.96 440.813 li
384.282 440.813 li
384.282 448.491 li
391.96 448.491 li
cp
f
207.1 84.0562 mo
207.1 76.3789 li
199.422 76.3789 li
199.422 84.0562 li
207.1 84.0562 li
cp
f
189.003 84.0562 mo
189.003 76.3789 li
181.326 76.3789 li
181.326 84.0562 li
189.003 84.0562 li
cp
f
3.54182 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
267.136 406.574 mo
321.755 351.955 li
267.136 297.336 li
212.517 351.955 li
267.136 406.574 li
cp
.772152 .71191 .152987 .0204471 cmyk
@
267.136 357.679 mo
321.755 303.06 li
267.136 248.44 li
212.517 303.06 li
267.136 357.679 li
cp
0 .204623 .737453 0 cmyk
f
267.136 316.13 mo
280.206 303.06 li
267.136 289.989 li
254.065 303.06 li
267.136 316.13 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
123.15 104.732 mo
25.874 160.895 li
25.874 48.5688 li
123.15 104.732 li
cp
f
2.01041 lw
107.01 104.732 mo
33.9443 146.917 li
33.9443 62.5474 li
107.01 104.732 li
cp
0 .617365 .402533 0 cmyk
@
144.826 83.0566 mo
47.5488 139.22 li
47.5488 26.8936 li
144.826 83.0566 li
cp
0 .204623 .737453 0 cmyk
f
4.02081 lw
116.429 83.0566 mo
61.748 114.627 li
61.748 51.4863 li
116.429 83.0566 li
cp
.0274662 .0272831 .0343023 0 cmyk
@
204.732 17.7251 mo
156.346 45.6611 li
156.346 -10.2109 li
204.732 17.7251 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
2 lw
190.607 17.7251 mo
163.408 33.4287 li
163.408 2.02197 li
190.607 17.7251 li
cp
.0286259 .00344854 .0114137 0 cmyk
@
5.92853 lw
70.835 294.093 mo
119.027 245.901 li
70.835 197.709 li
22.6436 245.901 li
70.835 294.093 li
cp
0 .617365 .402533 0 cmyk
@
1.48213 lw
70.835 290.231 mo
115.166 245.901 li
70.835 201.571 li
26.5049 245.901 li
70.835 290.231 li
cp
.772152 .71191 .152987 .0204471 cmyk
@
70.835 308.982 mo
115.166 264.652 li
70.835 220.322 li
26.5049 264.652 li
70.835 308.982 li
cp
0 .204623 .737453 0 cmyk
f
70.835 288.466 mo
94.6494 264.652 li
70.835 240.838 li
47.0215 264.652 li
70.835 288.466 li
cp
0 .617365 .402533 0 cmyk
f
70.835 272.121 mo
78.3047 264.652 li
70.835 257.184 li
63.3662 264.652 li
70.835 272.121 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
5.92853 lw
547.869 49.2324 mo
596.062 1.04053 li
547.869 -47.1514 li
499.678 1.04053 li
547.869 49.2324 li
cp
0 .617365 .402533 0 cmyk
@
1.48213 lw
547.869 45.3711 mo
592.2 1.04053 li
547.869 -43.2896 li
503.539 1.04053 li
547.869 45.3711 li
cp
.772152 .71191 .152987 .0204471 cmyk
@
547.869 64.1221 mo
592.2 19.792 li
547.869 -24.5386 li
503.539 19.792 li
547.869 64.1221 li
cp
.0944533 .0855726 .162417 0 cmyk
f
547.869 43.6055 mo
571.684 19.792 li
547.869 -4.02197 li
524.056 19.792 li
547.869 43.6055 li
cp
0 .204623 .737453 0 cmyk
f
547.869 27.2607 mo
555.339 19.792 li
547.869 12.3228 li
540.4 19.792 li
547.869 27.2607 li
cp
0 .617365 .402533 0 cmyk
f
36.1807 620.517 mo
104.951 620.517 160.7 564.768 160.7 495.997 cv
160.7 427.228 104.951 371.479 36.1807 371.479 cv
-32.5889 371.479 -88.3379 427.228 -88.3379 495.997 cv
-88.3379 564.768 -32.5889 620.517 36.1807 620.517 cv
cp
f
325.746 58.9951 mo
373.77 58.9951 412.7 20.0645 412.7 -27.959 cv
412.7 -75.9824 373.77 -114.913 325.746 -114.913 cv
277.723 -114.913 238.792 -75.9824 238.792 -27.959 cv
238.792 20.0645 277.723 58.9951 325.746 58.9951 cv
cp
f
764.79 248.386 mo
812.813 248.386 851.744 209.456 851.744 161.432 cv
851.744 113.409 812.813 74.4785 764.79 74.4785 cv
716.767 74.4785 677.836 113.409 677.836 161.432 cv
677.836 209.456 716.767 248.386 764.79 248.386 cv
cp
.0944533 .0855726 .162417 0 cmyk
f
4.34134 lw
725.694 116.576 mo
749.593 116.576 768.966 97.2026 768.966 73.3042 cv
768.966 49.4063 749.593 30.0327 725.694 30.0327 cv
701.796 30.0327 682.423 49.4063 682.423 73.3042 cv
682.423 97.2026 701.796 116.576 725.694 116.576 cv
cp
0 .617365 .402533 0 cmyk
@
677.955 125.744 mo
706.917 125.744 730.395 102.266 730.395 73.3042 cv
730.395 44.3428 706.917 20.8652 677.955 20.8652 cv
648.994 20.8652 625.516 44.3428 625.516 73.3042 cv
625.516 102.266 648.994 125.744 677.955 125.744 cv
cp
.772152 .71191 .152987 .0204471 cmyk
@
677.955 103.35 mo
694.549 103.35 708.001 89.8984 708.001 73.3042 cv
708.001 56.7104 694.549 43.2583 677.955 43.2583 cv
661.361 43.2583 647.909 56.7104 647.909 73.3042 cv
647.909 89.8984 661.361 103.35 677.955 103.35 cv
cp
f
677.955 85.2622 mo
684.56 85.2622 689.913 79.9087 689.913 73.3042 cv
689.913 66.7002 684.56 61.3467 677.955 61.3467 cv
671.352 61.3467 665.997 66.7002 665.997 73.3042 cv
665.997 79.9087 671.352 85.2622 677.955 85.2622 cv
cp
0 .204623 .737453 0 cmyk
f
118.348 164.716 mo
118.348 148.043 li
101.676 148.043 li
101.676 164.716 li
118.348 164.716 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
110.012 173.052 mo
110.012 156.379 li
93.3398 156.379 li
93.3398 173.052 li
110.012 173.052 li
cp
0 .204623 .737453 0 cmyk
f
164.131 361.933 mo
164.131 345.261 li
147.458 345.261 li
147.458 361.933 li
164.131 361.933 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
155.794 370.27 mo
155.794 353.597 li
139.122 353.597 li
139.122 370.27 li
155.794 370.27 li
cp
0 .204623 .737453 0 cmyk
f
227.66 493.972 mo
256.623 465.008 li
227.66 436.044 li
198.696 465.008 li
227.66 493.972 li
cp
0 .617365 .402533 0 cmyk
f
227.66 471.936 mo
256.623 442.972 li
227.66 414.008 li
198.696 442.972 li
227.66 471.936 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
212.578 148.368 mo
208.442 148.368 205.076 151.733 205.076 155.87 cv
205.076 160.006 208.442 163.372 212.578 163.372 cv
216.716 163.372 220.081 160.006 220.081 155.87 cv
220.081 151.733 216.716 148.368 212.578 148.368 cv
cp
212.578 165.595 mo
207.216 165.595 202.854 161.232 202.854 155.87 cv
202.854 150.507 207.216 146.145 212.578 146.145 cv
217.941 146.145 222.305 150.507 222.305 155.87 cv
222.305 161.232 217.941 165.595 212.578 165.595 cv
cp
f
135.833 199.291 mo
136.372 199.291 136.899 199.072 137.281 198.69 cv
137.663 198.309 137.882 197.781 137.882 197.242 cv
137.882 196.702 137.663 196.174 137.281 195.792 cv
136.899 195.411 136.372 195.193 135.833 195.193 cv
135.293 195.193 134.766 195.411 134.384 195.792 cv
134.002 196.174 133.784 196.702 133.784 197.242 cv
133.784 197.781 134.002 198.309 134.384 198.69 cv
134.766 199.072 135.293 199.291 135.833 199.291 cv
f
156.956 199.291 mo
156.967 199.291 li
158.099 199.291 159.016 198.373 159.016 197.242 cv
159.016 196.11 158.099 195.193 156.967 195.193 cv
156.956 195.193 li
155.825 195.193 154.907 196.11 154.907 197.242 cv
154.907 198.373 155.825 199.291 156.956 199.291 cv
cp
f
146.393 199.291 mo
146.402 199.291 li
147.534 199.291 148.451 198.373 148.451 197.242 cv
148.451 196.11 147.534 195.193 146.402 195.193 cv
146.393 195.193 li
145.261 195.193 144.343 196.11 144.343 197.242 cv
144.343 198.373 145.261 199.291 146.393 199.291 cv
cp
f
135.833 190.875 mo
136.372 190.875 136.899 190.656 137.281 190.274 cv
137.663 189.893 137.882 189.365 137.882 188.826 cv
137.882 188.286 137.663 187.758 137.281 187.377 cv
136.899 186.995 136.372 186.777 135.833 186.777 cv
135.293 186.777 134.766 186.995 134.384 187.377 cv
134.002 187.758 133.784 188.286 133.784 188.826 cv
133.784 189.365 134.002 189.893 134.384 190.274 cv
134.766 190.656 135.293 190.875 135.833 190.875 cv
f
156.956 190.875 mo
156.967 190.875 li
158.099 190.875 159.016 189.957 159.016 188.826 cv
159.016 187.694 158.099 186.777 156.967 186.777 cv
156.956 186.777 li
155.825 186.777 154.907 187.694 154.907 188.826 cv
154.907 189.957 155.825 190.875 156.956 190.875 cv
cp
f
146.393 190.875 mo
146.402 190.875 li
147.534 190.875 148.451 189.957 148.451 188.826 cv
148.451 187.694 147.534 186.777 146.402 186.777 cv
146.393 186.777 li
145.261 186.777 144.343 187.694 144.343 188.826 cv
144.343 189.957 145.261 190.875 146.393 190.875 cv
cp
f
135.833 207.707 mo
136.372 207.707 136.899 207.488 137.281 207.106 cv
137.663 206.725 137.882 206.197 137.882 205.658 cv
137.882 205.118 137.663 204.59 137.281 204.208 cv
136.899 203.827 136.372 203.609 135.833 203.609 cv
135.293 203.609 134.766 203.827 134.384 204.208 cv
134.002 204.59 133.784 205.118 133.784 205.658 cv
133.784 206.197 134.002 206.725 134.384 207.106 cv
134.766 207.488 135.293 207.707 135.833 207.707 cv
f
156.956 207.707 mo
156.967 207.707 li
158.099 207.707 159.016 206.789 159.016 205.658 cv
159.016 204.526 158.099 203.609 156.967 203.609 cv
156.956 203.609 li
155.825 203.609 154.907 204.526 154.907 205.658 cv
154.907 206.789 155.825 207.707 156.956 207.707 cv
cp
f
146.393 207.707 mo
146.402 207.707 li
147.534 207.707 148.451 206.789 148.451 205.658 cv
148.451 204.526 147.534 203.609 146.402 203.609 cv
146.393 203.609 li
145.261 203.609 144.343 204.526 144.343 205.658 cv
144.343 206.789 145.261 207.707 146.393 207.707 cv
cp
f
598.252 158.111 mo
598.791 158.111 599.319 157.893 599.7 157.511 cv
600.082 157.129 600.301 156.602 600.301 156.063 cv
600.301 155.522 600.082 154.995 599.7 154.613 cv
599.319 154.232 598.791 154.014 598.252 154.014 cv
597.712 154.014 597.185 154.232 596.803 154.613 cv
596.422 154.995 596.203 155.522 596.203 156.063 cv
596.203 156.602 596.422 157.129 596.803 157.511 cv
597.185 157.893 597.712 158.111 598.252 158.111 cv
f
619.376 158.111 mo
619.386 158.111 li
620.518 158.111 621.435 157.194 621.435 156.063 cv
621.435 154.931 620.518 154.014 619.386 154.014 cv
619.376 154.014 li
618.244 154.014 617.327 154.931 617.327 156.063 cv
617.327 157.194 618.244 158.111 619.376 158.111 cv
cp
f
608.812 158.111 mo
608.821 158.111 li
609.953 158.111 610.87 157.194 610.87 156.063 cv
610.87 154.931 609.953 154.014 608.821 154.014 cv
608.812 154.014 li
607.68 154.014 606.763 154.931 606.763 156.063 cv
606.763 157.194 607.68 158.111 608.812 158.111 cv
cp
f
598.252 149.695 mo
598.791 149.695 599.319 149.477 599.7 149.095 cv
600.082 148.713 600.301 148.186 600.301 147.646 cv
600.301 147.107 600.082 146.579 599.7 146.197 cv
599.319 145.816 598.791 145.598 598.252 145.598 cv
597.712 145.598 597.185 145.816 596.803 146.197 cv
596.422 146.579 596.203 147.107 596.203 147.646 cv
596.203 148.186 596.422 148.713 596.803 149.095 cv
597.185 149.477 597.712 149.695 598.252 149.695 cv
f
619.376 149.695 mo
619.386 149.695 li
620.518 149.695 621.435 148.778 621.435 147.646 cv
621.435 146.515 620.518 145.598 619.386 145.598 cv
619.376 145.598 li
618.244 145.598 617.327 146.515 617.327 147.646 cv
617.327 148.778 618.244 149.695 619.376 149.695 cv
cp
f
608.812 149.695 mo
608.821 149.695 li
609.953 149.695 610.87 148.778 610.87 147.646 cv
610.87 146.515 609.953 145.598 608.821 145.598 cv
608.812 145.598 li
607.68 145.598 606.763 146.515 606.763 147.646 cv
606.763 148.778 607.68 149.695 608.812 149.695 cv
cp
f
598.252 166.527 mo
598.791 166.527 599.319 166.309 599.7 165.927 cv
600.082 165.545 600.301 165.018 600.301 164.479 cv
600.301 163.938 600.082 163.411 599.7 163.029 cv
599.319 162.648 598.791 162.429 598.252 162.429 cv
597.712 162.429 597.185 162.648 596.803 163.029 cv
596.422 163.411 596.203 163.938 596.203 164.479 cv
596.203 165.018 596.422 165.545 596.803 165.927 cv
597.185 166.309 597.712 166.527 598.252 166.527 cv
f
619.376 166.527 mo
619.386 166.527 li
620.518 166.527 621.435 165.61 621.435 164.479 cv
621.435 163.347 620.518 162.429 619.386 162.429 cv
619.376 162.429 li
618.244 162.429 617.327 163.347 617.327 164.479 cv
617.327 165.61 618.244 166.527 619.376 166.527 cv
cp
f
608.812 166.527 mo
608.821 166.527 li
609.953 166.527 610.87 165.61 610.87 164.479 cv
610.87 163.347 609.953 162.429 608.821 162.429 cv
608.812 162.429 li
607.68 162.429 606.763 163.347 606.763 164.479 cv
606.763 165.61 607.68 166.527 608.812 166.527 cv
cp
f
2.37485 lw
475.837 199.991 mo
509.136 199.991 536.131 172.997 536.131 139.697 cv
536.131 106.398 509.136 79.4038 475.837 79.4038 cv
442.537 79.4038 415.543 106.398 415.543 139.697 cv
415.543 172.997 442.537 199.991 475.837 199.991 cv
cp
0 .617365 .402533 0 cmyk
@
475.837 139.697 mo
475.837 50.2949 li
386.435 50.2949 li
386.435 139.697 li
475.837 139.697 li
cp
0 .204623 .737453 0 cmyk
f
467.317 81.2446 mo
467.317 58.814 li
444.887 58.814 li
444.887 81.2446 li
467.317 81.2446 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
475.837 180.703 mo
498.483 180.703 516.842 162.344 516.842 139.697 cv
516.842 117.051 498.483 98.6924 475.837 98.6924 cv
453.19 98.6924 434.832 117.051 434.832 139.697 cv
434.832 162.344 453.19 180.703 475.837 180.703 cv
cp
@
478.069 321.046 mo
477.335 321.137 476.385 320.983 475.932 321.389 cv
475.521 321.756 475.651 322.73 475.458 323.99 cv
476.755 323.747 477.893 323.83 478.109 323.424 cv
478.435 322.812 478.115 321.855 478.069 321.046 cv
cp
522.844 368.149 mo
522.403 368.497 522.458 369.473 522.171 370.704 cv
523.49 370.554 524.619 370.72 524.866 370.329 cv
525.233 369.746 524.979 368.771 524.987 367.962 cv
524.253 367.999 523.315 367.778 522.844 368.149 cv
cp
464.302 311.694 mo
464.527 312.103 465.665 312.008 466.856 312.219 cv
466.738 311.043 466.921 310.054 466.519 309.652 cv
466.116 309.252 465.128 309.44 464.396 309.371 cv
464.332 310.164 463.982 311.114 464.302 311.694 cv
cp
499.283 346.688 mo
499.912 347.042 500.864 346.823 501.681 346.845 cv
501.663 346.099 501.915 345.144 501.548 344.67 cv
501.218 344.243 500.207 344.346 499.011 344.126 cv
499.111 345.343 498.931 346.489 499.283 346.688 cv
cp
440.845 274.509 mo
440.417 274.862 440.502 275.835 440.25 277.085 cv
441.568 276.893 442.704 277.022 442.936 276.625 cv
443.284 276.026 443.001 275.06 442.986 274.25 cv
442.252 274.312 441.312 274.123 440.845 274.509 cv
cp
524.873 297.735 mo
524.504 297.341 523.492 297.548 522.27 297.449 cv
522.49 298.632 522.422 299.772 522.798 299.944 cv
523.456 300.246 524.387 299.955 525.203 299.912 cv
525.118 299.163 525.286 298.178 524.873 297.735 cv
cp
511.239 356.204 mo
511.172 356.996 510.817 357.944 511.134 358.526 cv
511.357 358.936 512.495 358.846 513.687 359.063 cv
513.573 357.886 513.761 356.897 513.36 356.494 cv
512.96 356.093 511.971 356.277 511.239 356.204 cv
cp
502.091 335.51 mo
501.882 334.349 501.972 333.207 501.568 332.993 cv
500.973 332.677 500.027 333.019 499.23 333.081 cv
499.298 333.807 499.104 334.808 499.503 335.185 cv
499.927 335.586 500.909 335.398 502.091 335.51 cv
cp
464.263 297.928 mo
463.836 298.28 463.92 299.254 463.669 300.504 cv
464.987 300.312 466.122 300.441 466.354 300.044 cv
466.703 299.445 466.42 298.479 466.405 297.669 cv
465.671 297.73 464.73 297.542 464.263 297.928 cv
cp
487.246 324.055 mo
488.52 323.764 489.662 323.802 489.861 323.387 cv
490.162 322.761 489.805 321.818 489.727 321.011 cv
488.995 321.127 488.035 321.008 487.6 321.43 cv
487.205 321.813 487.381 322.785 487.246 324.055 cv
cp
455.253 288.672 mo
455.045 287.511 455.134 286.37 454.731 286.155 cv
454.136 285.839 453.189 286.182 452.393 286.243 cv
452.46 286.97 452.268 287.97 452.665 288.347 cv
453.089 288.749 454.072 288.561 455.253 288.672 cv
cp
475.942 309.667 mo
475.527 310.03 475.644 311.003 475.434 312.261 cv
476.735 312.032 477.873 312.129 478.091 311.727 cv
478.422 311.114 478.115 310.157 478.08 309.347 cv
477.347 309.429 476.399 309.268 475.942 309.667 cv
cp
522.924 382.024 mo
523.351 382.426 524.334 382.234 525.534 382.345 cv
525.313 381.182 525.395 380.045 524.988 379.83 cv
524.391 379.515 523.445 379.857 522.647 379.92 cv
522.717 380.646 522.525 381.649 522.924 382.024 cv
cp
464.277 321.331 mo
463.844 321.68 463.913 322.651 463.641 323.896 cv
464.965 323.724 466.099 323.869 466.334 323.477 cv
466.69 322.882 466.422 321.912 466.418 321.102 cv
465.685 321.153 464.748 320.953 464.277 321.331 cv
cp
498.851 367.705 mo
499.071 368.888 499.003 370.028 499.379 370.2 cv
500.037 370.502 500.968 370.211 501.785 370.169 cv
501.699 369.419 501.867 368.438 501.454 367.991 cv
501.091 367.598 500.079 367.804 498.851 367.705 cv
cp
511.215 382.023 mo
511.649 382.426 512.632 382.235 513.825 382.344 cv
513.605 381.182 513.686 380.045 513.279 379.831 cv
512.682 379.515 511.736 379.857 510.938 379.92 cv
511.008 380.646 510.815 381.654 511.215 382.023 cv
cp
487.796 358.605 mo
488.223 359.007 489.206 358.816 490.406 358.926 cv
490.186 357.763 490.267 356.626 489.86 356.411 cv
489.263 356.096 488.317 356.438 487.52 356.501 cv
487.589 357.228 487.397 358.23 487.796 358.605 cv
cp
464.308 333.011 mo
463.865 333.351 463.91 334.325 463.61 335.557 cv
464.928 335.422 466.057 335.6 466.307 335.211 cv
466.68 334.632 466.433 333.654 466.449 332.846 cv
465.716 332.876 464.783 332.646 464.308 333.011 cv
cp
522.844 356.44 mo
522.403 356.788 522.458 357.762 522.17 358.991 cv
523.486 358.844 524.617 359.011 524.86 358.622 cv
525.227 358.035 524.974 357.062 524.983 356.252 cv
524.25 356.29 523.313 356.069 522.844 356.44 cv
cp
487.796 335.186 mo
488.23 335.588 489.214 335.397 490.405 335.506 cv
490.188 334.345 490.27 333.205 489.864 332.992 cv
489.265 332.677 488.319 333.019 487.521 333.081 cv
487.589 333.808 487.396 334.816 487.796 335.186 cv
cp
452.537 297.944 mo
452.116 298.303 452.22 299.277 451.993 300.532 cv
453.302 300.318 454.438 300.429 454.664 300.027 cv
455.005 299.423 454.707 298.46 454.681 297.649 cv
453.945 297.724 453 297.551 452.537 297.944 cv
cp
511.133 370.235 mo
511.355 370.645 512.491 370.556 513.671 370.771 cv
513.562 369.598 513.751 368.611 513.352 368.203 cv
512.958 367.802 511.967 367.987 511.237 367.915 cv
511.17 368.706 510.816 369.653 511.133 370.235 cv
cp
487.793 346.894 mo
488.217 347.296 489.2 347.107 490.382 347.219 cv
490.173 346.058 490.262 344.917 489.859 344.702 cv
489.264 344.386 488.317 344.729 487.521 344.79 cv
487.588 345.517 487.396 346.517 487.793 346.894 cv
cp
498.851 355.995 mo
499.071 357.179 499.003 358.319 499.379 358.491 cv
500.037 358.793 500.968 358.502 501.784 358.459 cv
501.699 357.71 501.867 356.728 501.454 356.281 cv
501.09 355.889 500.079 356.095 498.851 355.995 cv
cp
475.438 332.571 mo
475.654 333.756 475.582 334.896 475.957 335.069 cv
476.615 335.373 477.547 335.085 478.363 335.045 cv
478.281 334.296 478.451 333.313 478.039 332.866 cv
477.677 332.472 476.665 332.675 475.438 332.571 cv
cp
475.438 344.28 mo
475.654 345.465 475.582 346.605 475.957 346.778 cv
476.615 347.083 477.547 346.795 478.363 346.755 cv
478.281 346.005 478.45 345.023 478.039 344.575 cv
477.677 344.182 476.665 344.384 475.438 344.28 cv
cp
511.06 309.679 mo
510.647 310.05 510.778 311.024 510.586 312.281 cv
511.882 312.038 513.021 312.121 513.237 311.714 cv
513.563 311.102 513.243 310.146 513.197 309.337 cv
512.463 309.427 511.51 309.273 511.06 309.679 cv
cp
525.201 323.335 mo
525.119 322.586 525.292 321.6 524.88 321.157 cv
524.511 320.762 523.499 320.964 522.276 320.86 cv
522.492 322.046 522.42 323.187 522.794 323.359 cv
523.452 323.664 524.384 323.375 525.201 323.335 cv
cp
490.071 288.208 mo
489.99 287.459 490.163 286.478 489.753 286.03 cv
489.39 285.636 488.378 285.836 487.15 285.73 cv
487.364 286.915 487.29 288.057 487.664 288.229 cv
488.322 288.535 489.254 288.247 490.071 288.208 cv
cp
501.438 297.592 mo
500.706 297.708 499.746 297.589 499.31 298.011 cv
498.914 298.394 499.091 299.366 498.955 300.637 cv
500.229 300.345 501.371 300.384 501.572 299.968 cv
501.873 299.343 501.516 298.399 501.438 297.592 cv
cp
534.597 332.979 mo
534.144 333.311 534.164 334.288 533.835 335.503 cv
535.143 335.408 536.266 335.621 536.53 335.239 cv
536.921 334.675 536.7 333.688 536.74 332.881 cv
536.007 332.888 535.077 332.627 534.597 332.979 cv
cp
499.33 274.571 mo
498.926 274.949 499.079 275.923 498.915 277.185 cv
500.2 276.918 501.341 276.979 501.548 276.568 cv
501.861 275.949 501.522 275.001 501.461 274.191 cv
500.729 274.295 499.772 274.158 499.33 274.571 cv
cp
511.215 288.349 mo
511.649 288.751 512.632 288.561 513.825 288.669 cv
513.605 287.507 513.686 286.37 513.279 286.156 cv
512.682 285.84 511.736 286.183 510.938 286.245 cv
511.007 286.972 510.815 287.979 511.215 288.349 cv
cp
534.118 309.016 mo
534.234 310.229 534.067 311.375 534.423 311.57 cv
535.055 311.919 536.004 311.692 536.82 311.706 cv
536.793 310.96 537.033 310.003 536.66 309.531 cv
536.328 309.109 535.317 309.223 534.118 309.016 cv
cp
536.644 321.068 mo
535.909 321.143 534.964 320.97 534.502 321.364 cv
534.081 321.723 534.186 322.696 533.959 323.95 cv
535.267 323.737 536.404 323.848 536.629 323.447 cv
536.968 322.841 536.671 321.879 536.644 321.068 cv
cp
546.242 333.041 mo
545.81 333.389 545.878 334.36 545.605 335.605 cv
546.931 335.433 548.064 335.578 548.3 335.186 cv
548.655 334.591 548.387 333.622 548.384 332.812 cv
547.65 332.863 546.714 332.662 546.242 333.041 cv
cp
476.006 274.476 mo
475.567 274.818 475.622 275.793 475.333 277.029 cv
476.652 276.88 477.782 277.045 478.029 276.654 cv
478.396 276.071 478.141 275.096 478.15 274.287 cv
477.416 274.324 476.48 274.104 476.006 274.476 cv
cp
545.697 344.276 mo
545.911 345.462 545.837 346.604 546.211 346.776 cv
546.869 347.081 547.801 346.794 548.618 346.755 cv
548.537 346.006 548.71 345.024 548.3 344.577 cv
547.937 344.183 546.925 344.383 545.697 344.276 cv
cp
478.569 288.799 mo
478.446 287.623 478.625 286.636 478.221 286.234 cv
477.819 285.835 476.833 286.023 476.103 285.955 cv
476.04 286.747 475.691 287.697 476.013 288.277 cv
476.238 288.685 477.375 288.589 478.569 288.799 cv
cp
522.888 344.688 mo
522.433 345.024 522.453 346.002 522.126 347.211 cv
523.432 347.117 524.556 347.331 524.819 346.949 cv
525.209 346.385 524.988 345.398 525.027 344.592 cv
524.295 344.598 523.363 344.336 522.888 344.688 cv
cp
499.503 323.476 mo
499.93 323.878 500.913 323.688 502.113 323.801 cv
501.895 322.637 501.978 321.501 501.571 321.286 cv
500.974 320.969 500.028 321.31 499.231 321.371 cv
499.298 322.098 499.105 323.1 499.503 323.476 cv
cp
513.225 332.777 mo
512.49 332.852 511.545 332.679 511.083 333.073 cv
510.662 333.432 510.767 334.406 510.54 335.659 cv
511.849 335.446 512.986 335.557 513.21 335.156 cv
513.549 334.55 513.252 333.588 513.225 332.777 cv
cp
534.52 356.475 mo
534.091 356.831 534.176 357.806 533.925 359.051 cv
535.243 358.858 536.379 358.987 536.61 358.591 cv
536.959 357.992 536.676 357.025 536.661 356.215 cv
535.927 356.277 534.983 356.088 534.52 356.475 cv
cp
487.682 309.637 mo
487.254 309.99 487.339 310.963 487.087 312.213 cv
488.406 312.021 489.541 312.15 489.772 311.753 cv
490.121 311.154 489.839 310.188 489.824 309.378 cv
489.09 309.439 488.148 309.252 487.682 309.637 cv
cp
489.857 297.863 mo
489.262 297.547 488.315 297.892 487.52 297.955 cv
487.588 298.681 487.396 299.687 487.795 300.058 cv
488.227 300.46 489.209 300.271 490.384 300.379 cv
490.173 299.219 490.261 298.077 489.857 297.863 cv
cp
511.212 323.476 mo
511.636 323.877 512.618 323.689 513.8 323.8 cv
513.591 322.64 513.681 321.498 513.277 321.283 cv
512.683 320.967 511.736 321.31 510.939 321.371 cv
511.007 322.098 510.813 323.098 511.212 323.476 cv
cp
464.277 274.494 mo
463.843 274.847 463.911 275.819 463.641 277.059 cv
464.965 276.886 466.099 277.032 466.334 276.639 cv
466.69 276.044 466.422 275.075 466.418 274.265 cv
465.685 274.316 464.745 274.114 464.277 274.494 cv
cp
522.941 332.791 mo
522.878 333.583 522.526 334.536 522.849 335.112 cv
523.078 335.523 524.215 335.427 525.405 335.639 cv
525.283 334.462 525.463 333.475 525.06 333.072 cv
524.659 332.673 523.672 332.86 522.941 332.791 cv
cp
534.118 367.563 mo
534.234 368.776 534.067 369.922 534.423 370.117 cv
535.055 370.466 536.004 370.239 536.82 370.252 cv
536.793 369.507 537.033 368.55 536.66 368.078 cv
536.328 367.656 535.317 367.77 534.118 367.563 cv
cp
534.584 344.699 mo
534.136 345.035 534.164 346.01 533.846 347.228 cv
535.153 347.121 536.281 347.323 536.536 346.94 cv
536.92 346.368 536.692 345.386 536.724 344.577 cv
535.991 344.593 535.062 344.343 534.584 344.699 cv
cp
499.456 309.572 mo
499.007 309.907 499.037 310.884 498.719 312.103 cv
500.028 311.994 501.155 312.194 501.413 311.812 cv
501.797 311.241 501.566 310.258 501.597 309.45 cv
500.864 309.466 499.934 309.215 499.456 309.572 cv
cp
513.695 347.348 mo
513.573 346.171 513.754 345.185 513.351 344.782 cv
512.949 344.382 511.962 344.57 511.232 344.5 cv
511.169 345.292 510.817 346.245 511.14 346.822 cv
511.369 347.232 512.506 347.137 513.695 347.348 cv
cp
407.772 346.91 mo
408.141 346.327 407.885 345.352 407.895 344.543 cv
407.16 344.581 406.222 344.359 405.751 344.731 cv
405.311 345.078 405.365 346.054 405.077 347.285 cv
406.396 347.136 407.526 347.301 407.772 346.91 cv
cp
394.022 333.04 mo
393.589 333.387 393.657 334.36 393.384 335.607 cv
394.711 335.434 395.844 335.579 396.083 335.185 cv
396.44 334.594 396.17 333.623 396.167 332.813 cv
395.433 332.864 394.495 332.661 394.022 333.04 cv
cp
429.249 370.314 mo
429.676 370.716 430.66 370.525 431.857 370.635 cv
431.641 369.473 431.723 368.333 431.317 368.12 cv
430.718 367.805 429.772 368.147 428.974 368.209 cv
429.042 368.937 428.851 369.939 429.249 370.314 cv
cp
442.956 379.604 mo
442.221 379.686 441.273 379.523 440.815 379.923 cv
440.399 380.286 440.517 381.26 440.307 382.52 cv
441.61 382.289 442.747 382.386 442.969 381.98 cv
443.301 381.372 442.992 380.413 442.956 379.604 cv
cp
452.525 391.632 mo
452.107 391.999 452.226 392.974 452.016 394.229 cv
453.319 393.999 454.457 394.095 454.678 393.69 cv
455.01 393.082 454.701 392.123 454.665 391.313 cv
453.931 391.396 452.98 391.231 452.525 391.632 cv
cp
419.537 356.186 mo
418.803 356.268 417.854 356.104 417.396 356.504 cv
416.98 356.867 417.098 357.841 416.888 359.101 cv
418.191 358.871 419.328 358.967 419.55 358.562 cv
419.882 357.953 419.573 356.995 419.537 356.186 cv
cp
464.302 405.368 mo
464.531 405.779 465.668 405.683 466.856 405.894 cv
466.738 404.718 466.921 403.729 466.519 403.327 cv
466.116 402.927 465.128 403.115 464.396 403.046 cv
464.332 403.839 463.98 404.792 464.302 405.368 cv
cp
476.017 403.268 mo
475.574 403.607 475.619 404.581 475.319 405.811 cv
476.635 405.677 477.765 405.854 478.012 405.468 cv
478.384 404.886 478.14 403.909 478.157 403.101 cv
477.424 403.131 476.491 402.901 476.017 403.268 cv
cp
440.922 368.107 mo
440.469 368.439 440.489 369.416 440.16 370.63 cv
441.467 370.536 442.591 370.749 442.854 370.368 cv
443.244 369.804 443.022 368.817 443.062 368.011 cv
442.33 368.017 441.4 367.756 440.922 368.107 cv
cp
429.135 356.475 mo
428.707 356.827 428.791 357.8 428.539 359.049 cv
429.856 358.857 430.992 358.987 431.222 358.592 cv
431.569 357.99 431.289 357.024 431.275 356.214 cv
430.542 356.276 429.602 356.089 429.135 356.475 cv
cp
466.48 391.429 mo
465.748 391.436 464.819 391.174 464.34 391.526 cv
463.888 391.858 463.908 392.835 463.579 394.048 cv
464.886 393.955 466.01 394.168 466.272 393.787 cv
466.662 393.222 466.441 392.235 466.48 391.429 cv
cp
452.472 379.978 mo
452.076 380.363 452.252 381.335 452.118 382.601 cv
453.389 382.31 454.531 382.348 454.729 381.934 cv
455.029 381.306 454.673 380.364 454.596 379.556 cv
453.865 379.673 452.904 379.555 452.472 379.978 cv
cp
431.437 393.671 mo
431.409 392.926 431.649 391.969 431.276 391.496 cv
430.943 391.075 429.934 391.188 428.733 390.981 cv
428.85 392.195 428.683 393.341 429.039 393.536 cv
429.671 393.885 430.619 393.657 431.437 393.671 cv
cp
405.75 368.15 mo
405.31 368.498 405.365 369.473 405.077 370.703 cv
406.396 370.554 407.526 370.72 407.771 370.33 cv
408.139 369.746 407.882 368.771 407.892 367.962 cv
407.157 368 406.22 367.779 405.75 368.15 cv
cp
429.053 403.396 mo
428.657 403.782 428.833 404.754 428.699 406.02 cv
429.971 405.729 431.113 405.766 431.311 405.353 cv
431.61 404.724 431.255 403.782 431.178 402.974 cv
430.446 403.092 429.485 402.974 429.053 403.396 cv
cp
452.019 402.827 mo
452.235 404.012 452.163 405.152 452.538 405.325 cv
453.196 405.63 454.128 405.341 454.945 405.301 cv
454.862 404.552 455.033 403.566 454.621 403.123 cv
454.253 402.728 453.241 402.931 452.019 402.827 cv
cp
417.46 391.569 mo
417.02 391.916 417.074 392.891 416.787 394.122 cv
418.105 393.973 419.235 394.139 419.481 393.748 cv
419.848 393.165 419.592 392.189 419.601 391.381 cv
418.867 391.419 417.93 391.197 417.46 391.569 cv
cp
417.491 379.828 mo
417.041 380.168 417.07 381.145 416.754 382.358 cv
418.063 382.251 419.189 382.451 419.448 382.067 cv
419.831 381.497 419.601 380.514 419.632 379.707 cv
418.898 379.722 417.966 379.471 417.491 379.828 cv
cp
405.28 394.312 mo
406.555 394.02 407.696 394.059 407.897 393.643 cv
408.199 393.018 407.841 392.074 407.764 391.267 cv
407.031 391.383 406.071 391.264 405.635 391.686 cv
405.239 392.068 405.416 393.041 405.28 394.312 cv
cp
429.242 379.787 mo
428.78 380.11 428.776 381.089 428.42 382.292 cv
429.718 382.232 430.833 382.475 431.11 382.099 cv
431.516 381.55 431.32 380.558 431.382 379.754 cv
430.649 379.738 429.726 379.448 429.242 379.787 cv
cp
440.884 393.66 mo
441.113 394.07 442.248 393.974 443.423 394.182 cv
443.307 393.008 443.492 392.021 443.09 391.615 cv
442.694 391.217 441.703 391.407 440.974 391.34 cv
440.911 392.131 440.562 393.083 440.884 393.66 cv
cp
420.125 370.638 mo
419.916 369.477 420.006 368.335 419.603 368.121 cv
419.008 367.805 418.062 368.147 417.265 368.209 cv
417.332 368.935 417.139 369.936 417.537 370.313 cv
417.961 370.714 418.943 370.526 420.125 370.638 cv
cp
464.264 379.894 mo
463.835 380.25 463.919 381.224 463.669 382.469 cv
464.987 382.277 466.122 382.406 466.354 382.009 cv
466.703 381.411 466.42 380.444 466.405 379.634 cv
465.671 379.696 464.728 379.507 464.264 379.894 cv
cp
440.909 403.247 mo
440.461 403.582 440.49 404.558 440.173 405.777 cv
441.482 405.669 442.608 405.869 442.866 405.485 cv
443.25 404.916 443.02 403.933 443.05 403.125 cv
442.317 403.141 441.387 402.89 440.909 403.247 cv
cp
405.687 356.504 mo
405.271 356.868 405.389 357.841 405.179 359.1 cv
406.481 358.871 407.619 358.967 407.839 358.563 cv
408.171 357.953 407.862 356.995 407.825 356.186 cv
407.092 356.268 406.144 356.105 405.687 356.504 cv
cp
417.54 288.35 mo
417.968 288.751 418.95 288.56 420.15 288.669 cv
419.931 287.507 420.011 286.37 419.604 286.156 cv
419.007 285.84 418.062 286.183 417.264 286.245 cv
417.332 286.972 417.142 287.975 417.54 288.35 cv
cp
464.246 356.491 mo
463.825 356.85 463.93 357.824 463.702 359.079 cv
465.012 358.865 466.148 358.976 466.374 358.574 cv
466.714 357.969 466.416 357.007 466.39 356.196 cv
465.654 356.271 464.709 356.098 464.246 356.491 cv
cp
487.796 382.024 mo
488.224 382.426 489.207 382.234 490.405 382.344 cv
490.188 381.182 490.27 380.042 489.865 379.83 cv
489.265 379.515 488.319 379.856 487.521 379.919 cv
487.589 380.646 487.397 381.649 487.796 382.024 cv
cp
454.855 346.833 mo
454.83 346.087 455.072 345.129 454.699 344.658 cv
454.365 344.236 453.354 344.351 452.153 344.144 cv
452.269 345.357 452.102 346.503 452.457 346.699 cv
453.09 347.047 454.039 346.819 454.855 346.833 cv
cp
475.865 370.106 mo
476.494 370.461 477.445 370.242 478.262 370.263 cv
478.244 369.518 478.497 368.563 478.129 368.088 cv
477.8 367.662 476.788 367.765 475.592 367.544 cv
475.692 368.762 475.512 369.907 475.865 370.106 cv
cp
440.828 333.072 mo
440.407 333.432 440.511 334.406 440.283 335.66 cv
441.593 335.446 442.729 335.557 442.955 335.155 cv
443.295 334.551 442.998 333.588 442.971 332.777 cv
442.236 332.852 441.29 332.679 440.828 333.072 cv
cp
511.083 391.62 mo
510.662 391.979 510.767 392.953 510.54 394.206 cv
511.849 393.993 512.986 394.104 513.21 393.703 cv
513.549 393.097 513.252 392.135 513.225 391.324 cv
512.49 391.398 511.545 391.226 511.083 391.62 cv
cp
431.289 297.834 mo
430.961 297.408 429.95 297.509 428.755 297.287 cv
428.855 298.505 428.674 299.65 429.026 299.85 cv
429.655 300.204 430.606 299.987 431.423 300.009 cv
431.405 299.264 431.656 298.311 431.289 297.834 cv
cp
440.878 309.604 mo
440.439 309.947 440.494 310.921 440.206 312.156 cv
441.523 312.008 442.654 312.174 442.899 311.783 cv
443.267 311.199 443.011 310.225 443.02 309.416 cv
442.286 309.453 441.351 309.233 440.878 309.604 cv
cp
499.499 391.496 mo
499.035 391.823 499.031 392.803 498.676 394.002 cv
499.975 393.942 501.089 394.184 501.367 393.808 cv
501.773 393.259 501.58 392.265 501.642 391.461 cv
500.909 391.446 499.981 391.155 499.499 391.496 cv
cp
429.118 321.363 mo
428.697 321.722 428.802 322.696 428.574 323.951 cv
429.884 323.737 431.02 323.848 431.246 323.445 cv
431.586 322.841 431.288 321.878 431.262 321.068 cv
430.526 321.142 429.581 320.969 429.118 321.363 cv
cp
405.716 274.509 mo
405.289 274.862 405.374 275.835 405.122 277.085 cv
406.44 276.893 407.576 277.022 407.808 276.625 cv
408.156 276.026 407.873 275.06 407.858 274.25 cv
407.124 274.312 406.184 274.123 405.716 274.509 cv
cp
455.277 323.798 mo
455.058 322.635 455.139 321.498 454.732 321.283 cv
454.135 320.968 453.188 321.311 452.392 321.373 cv
452.46 322.1 452.27 323.103 452.668 323.478 cv
453.095 323.879 454.078 323.688 455.277 323.798 cv
cp
442.893 344.561 mo
442.685 344.201 441.538 344.383 440.313 344.279 cv
440.526 345.462 440.422 346.474 440.842 346.791 cv
441.328 347.159 442.276 346.917 443.024 346.939 cv
443.012 346.128 443.247 345.174 442.893 344.561 cv
cp
454.62 367.994 mo
454.258 367.6 453.246 367.803 452.019 367.699 cv
452.235 368.884 452.163 370.024 452.538 370.197 cv
453.196 370.501 454.128 370.213 454.945 370.173 cv
454.862 369.424 455.032 368.442 454.62 367.994 cv
cp
487.62 391.665 mo
487.217 392.043 487.369 393.016 487.205 394.277 cv
488.488 394.011 489.629 394.071 489.835 393.662 cv
490.146 393.04 489.811 392.093 489.75 391.283 cv
489.018 391.387 488.062 391.252 487.62 391.665 cv
cp
419.55 332.777 mo
418.815 332.852 417.87 332.679 417.408 333.073 cv
416.988 333.432 417.092 334.406 416.865 335.659 cv
418.174 335.446 419.312 335.557 419.535 335.156 cv
419.874 334.55 419.577 333.588 419.55 332.777 cv
cp
440.885 358.533 mo
441.11 358.94 442.247 358.845 443.441 359.056 cv
443.318 357.879 443.496 356.892 443.093 356.49 cv
442.691 356.091 441.705 356.279 440.975 356.211 cv
440.912 357.003 440.563 357.953 440.885 358.533 cv
cp
487.715 403.278 mo
487.276 403.622 487.331 404.596 487.043 405.831 cv
488.361 405.683 489.492 405.849 489.737 405.458 cv
490.104 404.874 489.848 403.899 489.856 403.091 cv
489.123 403.128 488.188 402.908 487.715 403.278 cv
cp
431.11 346.971 mo
431.516 346.422 431.32 345.429 431.382 344.625 cv
430.649 344.61 429.726 344.32 429.242 344.659 cv
428.78 344.982 428.776 345.961 428.42 347.164 cv
429.719 347.104 430.833 347.347 431.11 346.971 cv
cp
455.277 358.926 mo
455.058 357.763 455.139 356.626 454.732 356.411 cv
454.134 356.096 453.189 356.438 452.392 356.501 cv
452.46 357.228 452.27 358.23 452.668 358.605 cv
453.095 359.007 454.078 358.816 455.277 358.926 cv
cp
429.266 332.792 mo
429.203 333.584 428.854 334.534 429.176 335.114 cv
429.401 335.522 430.538 335.426 431.732 335.637 cv
431.608 334.46 431.787 333.473 431.384 333.071 cv
430.982 332.672 429.995 332.861 429.266 332.792 cv
cp
417.537 323.476 mo
417.961 323.877 418.943 323.688 420.125 323.8 cv
419.916 322.64 420.006 321.498 419.603 321.283 cv
419.008 320.967 418.062 321.31 417.265 321.371 cv
417.332 322.098 417.139 323.098 417.537 323.476 cv
cp
478.041 379.706 mo
477.674 379.31 476.662 379.511 475.44 379.406 cv
475.655 380.591 475.581 381.731 475.955 381.905 cv
476.612 382.21 477.545 381.923 478.361 381.884 cv
478.28 381.135 478.452 380.149 478.041 379.706 cv
cp
407.922 309.45 mo
407.189 309.466 406.259 309.215 405.781 309.572 cv
405.332 309.907 405.362 310.884 405.044 312.103 cv
406.354 311.994 407.48 312.194 407.738 311.811 cv
408.122 311.241 407.892 310.258 407.922 309.45 cv
cp
466.965 370.635 mo
466.755 369.476 466.843 368.334 466.439 368.12 cv
465.844 367.804 464.897 368.147 464.102 368.21 cv
464.169 368.937 463.978 369.938 464.376 370.313 cv
464.801 370.715 465.784 370.525 466.965 370.635 cv
cp
478.697 394.054 mo
478.477 392.892 478.558 391.755 478.151 391.54 cv
477.554 391.225 476.607 391.566 475.811 391.629 cv
475.879 392.355 475.688 393.363 476.087 393.733 cv
476.521 394.135 477.504 393.944 478.697 394.054 cv
cp
419.57 262.692 mo
419.236 262.271 418.226 262.385 417.025 262.179 cv
417.141 263.392 416.974 264.538 417.329 264.733 cv
417.962 265.081 418.911 264.854 419.728 264.867 cv
419.702 264.121 419.943 263.164 419.57 262.692 cv
cp
420.15 300.379 mo
419.931 299.217 420.011 298.08 419.604 297.865 cv
419.007 297.55 418.062 297.892 417.264 297.954 cv
417.332 298.681 417.142 299.684 417.54 300.059 cv
417.968 300.46 418.95 300.27 420.15 300.379 cv
cp
546.168 321.409 mo
545.764 321.787 545.916 322.76 545.752 324.021 cv
547.037 323.755 548.179 323.816 548.386 323.406 cv
548.699 322.786 548.36 321.838 548.299 321.029 cv
547.566 321.132 546.609 320.995 546.168 321.409 cv
cp
466.438 344.544 mo
465.704 344.581 464.77 344.361 464.297 344.731 cv
463.857 345.075 463.913 346.049 463.624 347.284 cv
464.942 347.136 466.073 347.302 466.318 346.911 cv
466.686 346.327 466.429 345.353 466.438 344.544 cv
cp
452.667 335.186 mo
453.092 335.587 454.074 335.397 455.256 335.507 cv
455.046 334.348 455.134 333.206 454.73 332.992 cv
454.135 332.676 453.188 333.02 452.392 333.082 cv
452.46 333.809 452.269 334.81 452.667 335.186 cv
cp
405.83 288.349 mo
406.254 288.75 407.237 288.561 408.418 288.67 cv
408.208 287.51 408.296 286.368 407.893 286.154 cv
407.297 285.838 406.352 286.182 405.555 286.245 cv
405.622 286.971 405.431 287.972 405.83 288.349 cv
cp
396.731 276.96 mo
396.512 275.798 396.592 274.661 396.186 274.446 cv
395.588 274.131 394.643 274.474 393.845 274.535 cv
393.914 275.262 393.723 276.266 394.122 276.641 cv
394.549 277.041 395.532 276.851 396.731 276.96 cv
cp
487.028 370.685 mo
488.347 370.55 489.476 370.728 489.726 370.339 cv
490.098 369.761 489.852 368.782 489.868 367.975 cv
489.135 368.004 488.202 367.773 487.727 368.139 cv
487.284 368.479 487.329 369.453 487.028 370.685 cv
cp
396.594 288.807 mo
396.48 287.63 396.668 286.642 396.267 286.238 cv
395.867 285.836 394.877 286.021 394.146 285.948 cv
394.078 286.74 393.722 287.691 394.041 288.27 cv
394.268 288.682 395.405 288.59 396.594 288.807 cv
cp
407.899 297.864 mo
407.299 297.549 406.354 297.891 405.556 297.953 cv
405.624 298.68 405.432 299.684 405.831 300.059 cv
406.258 300.46 407.241 300.269 408.439 300.378 cv
408.223 299.217 408.304 298.077 407.899 297.864 cv
cp
429.246 311.766 mo
429.67 312.168 430.653 311.979 431.835 312.091 cv
431.626 310.93 431.716 309.789 431.313 309.574 cv
430.717 309.258 429.771 309.601 428.975 309.662 cv
429.041 310.389 428.849 311.389 429.246 311.766 cv
cp
385 265.251 mo
384.789 264.091 384.878 262.949 384.474 262.735 cv
383.878 262.42 382.933 262.764 382.136 262.826 cv
382.204 263.553 382.013 264.554 382.411 264.93 cv
382.836 265.331 383.818 265.142 385 265.251 cv
cp
419.497 309.449 mo
419.134 309.054 418.122 309.255 416.895 309.148 cv
417.108 310.334 417.034 311.476 417.408 311.648 cv
418.066 311.953 418.998 311.666 419.815 311.627 cv
419.734 310.878 419.907 309.896 419.497 309.449 cv
cp
429.169 288.27 mo
429.396 288.682 430.533 288.591 431.723 288.808 cv
431.606 287.631 431.791 286.645 431.39 286.24 cv
430.99 285.839 430.003 286.022 429.272 285.949 cv
429.206 286.74 428.85 287.692 429.169 288.27 cv
cp
454.945 311.626 mo
454.862 310.877 455.032 309.896 454.62 309.447 cv
454.258 309.053 453.246 309.256 452.019 309.152 cv
452.235 310.337 452.163 311.478 452.538 311.65 cv
453.196 311.955 454.128 311.666 454.945 311.626 cv
cp
408.312 253.67 mo
408.191 252.494 408.373 251.505 407.97 251.104 cv
407.567 250.704 406.579 250.894 405.848 250.826 cv
405.785 251.618 405.434 252.572 405.757 253.148 cv
405.986 253.559 407.123 253.461 408.312 253.67 cv
cp
501.459 379.574 mo
500.728 379.678 499.771 379.542 499.33 379.956 cv
498.926 380.334 499.078 381.307 498.914 382.567 cv
500.197 382.302 501.339 382.362 501.544 381.953 cv
501.856 381.331 501.52 380.383 501.459 379.574 cv
cp
431.858 276.96 mo
431.641 275.798 431.723 274.658 431.318 274.445 cv
430.718 274.13 429.772 274.473 428.975 274.534 cv
429.043 275.262 428.851 276.265 429.249 276.64 cv
429.677 277.041 430.66 276.851 431.858 276.96 cv
cp
443.438 288.801 mo
443.319 287.624 443.502 286.635 443.1 286.233 cv
442.698 285.833 441.709 286.022 440.978 285.953 cv
440.913 286.745 440.563 287.695 440.884 288.275 cv
441.108 288.684 442.246 288.589 443.438 288.801 cv
cp
408.441 265.251 mo
408.221 264.089 408.302 262.952 407.895 262.737 cv
407.297 262.422 406.352 262.764 405.555 262.826 cv
405.623 263.553 405.432 264.556 405.831 264.931 cv
406.258 265.332 407.241 265.141 408.441 265.251 cv
cp
396.603 265.382 mo
396.48 264.206 396.66 263.219 396.257 262.816 cv
395.855 262.417 394.869 262.604 394.139 262.535 cv
394.075 263.327 393.726 264.277 394.046 264.857 cv
394.271 265.266 395.408 265.17 396.603 265.382 cv
cp
478.268 358.543 mo
478.242 357.797 478.484 356.841 478.112 356.367 cv
477.782 355.946 476.771 356.06 475.573 355.854 cv
475.688 357.066 475.519 358.21 475.874 358.406 cv
476.504 358.756 477.452 358.529 478.268 358.543 cv
cp
417.539 276.64 mo
417.964 277.04 418.946 276.851 420.128 276.96 cv
419.918 275.801 420.006 274.659 419.602 274.445 cv
419.006 274.129 418.061 274.473 417.264 274.535 cv
417.332 275.262 417.141 276.263 417.539 276.64 cv
cp
396.709 253.542 mo
396.499 252.382 396.587 251.24 396.184 251.026 cv
395.588 250.71 394.642 251.054 393.845 251.117 cv
393.913 251.843 393.722 252.844 394.12 253.221 cv
394.545 253.622 395.527 253.433 396.709 253.542 cv
cp
384.395 274.209 mo
383.66 274.299 382.709 274.146 382.257 274.551 cv
381.846 274.919 381.977 275.893 381.783 277.153 cv
383.08 276.91 384.218 276.993 384.435 276.586 cv
384.76 275.974 384.44 275.019 384.395 274.209 cv
cp
440.956 300.057 mo
441.38 300.458 442.362 300.271 443.544 300.382 cv
443.335 299.221 443.425 298.079 443.021 297.865 cv
442.427 297.548 441.48 297.891 440.684 297.953 cv
440.751 298.679 440.558 299.68 440.956 300.057 cv
cp
372.683 297.628 mo
371.949 297.718 370.999 297.565 370.547 297.97 cv
370.136 298.338 370.267 299.312 370.074 300.57 cv
371.369 300.328 372.509 300.412 372.724 300.006 cv
373.049 299.393 372.729 298.438 372.683 297.628 cv
cp
385.022 347.216 mo
384.802 346.054 384.883 344.917 384.477 344.702 cv
383.878 344.387 382.933 344.729 382.136 344.791 cv
382.204 345.519 382.014 346.521 382.412 346.896 cv
382.839 347.298 383.822 347.106 385.022 347.216 cv
cp
373.313 335.507 mo
373.093 334.345 373.173 333.208 372.767 332.993 cv
372.169 332.678 371.224 333.02 370.427 333.082 cv
370.495 333.809 370.304 334.812 370.703 335.187 cv
371.13 335.588 372.113 335.397 373.313 335.507 cv
cp
396.225 356.301 mo
395.492 356.308 394.563 356.046 394.084 356.397 cv
393.632 356.729 393.651 357.706 393.323 358.92 cv
394.629 358.827 395.753 359.04 396.017 358.659 cv
396.406 358.094 396.186 357.107 396.225 356.301 cv
cp
385.022 335.507 mo
384.802 334.345 384.883 333.208 384.477 332.993 cv
383.878 332.678 382.934 333.02 382.136 333.082 cv
382.204 333.809 382.014 334.812 382.412 335.187 cv
382.839 335.588 383.822 335.397 385.022 335.507 cv
cp
373.29 323.798 mo
373.08 322.638 373.168 321.496 372.765 321.282 cv
372.169 320.966 371.223 321.311 370.427 321.373 cv
370.494 322.099 370.303 323.105 370.701 323.476 cv
371.134 323.878 372.116 323.689 373.29 323.798 cv
cp
394.041 370.235 mo
394.268 370.647 395.405 370.556 396.595 370.772 cv
396.479 369.596 396.663 368.61 396.261 368.206 cv
395.862 367.805 394.874 367.987 394.145 367.915 cv
394.077 368.706 393.722 369.657 394.041 370.235 cv
cp
384.884 370.771 mo
384.771 369.596 384.958 368.607 384.557 368.204 cv
384.157 367.802 383.168 367.986 382.437 367.914 cv
382.369 368.706 382.014 369.654 382.331 370.236 cv
382.555 370.645 383.692 370.555 384.884 370.771 cv
cp
407.868 379.798 mo
407.542 379.373 406.53 379.475 405.338 379.254 cv
405.437 380.47 405.254 381.613 405.606 381.813 cv
406.232 382.169 407.184 381.952 407.999 381.975 cv
407.982 381.229 408.234 380.275 407.868 379.798 cv
cp
396.152 379.786 mo
395.813 379.363 394.802 379.478 393.606 379.272 cv
393.722 380.485 393.555 381.631 393.91 381.827 cv
394.543 382.175 395.492 381.947 396.309 381.961 cv
396.283 381.215 396.526 380.254 396.152 379.786 cv
cp
373.313 347.216 mo
373.093 346.054 373.173 344.917 372.767 344.702 cv
372.169 344.387 371.224 344.729 370.427 344.791 cv
370.495 345.519 370.304 346.521 370.703 346.896 cv
371.13 347.298 372.113 347.106 373.313 347.216 cv
cp
382.409 358.604 mo
382.833 359.005 383.815 358.817 384.997 358.929 cv
384.788 357.768 384.878 356.626 384.475 356.412 cv
383.88 356.095 382.934 356.438 382.137 356.499 cv
382.204 357.226 382.011 358.227 382.409 358.604 cv
cp
396.158 344.67 mo
395.827 344.243 394.815 344.346 393.627 344.127 cv
393.727 345.342 393.545 346.486 393.897 346.687 cv
394.524 347.041 395.475 346.823 396.29 346.846 cv
396.272 346.1 396.525 345.144 396.158 344.67 cv
cp
408.416 241.834 mo
408.207 240.674 408.297 239.533 407.894 239.318 cv
407.298 239.001 406.353 239.344 405.556 239.406 cv
405.623 240.132 405.43 241.137 405.827 241.509 cv
406.259 241.912 407.241 241.724 408.416 241.834 cv
cp
394.122 311.769 mo
394.549 312.17 395.532 311.979 396.731 312.088 cv
396.512 310.926 396.592 309.789 396.186 309.574 cv
395.588 309.259 394.643 309.602 393.846 309.663 cv
393.914 310.39 393.723 311.394 394.122 311.769 cv
cp
384.272 300.134 mo
384.679 299.584 384.483 298.592 384.544 297.788 cv
383.813 297.772 382.888 297.482 382.404 297.821 cv
381.942 298.146 381.939 299.124 381.583 300.326 cv
382.881 300.268 383.995 300.51 384.272 300.134 cv
cp
407.812 321.047 mo
407.077 321.137 406.127 320.984 405.675 321.389 cv
405.264 321.757 405.395 322.73 405.202 323.989 cv
406.497 323.747 407.637 323.831 407.852 323.425 cv
408.177 322.812 407.856 321.856 407.812 321.047 cv
cp
372.683 285.918 mo
371.949 286.009 370.997 285.855 370.547 286.261 cv
370.135 286.632 370.266 287.606 370.074 288.861 cv
371.369 288.619 372.509 288.702 372.724 288.297 cv
373.049 287.683 372.729 286.729 372.683 285.918 cv
cp
385.022 288.669 mo
384.802 287.507 384.883 286.37 384.477 286.156 cv
383.878 285.84 382.933 286.183 382.136 286.245 cv
382.204 286.972 382.014 287.975 382.412 288.35 cv
382.839 288.751 383.822 288.56 385.022 288.669 cv
cp
419.488 344.572 mo
419.125 344.18 418.113 344.386 416.885 344.286 cv
417.106 345.47 417.038 346.609 417.413 346.781 cv
418.072 347.084 419.003 346.793 419.819 346.75 cv
419.734 346.001 419.901 345.019 419.488 344.572 cv
cp
385.021 323.797 mo
384.804 322.635 384.886 321.495 384.48 321.283 cv
383.88 320.968 382.936 321.31 382.137 321.372 cv
382.205 322.099 382.014 323.103 382.412 323.478 cv
382.839 323.879 383.823 323.688 385.021 323.797 cv
cp
384.874 312.219 mo
384.76 311.045 384.946 310.058 384.545 309.651 cv
384.149 309.252 383.158 309.441 382.429 309.373 cv
382.365 310.164 382.014 311.116 382.336 311.693 cv
382.564 312.104 383.699 312.009 384.874 312.219 cv
cp
396.146 297.82 mo
395.816 297.399 394.805 297.514 393.607 297.308 cv
393.722 298.52 393.553 299.663 393.909 299.86 cv
394.538 300.209 395.487 299.982 396.302 299.997 cv
396.277 299.25 396.519 298.295 396.146 297.82 cv
cp
393.898 323.269 mo
394.526 323.623 395.479 323.405 396.295 323.428 cv
396.277 322.682 396.528 321.729 396.161 321.253 cv
395.832 320.827 394.822 320.928 393.627 320.706 cv
393.728 321.923 393.546 323.069 393.898 323.269 cv
cp
407.901 335.225 mo
407.886 334.414 408.116 333.459 407.76 332.847 cv
407.55 332.488 406.404 332.676 405.178 332.577 cv
405.396 333.759 405.297 334.771 405.718 335.086 cv
406.207 335.452 407.153 335.205 407.901 335.225 cv
cp
373.312 312.088 mo
373.094 310.926 373.176 309.786 372.771 309.573 cv
372.171 309.259 371.226 309.601 370.428 309.662 cv
370.495 310.39 370.304 311.393 370.703 311.768 cv
371.13 312.169 372.113 311.979 373.312 312.088 cv
cp
443.235 323.336 mo
443.152 322.586 443.322 321.604 442.911 321.157 cv
442.549 320.763 441.537 320.965 440.31 320.862 cv
440.526 322.046 440.454 323.187 440.829 323.36 cv
441.486 323.664 442.418 323.376 443.235 323.336 cv
cp
501.612 250.916 mo
500.879 250.922 499.949 250.661 499.469 251.014 cv
499.016 251.345 499.036 252.322 498.706 253.537 cv
500.015 253.443 501.138 253.655 501.401 253.273 cv
501.793 252.709 501.572 251.723 501.612 250.916 cv
cp
487.796 264.931 mo
488.223 265.332 489.206 265.142 490.406 265.251 cv
490.186 264.088 490.267 262.951 489.86 262.736 cv
489.263 262.421 488.317 262.764 487.52 262.826 cv
487.588 263.553 487.397 264.556 487.796 264.931 cv
cp
513.29 262.589 mo
512.556 262.619 511.62 262.388 511.146 262.754 cv
510.702 263.098 510.747 264.074 510.447 265.301 cv
511.766 265.165 512.894 265.343 513.145 264.954 cv
513.519 264.376 513.272 263.397 513.29 262.589 cv
cp
490.406 230.123 mo
490.187 228.96 490.267 227.824 489.86 227.609 cv
489.263 227.293 488.317 227.636 487.52 227.698 cv
487.589 228.425 487.397 229.428 487.797 229.803 cv
488.224 230.204 489.207 230.013 490.406 230.123 cv
cp
525.512 265.251 mo
525.301 264.091 525.39 262.949 524.985 262.735 cv
524.39 262.419 523.444 262.764 522.647 262.826 cv
522.716 263.553 522.524 264.559 522.923 264.93 cv
523.355 265.332 524.338 265.143 525.512 265.251 cv
cp
499.503 264.928 mo
499.937 265.331 500.92 265.143 502.113 265.254 cv
501.895 264.091 501.978 262.954 501.571 262.739 cv
500.974 262.423 500.028 262.764 499.231 262.824 cv
499.298 263.551 499.104 264.558 499.503 264.928 cv
cp
466.965 230.123 mo
466.755 228.962 466.843 227.821 466.438 227.607 cv
465.843 227.291 464.897 227.635 464.101 227.699 cv
464.169 228.425 463.978 229.426 464.376 229.802 cv
464.801 230.203 465.784 230.014 466.965 230.123 cv
cp
478.361 241.372 mo
478.28 240.622 478.452 239.638 478.041 239.194 cv
477.674 238.797 476.662 238.999 475.44 238.894 cv
475.655 240.079 475.581 241.219 475.955 241.393 cv
476.612 241.698 477.545 241.411 478.361 241.372 cv
cp
487.72 253.147 mo
487.944 253.555 489.079 253.461 490.259 253.673 cv
490.145 252.498 490.33 251.511 489.929 251.104 cv
489.533 250.705 488.542 250.895 487.813 250.826 cv
487.749 251.617 487.4 252.566 487.72 253.147 cv
cp
490.071 241.371 mo
489.99 240.622 490.163 239.64 489.753 239.193 cv
489.39 238.798 488.378 238.999 487.15 238.893 cv
487.364 240.078 487.29 241.219 487.664 241.393 cv
488.322 241.697 489.254 241.41 490.071 241.371 cv
cp
478.695 230.122 mo
478.478 228.96 478.56 227.82 478.155 227.608 cv
477.555 227.293 476.609 227.635 475.812 227.697 cv
475.88 228.424 475.688 229.432 476.086 229.802 cv
476.521 230.205 477.504 230.014 478.695 230.122 cv
cp
501.435 239.172 mo
501.225 238.813 500.079 239.001 498.853 238.903 cv
499.071 240.084 498.972 241.096 499.394 241.411 cv
499.882 241.777 500.828 241.531 501.576 241.55 cv
501.561 240.739 501.791 239.784 501.435 239.172 cv
cp
536.672 274.415 mo
536.339 273.988 535.328 274.09 534.138 273.87 cv
534.239 275.087 534.059 276.232 534.411 276.432 cv
535.04 276.786 535.991 276.567 536.808 276.589 cv
536.789 275.844 537.04 274.888 536.672 274.415 cv
cp
534.502 297.944 mo
534.081 298.304 534.185 299.276 533.956 300.528 cv
535.264 300.317 536.401 300.429 536.624 300.029 cv
536.963 299.421 536.668 298.46 536.643 297.648 cv
535.908 297.723 534.964 297.551 534.502 297.944 cv
cp
546.268 311.694 mo
546.497 312.104 547.634 312.009 548.823 312.22 cv
548.702 311.043 548.882 310.057 548.479 309.654 cv
548.077 309.254 547.09 309.442 546.36 309.372 cv
546.297 310.164 545.945 311.117 546.268 311.694 cv
cp
522.844 274.476 mo
522.404 274.818 522.459 275.793 522.171 277.029 cv
523.49 276.879 524.62 277.045 524.866 276.654 cv
525.233 276.071 524.979 275.096 524.987 274.287 cv
524.253 274.324 523.317 274.104 522.844 274.476 cv
cp
511.101 274.509 mo
510.673 274.861 510.757 275.834 510.504 277.083 cv
511.822 276.893 512.957 277.021 513.187 276.626 cv
513.535 276.024 513.255 275.06 513.241 274.248 cv
512.507 274.311 511.567 274.123 511.101 274.509 cv
cp
524.854 288.374 mo
525.226 287.795 524.979 286.817 524.996 286.009 cv
524.263 286.038 523.33 285.808 522.854 286.174 cv
522.412 286.514 522.457 287.488 522.157 288.719 cv
523.475 288.584 524.604 288.762 524.854 288.374 cv
cp
525.11 253.159 mo
525.084 252.413 525.324 251.457 524.951 250.984 cv
524.618 250.563 523.608 250.676 522.408 250.469 cv
522.524 251.684 522.357 252.828 522.714 253.024 cv
523.346 253.372 524.295 253.146 525.11 253.159 cv
cp
534.553 262.766 mo
534.112 263.113 534.168 264.088 533.881 265.318 cv
535.198 265.17 536.329 265.336 536.574 264.945 cv
536.941 264.362 536.686 263.387 536.694 262.578 cv
535.961 262.616 535.023 262.395 534.553 262.766 cv
cp
534.559 288.275 mo
534.783 288.684 535.921 288.589 537.112 288.801 cv
536.994 287.624 537.177 286.635 536.774 286.233 cv
536.373 285.833 535.384 286.022 534.652 285.953 cv
534.588 286.745 534.238 287.695 534.559 288.275 cv
cp
513.492 253.08 mo
513.409 252.33 513.579 251.349 513.167 250.901 cv
512.805 250.506 511.793 250.709 510.565 250.606 cv
510.782 251.79 510.71 252.931 511.085 253.104 cv
511.743 253.408 512.675 253.12 513.492 253.08 cv
cp
546.262 299.979 mo
546.489 300.391 547.627 300.3 548.814 300.516 cv
548.702 299.34 548.889 298.351 548.488 297.948 cv
548.088 297.546 547.099 297.73 546.367 297.658 cv
546.3 298.449 545.943 299.401 546.262 299.979 cv
cp
511.071 239.411 mo
510.655 239.774 510.772 240.748 510.563 242.006 cv
511.865 241.777 513.004 241.874 513.224 241.47 cv
513.555 240.86 513.246 239.902 513.21 239.092 cv
512.476 239.174 511.527 239.012 511.071 239.411 cv
cp
546.199 286.248 mo
545.782 286.615 545.899 287.589 545.689 288.842 cv
546.991 288.614 548.129 288.71 548.347 288.308 cv
548.678 287.695 548.371 286.738 548.336 285.928 cv
547.603 286.011 546.653 285.849 546.199 286.248 cv
cp
443.001 239.285 mo
442.671 238.859 441.66 238.961 440.464 238.742 cv
440.564 239.958 440.384 241.104 440.736 241.303 cv
441.365 241.658 442.317 241.439 443.134 241.46 cv
443.116 240.715 443.369 239.76 443.001 239.285 cv
cp
431.722 230.26 mo
431.608 229.083 431.796 228.095 431.395 227.692 cv
430.995 227.29 430.005 227.474 429.273 227.402 cv
429.206 228.193 428.85 229.145 429.169 229.723 cv
429.396 230.135 430.533 230.043 431.722 230.26 cv
cp
466.652 288.209 mo
466.57 287.46 466.741 286.479 466.331 286.03 cv
465.97 285.636 464.958 285.836 463.73 285.731 cv
463.945 286.916 463.871 288.057 464.246 288.23 cv
464.903 288.535 465.835 288.248 466.652 288.209 cv
cp
455.148 265.382 mo
455.027 264.206 455.207 263.219 454.804 262.816 cv
454.402 262.417 453.415 262.604 452.686 262.535 cv
452.622 263.327 452.272 264.277 452.593 264.857 cv
452.818 265.266 453.955 265.17 455.148 265.382 cv
cp
478.043 297.61 mo
477.311 297.713 476.354 297.576 475.911 297.99 cv
475.508 298.368 475.66 299.342 475.496 300.604 cv
476.781 300.337 477.922 300.397 478.13 299.987 cv
478.442 299.368 478.104 298.419 478.043 297.61 cv
cp
440.882 253.147 mo
441.106 253.555 442.242 253.461 443.421 253.673 cv
443.307 252.498 443.493 251.511 443.091 251.104 cv
442.696 250.705 441.705 250.895 440.976 250.826 cv
440.912 251.617 440.563 252.566 440.882 253.147 cv
cp
431.73 241.963 mo
431.608 240.787 431.788 239.8 431.385 239.398 cv
430.983 238.998 429.997 239.186 429.267 239.116 cv
429.203 239.908 428.854 240.858 429.174 241.438 cv
429.399 241.847 430.536 241.751 431.73 241.963 cv
cp
429.248 264.93 mo
429.673 265.331 430.655 265.142 431.837 265.251 cv
431.627 264.091 431.715 262.949 431.312 262.735 cv
430.716 262.42 429.77 262.764 428.973 262.826 cv
429.041 263.553 428.85 264.554 429.248 264.93 cv
cp
420.15 241.832 mo
419.931 240.67 420.011 239.533 419.604 239.318 cv
419.007 239.002 418.062 239.345 417.264 239.407 cv
417.332 240.134 417.141 241.142 417.54 241.512 cv
417.975 241.914 418.957 241.723 420.15 241.832 cv
cp
431.524 253.081 mo
431.442 252.332 431.614 251.348 431.203 250.903 cv
430.836 250.507 429.824 250.708 428.603 250.603 cv
428.817 251.788 428.743 252.929 429.118 253.102 cv
429.775 253.407 430.707 253.12 431.524 253.081 cv
cp
440.959 264.931 mo
441.386 265.332 442.369 265.142 443.568 265.251 cv
443.349 264.089 443.429 262.951 443.022 262.736 cv
442.425 262.421 441.479 262.764 440.683 262.826 cv
440.751 263.553 440.56 264.556 440.959 264.931 cv
cp
419.496 250.773 mo
418.764 250.876 417.809 250.74 417.364 251.152 cv
416.961 251.527 417.114 252.501 416.949 253.766 cv
418.234 253.499 419.376 253.561 419.583 253.15 cv
419.896 252.53 419.558 251.582 419.496 250.773 cv
cp
454.74 274.3 mo
454.007 274.329 453.073 274.099 452.599 274.464 cv
452.156 274.804 452.201 275.778 451.9 277.01 cv
453.219 276.875 454.348 277.053 454.597 276.664 cv
454.97 276.086 454.724 275.107 454.74 274.3 cv
cp
466.421 262.706 mo
466.088 262.277 465.076 262.379 463.885 262.159 cv
463.984 263.376 463.802 264.522 464.154 264.722 cv
464.783 265.076 465.735 264.858 466.552 264.88 cv
466.535 264.135 466.789 263.177 466.421 262.706 cv
cp
475.863 264.721 mo
476.489 265.076 477.44 264.858 478.256 264.88 cv
478.238 264.134 478.491 263.179 478.124 262.704 cv
477.793 262.277 476.781 262.38 475.593 262.161 cv
475.692 263.377 475.51 264.521 475.863 264.721 cv
cp
464.154 253.012 mo
464.783 253.367 465.734 253.149 466.551 253.172 cv
466.533 252.426 466.784 251.473 466.417 250.997 cv
466.089 250.571 465.078 250.671 463.883 250.45 cv
463.983 251.667 463.802 252.813 464.154 253.012 cv
cp
455.275 230.125 mo
455.057 228.962 455.14 227.826 454.733 227.611 cv
454.137 227.294 453.191 227.635 452.394 227.696 cv
452.461 228.422 452.268 229.425 452.666 229.801 cv
453.092 230.203 454.075 230.014 455.275 230.125 cv
cp
524.933 309.357 mo
524.199 309.432 523.255 309.26 522.793 309.653 cv
522.372 310.013 522.475 310.985 522.247 312.238 cv
523.554 312.027 524.692 312.138 524.914 311.738 cv
525.253 311.13 524.959 310.169 524.933 309.357 cv
cp
487.664 276.521 mo
488.322 276.826 489.254 276.539 490.07 276.5 cv
489.989 275.75 490.161 274.766 489.75 274.322 cv
489.383 273.926 488.371 274.127 487.149 274.021 cv
487.364 275.207 487.29 276.347 487.664 276.521 cv
cp
511.215 300.06 mo
511.642 300.46 512.625 300.27 513.824 300.379 cv
513.604 299.216 513.685 298.079 513.278 297.865 cv
512.681 297.549 511.735 297.892 510.938 297.954 cv
511.007 298.681 510.815 299.684 511.215 300.06 cv
cp
452.668 253.222 mo
453.095 253.623 454.078 253.432 455.276 253.541 cv
455.059 252.379 455.141 251.239 454.736 251.026 cv
454.136 250.711 453.19 251.054 452.393 251.116 cv
452.461 251.843 452.269 252.847 452.668 253.222 cv
cp
476.012 253.148 mo
476.237 253.556 477.374 253.461 478.567 253.673 cv
478.445 252.496 478.626 251.51 478.222 251.107 cv
477.821 250.708 476.834 250.895 476.104 250.826 cv
476.041 251.617 475.691 252.567 476.012 253.148 cv
cp
499.503 288.347 mo
499.927 288.749 500.909 288.561 502.091 288.672 cv
501.882 287.511 501.972 286.37 501.568 286.155 cv
500.973 285.839 500.027 286.182 499.23 286.243 cv
499.298 286.97 499.104 287.97 499.503 288.347 cv
cp
466.656 241.366 mo
466.571 240.617 466.739 239.631 466.326 239.188 cv
465.957 238.794 464.946 239 463.723 238.902 cv
463.943 240.085 463.875 241.225 464.251 241.397 cv
464.909 241.7 465.84 241.408 466.656 241.366 cv
cp
443.568 230.123 mo
443.349 228.96 443.429 227.823 443.022 227.609 cv
442.425 227.293 441.479 227.636 440.683 227.698 cv
440.751 228.425 440.56 229.433 440.958 229.802 cv
441.393 230.205 442.376 230.014 443.568 230.123 cv
cp
454.596 239.043 mo
453.865 239.161 452.904 239.042 452.472 239.465 cv
452.076 239.851 452.252 240.823 452.118 242.088 cv
453.389 241.798 454.531 241.835 454.729 241.421 cv
455.029 240.793 454.673 239.852 454.596 239.043 cv
cp
f
351.435 238.174 mo
258.392 238.174 li
258.392 145.13 li
351.435 145.13 li
351.435 238.174 li
cp
0 .617365 .402533 0 cmyk
f
418.033 315.069 mo
478.305 315.069 li
478.305 160.174 li
271.695 160.174 li
271.695 339.826 li
418.033 339.826 li
418.033 315.069 li
cp
.0286259 .00344854 .0114137 0 cmyk
f
1.86497 lw
418.033 315.069 mo
478.305 315.069 li
478.305 160.174 li
271.695 160.174 li
271.695 339.826 li
418.033 339.826 li
418.033 315.069 li
cp
.772152 .71191 .152987 .0204471 cmyk
@
657.988 284.5 mo
657.988 369.251 li
742.739 369.251 li
742.739 284.5 li
657.988 284.5 li
cp
f
626.546 253.058 mo
626.546 337.808 li
711.296 337.808 li
711.296 253.058 li
626.546 253.058 li
cp
0 .204623 .737453 0 cmyk
f
5.24417 lw
1 lc
734.597 268.708 mo
561.956 268.708 li
0 .617365 .402533 0 cmyk
@
726.482 382.109 mo
726.482 209.469 li
@
313.607 436.419 mo
313.607 547.972 li
313.607 556.392 320.434 563.218 328.854 563.218 cv
328.854 563.218 li
337.272 563.218 344.099 556.392 344.099 547.972 cv
344.099 436.419 li
344.099 428 337.272 421.174 328.854 421.174 cv
328.854 421.174 li
320.434 421.174 313.607 428 313.607 436.419 cv
cp
0 .204623 .737453 0 cmyk
f
8.03114 lw
349.491 479.236 mo
301.487 479.236 li
.0286259 .00344854 .0114137 0 cmyk
@
349.491 494.226 mo
301.487 494.226 li
@
4.78064 lw
0 lc
666.911 474.807 mo
593.188 401.083 li
519.464 474.807 li
593.188 548.53 li
666.911 474.807 li
cp
0 .617365 .402533 0 cmyk
@
635.115 474.807 mo
561.392 401.083 li
487.668 474.807 li
561.392 548.53 li
635.115 474.807 li
cp
.0944533 .0855726 .162417 0 cmyk
@
569.118 474.807 mo
495.395 401.083 li
421.671 474.807 li
495.395 548.53 li
569.118 474.807 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
523.26 474.807 mo
495.395 446.941 li
467.529 474.807 li
495.395 502.672 li
523.26 474.807 li
cp
0 .204623 .737453 0 cmyk
f
56.6738 343.305 mo
70.5479 367.335 li
42.7998 367.335 li
56.6738 343.305 li
cp
.772152 .71191 .152987 .0204471 cmyk
f
56.6738 367.264 mo
70.5479 391.295 li
42.7998 391.295 li
56.6738 367.264 li
cp
f
56.6738 391.065 mo
70.5479 415.097 li
42.7998 415.097 li
56.6738 391.065 li
cp
f
1.24507 lw
1 lc
701.965 432.392 mo
706.52 426.857 li
708.018 425.039 708.018 422.414 706.52 420.596 cv
704.542 418.192 li
703.045 416.374 703.045 413.749 704.542 411.931 cv
706.519 409.529 li
708.017 407.711 708.017 405.086 706.519 403.267 cv
704.542 400.866 li
703.045 399.047 703.045 396.423 704.542 394.604 cv
706.521 392.199 li
708.018 390.381 708.018 387.757 706.521 385.938 cv
704.541 383.531 li
703.044 381.713 703.044 379.089 704.541 377.271 cv
706.521 374.864 li
708.018 373.046 708.019 370.423 706.522 368.604 cv
704.539 366.192 li
703.043 364.374 703.043 361.752 704.539 359.934 cv
709.098 354.392 li
0 .204623 .737453 0 cmyk
@
694.832 432.392 mo
699.387 426.857 li
700.885 425.039 700.885 422.414 699.387 420.596 cv
697.409 418.192 li
695.912 416.374 695.912 413.749 697.41 411.931 cv
699.386 409.529 li
700.884 407.711 700.884 405.086 699.387 403.267 cv
697.409 400.866 li
695.912 399.047 695.912 396.423 697.409 394.604 cv
699.388 392.199 li
700.885 390.381 700.885 387.757 699.389 385.938 cv
697.408 383.531 li
695.911 381.713 695.911 379.089 697.408 377.271 cv
699.389 374.864 li
700.885 373.046 700.886 370.423 699.39 368.604 cv
697.406 366.192 li
695.91 364.374 695.91 361.752 697.406 359.934 cv
701.965 354.392 li
@
2.49014 lw
685.458 432.392 mo
690.014 426.857 li
691.511 425.039 691.511 422.414 690.014 420.596 cv
688.036 418.192 li
686.538 416.374 686.538 413.749 688.036 411.931 cv
690.013 409.529 li
691.511 407.711 691.511 405.086 690.013 403.267 cv
688.036 400.866 li
686.538 399.047 686.538 396.423 688.035 394.604 cv
690.015 392.199 li
691.511 390.381 691.512 387.757 690.015 385.938 cv
688.034 383.531 li
686.538 381.713 686.538 379.089 688.035 377.271 cv
690.015 374.864 li
691.512 373.046 691.512 370.423 690.016 368.604 cv
688.032 366.192 li
686.537 364.374 686.537 361.752 688.032 359.934 cv
692.591 354.392 li
.772152 .71191 .152987 .0204471 cmyk
@
1.24507 lw
297.967 96.5596 mo
302.522 91.0259 li
304.02 89.207 304.02 86.5825 302.522 84.7637 cv
300.545 82.3608 li
299.048 80.542 299.048 77.917 300.545 76.0986 cv
302.521 73.6978 li
304.02 71.8789 304.02 69.2539 302.521 67.4346 cv
300.545 65.0342 li
299.048 63.2153 299.048 60.5908 300.545 58.7715 cv
302.523 56.3677 li
304.021 54.5493 304.021 51.9253 302.523 50.1064 cv
300.543 47.6997 li
299.047 45.8809 299.047 43.2568 300.544 41.4385 cv
302.523 39.0327 li
304.021 37.2144 304.021 34.5913 302.524 32.7725 cv
300.541 30.3608 li
299.046 28.5425 299.046 25.9199 300.541 24.1016 cv
305.1 18.5596 li
@
290.835 96.5596 mo
295.39 91.0259 li
296.887 89.207 296.887 86.5825 295.39 84.7637 cv
293.412 82.3608 li
291.915 80.542 291.915 77.917 293.412 76.0986 cv
295.389 73.6978 li
296.887 71.8789 296.887 69.2539 295.389 67.4346 cv
293.412 65.0342 li
291.915 63.2153 291.915 60.5908 293.412 58.7715 cv
295.391 56.3677 li
296.888 54.5493 296.888 51.9253 295.391 50.1064 cv
293.41 47.6997 li
291.914 45.8809 291.914 43.2568 293.411 41.4385 cv
295.391 39.0327 li
296.888 37.2144 296.889 34.5913 295.393 32.7725 cv
293.409 30.3608 li
291.913 28.5425 291.913 25.9199 293.409 24.1016 cv
297.967 18.5596 li
@
2.49014 lw
281.461 96.5596 mo
286.016 91.0259 li
287.514 89.207 287.514 86.5825 286.017 84.7637 cv
284.038 82.3608 li
282.541 80.542 282.541 77.917 284.039 76.0986 cv
286.016 73.6978 li
287.513 71.8789 287.513 69.2539 286.016 67.4346 cv
284.039 65.0342 li
282.541 63.2153 282.541 60.5908 284.038 58.7715 cv
286.017 56.3677 li
287.514 54.5493 287.514 51.9253 286.018 50.1064 cv
284.037 47.6997 li
282.54 45.8809 282.541 43.2568 284.037 41.4385 cv
286.018 39.0327 li
287.515 37.2144 287.515 34.5913 286.019 32.7725 cv
284.035 30.3608 li
282.539 28.5425 282.539 25.9199 284.035 24.1016 cv
288.594 18.5596 li
.0944533 .0855726 .162417 0 cmyk
@
grestore
false sop
.772152 .71191 .152987 .0204471 cmyk
%ADOBeginSubsetFont: Oswald-DemiBold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Oswald-DemiBold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 67 /C putdup 69 /E putdup 71 /G putdup 73 /I putdup 77 /M putdup 79 /O putdup 82 /R putdup 84 /T putdef/FontBBox {-92 -344 1940 1104} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/.notdef <1C60D8A8C9B72E922B87B4B3253F12513A2BED589E8E1FD86BE4C6041810BA890C8EE287D3> |-/C <1C60D8A8C9B794D334C034EA4BD297F03E5A548A7342B8598514995FB875545D4419B5C85BB33531D3C92F79D04112EA0B83EBD94C461CE964F5B936E15147C1CEB3791947D06CDA4496970A511C2F70E9FF12C3524FF93576E3CABAAB4CAE56BAFA0D825EE460A35F02E2740B49C4F80399E7A262E12B2759040C3362659C0CB714EF2C0F15074473FFD9C9FCCB4AAED245A85DDFEDB4B4A9A5551AC730D1B3D5DA733CC6C5630A0396BE1454264AE5B1B8CA06071DFF9490891102322103EA6A41DE66BEC26692B7375BADC5FA957FE8A97D0B5F217DFC9581CB96200AAB34D37BD09201A7E3D309F12FF022B24DF27DF60E104EF2CE489240E335C26F41348E58A5D85E55B6E7ED3477472E9285B9DEBC8DE8A61BC725DCC190DFFFA7560A74E99FD524F01706E029D3AE> |-/E <1C60D8A8C9B765F525107DB574817C848C4D329449B35AEF2DF33975A7EE797B57FD09DD35C2408921CECA015304> |-/G <1C60D8A8C9B7E02AA536FB802D8A81E56285C8EE5BF96ECF968607C1F897237FA27E49D25515A238C6CC19FC4CB0EF58E5A1D9AB606D3D77577E7935CE962FAB561159EC6412F7A5CF3D9FF0FE5CC9986A439A4A16E75E9520110C93FEC6E9CCD53876C9B05A49194AE08E1F31A82DDA15234AAB1E25F7EE545809BB655A61DFAF4EFA2FBD623A518AB78ECADBBA056EF2B8FED00EB58376F4F49266970A3543717E01A73FFE6A6A38F23A27B08E669B3835589B40504C116F4E14DE8BF5FED4B0F2C34B95650056946AD689C6986B58139CF0844D4C631E7D5ACB8F721C2601970BDE348960AF4A0B337823E07B632227> |-/I <1C60D8A8C9B84B913F691E19B92658057325C33942A8> |-/M <1C60D8A8C9B62B949AF1CEB87C95834E711E7F3F4957DCCD89B65FBE6063923F95C10A7AA03A364C7937BEE75690BEC550E9B4D3C055672EFA> |-/O <1C60D8A8C9B7FCB6DCE90D07CB6C1A7C0D88A0C2383DE9F324A4BF22F1A6F4ED2ECA5D9A57D977D404A3E60CAAA916E5E8C4A744A0C3E9B2E459143CBF258E03C5DADA6F1FC97B207353CB0AC0A88C1D6F11AFA38485CDA58C414A0E97C0807FC7683C035CC399089416113DEC6B14E42B08746EAE99B66A86436F6C25E357DA30CA6751105FE94234337E84D6308925E1A61EE61A23CB0FA75CA2C02636239A2B7D00FD54799F73CE7D6FCFB0FBC595BD9C84545330F57069661760A5B46AE02494323664A8530047617918B5A9180163ADE06CD81BF7D38AEF75DA558EB2F7BB66DDD5D4A10334887E03B66C3FC8E543D94CFA300879394DFFA234C6CA28> |-/R <1C60D8A8C9B7F88C2BF40A18FC911942D6226292487189AD114D51AF56B26B1BA6195E05FA500C00C0021D636BADD0AA5481FC6D9F0BF1031B64759441DBB5D3E5E586C266C800A4C5EC935795DF3634327176277E09B71DB7A094F301E0C64F2AF63CC16415C2F80DEEF7CE35ED2D4109F34C8E> |-/T <1C60D8A8C9B76798E378C44AA10E705A48FBFBCD51FA3861E889DCCEACB43D2AE97D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PMZIPW+Oswald-DemiBold /Oswald-DemiBold findfont ct_VMDictPut/PMZIPW+Oswald-DemiBold*1 [67{/.notdef}rp /C /.notdef /E /.notdef /G /.notdef /I 3{/.notdef}rp /M /.notdef /O 2{/.notdef}rp /R /.notdef /T 171{/.notdef}rp]PMZIPW+Oswald-DemiBold nfPMZIPW+Oswald-DemiBold*1 [37.3531 0 0 -37.3531 0 0 ]msf289.439 249.042 mo(GEO)sh348.569 249.042 mo(METRIC)[25.918 16.3418 16.2695 21.6123 10.7793 0 ]xsh0 .617365 .402533 0 cmyk
%ADOBeginSubsetFont: Montserrat-Regular Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Montserrat-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 2011 The Montserrat Project Authors \\\(https://github.com/JulietaUla/Montserrat\\\)) def/Weight (Regular) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdup 66 /B putdup 67 /C putdup 68 /D putdup 71 /G putdup 75 /K putdup 78 /N putdup 79 /O putdup 82 /R putdup 85 /U putdef/FontBBox {-823 -262 1586 1042} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-13 -0 525 538 565 577 600 613 700 713 742 755] def/OtherBlues [-207 -194 -113 -100] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [64] def/StdVW [73] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings11 dict dup begin/A <1C60D8A8C9B600E06606AADEDC94410E09C1966ABAB29329A80B9C603D5F4997D720D9FB76961551668D133CE3E5EBB15D486DF0A2B6A9FE5079E4C38B019D4E9758C393CE14FB4B569CFFDAF60932E278C723> |-/B <1C60D8A8C9B6E73C56AD73F0769AD00C452CA5C48AFC0E8D2185C1883E9346F6D6A36B7C2F05E36EE8D9E77D55340E06E25F4AE6A55E6CB0FB80FBCF80C76F7BD94FABC52C3F2CFF5FAE327FCAFB8D7B76AFC4CB938F6DD96A61C3888CA46724ACD7D91225BE483BBDA95472E21E0C41C9F0B6DE967EFDC3935CB248057FF26BF363F58DE3BB0B045AE2CB3AAC97B090CD13A37D175ACE674AA69CF4352B421B4A63E9C72DFE441E12F4E2AF008121A45078E0F7B0B76B91B7A2CA9A2D1C986C6FA5F638DFFD9070C59B1EF4E019> |-/C <1C60D8A8C9B60287B24E75BBB14FE31BCC39FEA6FCF5BFE2CB9679B7BEBC6B29302C769D62A3ABA44DE9C5C796BDC13CB8469537BAC08428423AB8CBD0411106E59407507635074F428BD5C1F580543CAE502B6ECC3F63EA4308FF8088910B452588> |-/D <1C60D8A8C9B6AF0465A428EC6BD689388CD9F9041816DC799049BD8C88D79071E5FC6BD05E6A60922D181B1B1C9D0DAEF7D53064E95921BB044947DFA18BF618D2BF9DF46D43D8B655D627B15F5E4B7AE5> |-/G <1C60D8A8C9B6F8EBBF6B7EDDDEAE26544537F9B68C601280268D3AA374266A292B479470822C567D6CCD3147FF63BE56E4BCF1C080BC8CF1EC7692CBF1E19A1B874C5122F5E7655936ACCF21DFF1F2B3DD266C81929AB2F7049AEF7F1DBD32682FFD445CBDBF0A8432> |-/K <1C60D8A8C9B63ABF86614E8970A6558C72FFBFA90AD15215F198FC069ABF6F89627FF9CB1C9BD17D0A22E0491F036243C0D77CDC815DAC0E6329BE3819> |-/N <1C60D8A8C9B6A0FC7B4530291947184EA2B01D678E29A1E0CEBEA3E27DC9FB2F12FFA99FD8CD2AFE3F1D950812B8844AAACAB34F98D0CE45EB0C> |-/O <1C60D8A8C9B6BAE57BB35640DCA227E095A902A0C123B054B696724BD0B70FF65C70CB41EB6588C87D8A8C2E37377C42C265BC4F92C1E1E4D282D302CD05C08785C463CA7270CBD08DFA8A9E4BE0FF353077823FED25979D6DDC79BBEFF9D361D6EA384AF20E92> |-/R <1C60D8A8C9B606CE415D3713B70D94F312765FE8E8CF74216FF08DD901D38BD62BD52C6603A3444467506515AD37D43E05E8C147EFFA7FBC2164BC230897781C65D84092D7E9E427F6C92AD6C705EFFD138668FA0302DD74F71B9DEDD4F232935621B6D8A38F265F682A8F1A> |-/U <1C60D8A8C9B6CD37A38082955DE58E4C1C797830A7BFD8A3E46B3CABDC91BF068550D91A215D2A2BA8FE43605B588151339EEF40C6E82A7C66739B304E55167753FE057DC6265FBEE2F65D> |-/.notdef <1C60D8A8C9B7F000AD2CED2D91C8738E548389197D6E2F99BF39E6741036AD2264474D1145D8CDDD45FA26C6F5A246AC44> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PMZIPX+Montserrat-Regular /Montserrat-Regular findfont ct_VMDictPut/PMZIPX+Montserrat-Regular*1 [65{/.notdef}rp /A /B /C /D 2{/.notdef}rp /G 3{/.notdef}rp /K 2{/.notdef}rp /N /O 2{/.notdef}rp /R 2{/.notdef}rp /U 170{/.notdef}rp]PMZIPX+Montserrat-Regular nfPMZIPX+Montserrat-Regular*1 [13.1646 0 0 -13.1646 0 0 ]msf304.778 279.576 mo(BACKGROUND)[13.875 13.2568 13.415 12.9805 14.125 13.4678 14.9941 14.375 14.6523 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/PMZIPW+Oswald-DemiBold*1 uf/PMZIPW+Oswald-DemiBold uf/Oswald-DemiBold uf/PMZIPX+Montserrat-Regular*1 uf/PMZIPX+Montserrat-Regular uf/Montserrat-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 25.2.1%%For: (ayib) ()%%Title: (FP21 Flat Geometric background 2 up-02.eps)%%CreationDate: 17/04/21 22.24%%Canvassize: 16383%AI9_DataStream%Gb"+`H!fRDf'aF545b^b#de0pEFBYB:t0L:!`dT6Z%\Tcrj\U!:!sg2VFt$_RHjG$hr=]2PB0JocB`O75ThE_H`^'3,q&WEoOk+u%5FbDDIQEksTBHF>$O$/bB:S&<X<9?T?*6,bM*dDiUqFJNU9s12J$;*91&D$DYl8EukCoQ-*7$P#1p<-sh>fAqLAu4ea:?("grkdl%7F3CBY=_#^^(i8>h+g`'>FP<O_g\6HE30H(cW1[>V%1h:"L6,[r%o(\i/]_dQlC5Df#b/Ni5A>S'2-37@ugn\$OP_kd".hJc`+rW%(]71o"p7++0KQ!qrqQ=dMa-toP+h+S9nNtUF>BCt^kX2+8]9PB9I_)ZVu4A8!,b:F!5LZ_ms[tK<>>:8<d^+Tkma,PF59%+%QH9o%Bpso)r8BU=s3Z9mg&crhG,[=^/<p7^l"#q]h(bZoj#Q1LFL[s4rdBfDEM?.4X>m/&IKLM8ER:oe=+50Jj>lb)f7B-9BU4cpFtC![%*jd$&?fG3V.eJ4:r)[cTcAF:1!&0nX%j<5!XQg(!:6*s;%Pe_C%oDY7]lW-F6(-#/,4Q'aBfMB<Ulm1\:IjD9!$RQrdhDubUsV.n%IloV-S0%]qa+-=irmZKs.57MS0ZR1uo?ul?-E&m@+Hr%&^FXP3j2k(Orj;S.i=edurl_8?aaaI3$jKs4+U_\hr3;!5W5rs!$sW)+%nj4-fK`o-O!.4><?h)!kr+u!C4TV_sqn?9A//*FR$3O$)IIWglPDm53ljjR[GWM:1FZ9sqOePtj4HAQn>cYd6Cp_8ALBB/T1'!ij%7B:/Z?h@h""tMW@;/]=?fb"7O4S.@3-p);k^X&Y"Rqh++HIE\ljB"@dX5)phNnf%QDU["?l&=?g;"q]&+L`*H[XtBY0PW,ZTFBqZ%6b2H#gsd,\NnUqoQPWDU[K(gt(Ms5"8#656ndl1cCI0Y42MO??%AJ8OKG<XZUYq+agM8Zk5U@#E>gQ\*g(aB*J5b0S-s4SC%^+Wd%%)Zbg85C)0\E@P6(p-Cm/%'f#TDJI^l?7KkE?k/6&$?`9%ZN^MY]f<HK%PARZEDgDEU\%9Q't&]ISh&gi-/c)pE:nM,[8.3?Bk?;%jOl0^#e6qaA9m[]kcJL%TK>:VN#*TmH*/Y+Gj]i2r[(PFaSS^S@P7?,-5XqLPEAk4:&1\('d/S0=ob?Hf1#]^7Kt,-SZ6&X51-k0%n+)OAcArHGO:fl01qt)[H59Y/7Z0W25`h_*14gHn6f%R4cQ.P?_B*+GBHN0XZlk!o\K7r\"tO[<!7;V0FO1eX&mu;Y1ok'4U?6Mt%k)A:*\=uZcMYqfibH@+-UPdj*.Q=ABqGZpeat57,()P\B0'#MS3)c!iM/(n5-_edB7EFp_pnMG;'.jK88]rX<(Ms\00<@/"o'C;q%etLINhP*^[]]V@0+uu)OGW_=C(>8>PJ;:F:6"6kHCC8FAf^qDfRbCG\haU<Y7SVa)"oA%S4;a0@l;7Ir95&;-++9.d1kW2d=UtK\%_bX.i/$ama"6Wo/b0\ql8Qq6;IQA4%K%]2@LF`tM,bppe1K_>C%uj851PQeJOj:4n#N6I@SYi)o!2=2S!?cKUT;)D$0!Z^rI8OYe%Rm:q85`Z!qJjK.q9XNO8?<FrQ(a2a!Vr0?)e!X1"m=Q4(.8XR'd/q>jMiFFjb1ZnPiA]A8iVZB>JrP&[g)fQ%h1i^07cf,BQmZFm%4p"X6!"2'rk<%qG-gAYi56R%iU+kq8HI%0rLuug/#p_,71;>h7p;SWXZK;ZA.glmuW1DcQpc`F+@6=EFg[9Th'fj&,&A3k6WrG,p%?/V<*I5l[]rjCDU_=9j!e#hEN\NcKM*N;-c9D_?k:19@Ll5r9\OS%+W<eT\_M*n9058OHOgo^"l#YsJooIFbHN\P;4KjM.l5.&R(%;ApBB!lh&6N_@D2]jir1GkbF]aKn-a,I=;s1`OHqq.MnXZUq##=PnO?Hi6cBR3/gS:Qoo'bp-\Hn,jsF7#Jrc[Vb:ofg2rme7hHA%UOe9]JXIaBHC)C,.<YjPQ@C.CO(Wf)pZ]LW68W,%\/fc#)fgQ]],i,35j&,KcX.c;#2FHLKl.uYrr.55m;kfnW@dG2%MM[ZC#s_%%Cp*hP8q'aS/-A*Vd+9'SIIqISU0#B*-bsj-++qo'a#/>\\<fI;EqKGi8,U21?!s22\1mj0A%M`J%A,k"p@JU5&(+n@+0>OSkT13t%qWJgdMF@0U3&YtE'S5r'opX[.K4&Km]\*L4RE5'Jo0N["YH2C?;so2>]\n;OT+T#cg`Y0)!_Z/P1k:!(_.MWAW(.:t^u-7(K*h$f%'h0\FHCT<!DRDJ)7^tjB(ZR!@[,C6^K76T&g8'8,4pZ/',#lEZkS]K/@gK_X+R*;GNHFT7663c".NESECtLW$0Si&k#pc;c>Up+B%4bj4$?@dYmh_8G*LeM(kMG:6))d4l3b(paNSUflU&8H;W)Z4#k`m?fKSV^LYc,$n'+]W35$FksG.eEoLDQT=bJIs*Zb%$b+\(O:*%<Tl]`or.d4<GLrjQX<3EIWels#E@eN/lR;P@mk-N\-j+s^lTQW[#%8.Oaoc/RZ1HO+fN<!<a%s#gp;LRErl<"$]$],=T1_P8=gLi%.@e2`X,rdZ'Bh'nn+hL*&*Wh>Se(&\J:HD\FI/TjHpCbRRHF\;0_0V,5N)^1fqB[6fNsR[r]qAJefPQN9+=Br>i@8/BE02Mi[V<S%o1'_+$J^[P9%*R#/ta8:M*-UZo<Z@IZDdZPOFXQTQ3s7"-+Qc+i(L";C5]W<iNt:CX@6m8\."L\$.jU=cS].2mLf(':a5)[dH!0Y%di09h]30VP#*CZb3'gE+X7ubVDc69="%U7?\7!n`Dc0gWfAZ:IrkXJK'ICuFX:?7SHWkIHL?;<[At*&=amu7>6gi+<dN`/,U-FI=%iYAR/DPElLT5DU[p)gcB5>3b1FCt&E?g)Jmo"^p1:rBLka"f=?U]F,KV(7ZJ,Osmh<PGQI-f$CqDh)9m>pD;Rdm(HOoYkACh\i*(%'N\#SX?sao$cq'l2F3<;4+h^C)n6;0Xa&3%pI<;Wm]qN&0]%.t#[NF6kM1b^*(.YqdV_L,`XmuT:=b:sW'ZP*n`::]:QrWR<u:1@%@^Y.BNK2;[gJ;0k;I!p4&PU<JA,PMX<H4AeM9M&aQ/d=4I(de5KV)VK`[8p>Cjp!>Y]:\lc'2Yu]")h7W-!7CdBOhfg[M.#6Me;Y%$K/)>fft[A1nh,.lG-mU?%nK-T8_:XkMn[0rP>hML89*eFMqHT6`@drArV:#l/o-pOr:*cb8-$ae(i5eSkT#r$*F_]q2DYWm'mB?%>bI34HZr0l^@$j,>/QspYLP]Ti3Sp`cu>CnREsOdm`O.NpXoQ7R^.G4Ck1d"XNS!"%!pK1$n1Gp$+*X),P?>jah`<LNnM.)<RbQR%ggU6:'r%3\LWF=;2FI>f(L$\'i\B6,Q6s]<G8Dlp=ZZRQ^<Q@t*+.lRFML*aAm&2DL*L-ZiLCD"1KP`V,;EV5/%c^V"cWf^Hen*F%FU<$_FO$&]h""V.544S`ZY1Y/bmU\>&-/LI&ER!nn&IW?\rX#2>/bJ*Z1iI&&CJA1p,ZL"%?S=SF;s!CnX?<pR-[Vh#%Z*RZd(Iu%_sYlsf1?Vgkd`5/VT$?dd2ef+N[]#(Dg1.d6a+N9=J\`:@3opeAWL?WPn#mq!)rgu<[>u;iIA-TmTNm@":XThD0LS>-S*gm5()Nh%0/YmJ##&7'%_U8H&4r!O@39^P2aY>'8490K.E`<6_"GbWKMNJpLL;&Zn49[G@)?3D!Wi:%camf"CMmeXSQt;sbhtRnCL0[YHBXs/%k:VVTSI;>h9@I2<ihao0Ea!'HRn:4!'/+4bbGNN@h6f7'VmI>.SWVu=XQUtU\55E7TP<4.28$jFAQmls&N4FaN8(jYL;]K5[.N1n%A$[K,\BE+i&nekq))$!Lh<pH<_PK%XIbZ9nB@'9=R[8:IcHonWbbqbah;t9T.OA?.[UtU6m[=r1Mo\!)DZUM=^0k6dk#69:=.'K+%D+joXPMsM+:M*C6R;Xk)5C8]*?4cn%qf5hP3(Pd_Y.9tf*(ARmS2T+^MJcWWhHdPGOcb,Z+b/JJ#X6X]A.p!DjfXsoi?;NkF"iHi%:d@tWkUq`PDMEN/c'*(;I'^aAkphqQ+Q(sC&Pp,do'K5o2bk'WJmP'H]Xc3fq5`MW#\VerhE:&b8N.HYj;Dn9KlhAP5sDi$q]r^%%;e-KM/&c"m/;!n6ok:9"d9Y8l(6M6+;9DmTijM;:0'[iL7H>K^ocJ4/GLVs:<[--1S5(O0Hq/TVI<aD2X0D/TqB@?17hYU@.BD;e%kA.g,=e,'e@--$,JbWKL:9VW"GBt9rD'<W?d,RWF@M\>dL"=,'RA_$Xp=!4SjeidM0BEH=D1U$kh_"?5mj_#E!YdNVfPNRXs"bIr%Ormcf[OIY<22]#9]G[_Hnj9f=8<2Ego8&'sMGSHZn;9k,"6h6HDVh1WiMI@AM2,5XS=EFUMq^st>`e'!]4qZ8,8f3L1sBp!N*E.R%bi40g4+h^C)n8Rr>O>%tO`I/-f$kYYH>a:_>N7E>]+Bg/LcA5bXbb=@+q>J^DIos&KW<NPpmt^+[qg,r4%ih82D8j:?Q<G5foJXi%OVIE9^Nc_!NiHU5IscSDj\NBZhJ4h7p7M@@dHU$_Hi)-]B)gPrC?gia'tjKXDu\MFJ,XL;c+<q6CcJp,btqX4ZfetaB=I;2G^I`=%T-A4"=aqs<oCGf<No14E!"I8`o6`XG\+=u/caWfC^)aDui,B@$b3pf24U:GJGOXC5-h#Oph?V*m_U#>#OlLal^ddFo^ta'=KWQ=:%J`d5A,1kN]7(29c>PK'u^Hr1HW8?Hgr/B1@@Ul[X45D(Ufplc#q;`dap!i/L!6>;'7FGIDBu$?b2<RAfIS4i_>Xb,bYJ>:O@m%Gg%n&FTHnahOq1U'",'3s,MY(P6s#[irTi5S?-F'"6M%Xs%q,'-glkTN+_.FH%Pd%`RWm;K4;>_T$eO,<4fHCnsSO'_I1;>-I-$V#EX%-ncDp4]YlCapU[a_5P,hUg>_^T.(V'P(QV(A.$;O]O97HZE]3k?euZ_^[ClCOYnetAjmJ,EOsq+h"UK:CK#n]kg'p'ROY$4'V299%`5<J(#um3cnQ-elUu[(UQVAZYKfPH_L>Uc4DK.6,m1T?C-MIK$!dqK&Q$5@2f9?_lB2E)":6PU?#mOIK;9g9ugjB7PN+1bH*m<Lp%Mo[uG_ejb=1E=TsZ5K)&=H5&86J]UgZg(B])PY^H;-+YtSdPE9!o$YIDF;?(g$6mr9RX10Xk]nf^Vm*P%V#F@Dj5RG>$5K)]C$Ad%YAgM,G:^XEfM$JWVLfDV.?60&QV="0."ggVZc'C7VeDe^,Tpor<"QU+qcN=QVe<@V<;?e9GMUaT_)<E&GV?M[&GbfXTYKOg\Qnh>%\3aPIEnnD!pF0CtHCJaX5J:!^s/pk:3H6Z,5[A#sGtsl(EkAAKnsm59@7YZ=g^'7RWt:]8M/sOYSeL9IEAhU_F5f;0NeFWRNkA[T%8B7ZZX(\M"^G3-+lE26mm[00;feAt9f@42cp1L9l?7?h;)5AXrlS0Tk**bE]+("a&F+cd'LLOc7F$6FR2#c;US%Ku+&6@X"8)=hJ%1P[ODFi7.0Q+3!u]ao\PEmTs*#tOU+miO^OkZJV2UhS?kGF]?hK<@^W+:odXY5;*>i.g_>1!dE%kc+B(gG5-ajEMHnk()PhKT=5j%CI^N_)nU%"bNCdEeb=gS.\QePi\Xu.*Qt.1?]WkCg=`l#dt!'jQ`i2Y[a.#tn_Eej3dShH39nkXE[.RJZFgQ])i=>H30sp\3D_Y#%OSpsLir7\f_75KBrm`f4->-PWE;tH2>Ks=;L$"(tk:""kn1=itpj>!G!oi;kN992*\1@5_hQ@%Dq%eJ5\+&b:04`,7:'c03m!k4X%6b+a<@YSE`Z%;T3E2pud\'[b\Ea1L_Z_c]lNR_W5a)MtL?8@Q("jYHfnTL;TBEHH#%s1knq7QYkG@B[FJY!hU\*(eQ!sR![r+rh;%I,$u2`<8=_d$:]p\Ucf#4?)b*\:NM!'^dWIGC((g<%1YHRj;5h:3"((]=^>rJ;qlPjSnf_fH:q;!Wh3WFi!",q=p9gRIn"N&haND%*9_i[7W;;+46.2t2RMc]1:%-JLp,]aL>4-5"hWIGg#h%T?iEX\Zd$eRA(,;B@0O1p(Gl"+C]r1bYfkF`.G*C(o&C*JLSkdT&iuX3%n%OXI[.:%9h[b%/h"^iW_D[)X\t8bS4LG*32Q]OG"5TX<ZB>sH#%2q)\jQ&`Em.fdrt4mLUc9Cq1<C-&m]$]GJ3WL^X,3n_2r5M?%Kb[iU4XNqD:jclE>eS5lq\nmc0mWuHEh4Voc!BGF3qs.m'UcT(64[el:Pg-IK-!Hf0mLP<`qB\UT5D'.\RIs:,29<(ghZ3nJ,b)i%k:/C[Cd68>,IdX,HJeDI\,X1L_=V;=Y&4H/[8["R(O@(3mGolkKO\GNjeoNuE?tPN%>2tRpAa7PEOX6D=5GA#QXteq3P;C>B3)k,%aroCH6K'`^<DFqX=KsYqG<*,Q&nSJ3pdWDXmP=[r0]%.t8F1:G,&n#'#M[_(2C\jaJ;D)T$uVVuR&<9cTF,hF*BLkPFlc#:)YA*l%CJTSo%?]m4W68:Y;@VpI.Hu'[_,n`9SVAr7b2g'7?-g6?2o2;9#9\G\"-?&daq_X@GL_E`3U\r_5EFheY1dj`*mhi6&RH$0=jVu/%B%--V^.X""B+scG!/T^+_r1su::u6bWjV?3#QfNY>PT`0s(7lm^UOV^'u>_0a&bA?`O-c?>Rj;E+'KutCYk0t?Xt`gh&YOCECIDR%076>'+3"n9f1MLj1lefPS>qF,j7mYAPn5+KABs"S9^/YUPqJDDZYWjWe*6?7!l(i0XVDK:.WqB2=E(D7Ru@5>]Blua)(]a&G@>p:%\]FK?kJ)6+BPH+7T"0)O:CrR+YRQqu&@6<qK(<rF5S)n!f=lnJK?4UQ"3ag>R*En"(.n<N^Us!(M;<1n]=FBdkYEbbrd,m_$<RM/%Np*X6T@$,NZa]\47o&.7rMSVaam(;1=^Eq5fYk0!_Maq/=fc[=P]X0DRTI)]e7'@kFI))q7?t-nShFY%]>5uUZE&4^\A@IB+LGHC%en'GQqWk3![*.TD[L91l`b@57@-+u1nZK)72-$f`$=kYDoiURg7TWa/T+^X[`tP.J!uR_aI_t[%3UW`mdm!8lo\l"@r1q=C_;?^d%&Wen&Tu$PGi_XCeO4bTO_MS8lf]'h,qe(BR@@lTVcAQLR.kT'NJWGDt_e.ZaEHKGIOb!P[lTgjo8f!Khd&fQ;PI'VC\=]WHoH3uq%,H',;($pnW,V'Ain-/m7(Hq*k5C;T%jS3OekkV!of,$rZ?gOs0C)c[2$".YhL4IHrE,*iME_HM+O01GMk1`.@puM]+jc2-Q6<%ZN%m(:H$e7nEN6bJ3NJ8N$FeAJ(9jB/D1e,ga"D]JTM%!o]j7HHtUC';Hg#%q1>!5.'<&*7C1%5j!,=!'WKIfM[FJtIJn(@WFCDso-)%$iGBpk!MjH5'^0)IK#n:+*GDO@DRio7r,1c0Yo<\F1p--KX!rJFf*32EQ2GrrqLmLk\UmQ$bb,q1E\tMgWSAT"j["XkR%-TSLI%A%5b\<NE^8pbK,5/%r5&'+Xk$S:PV7]R03\:m22;_IoK]radS*cPC@A!.K"lQDn:^Ia/$-RMMbogd4;%1;&*ZJ+"[C@*-;MJ7/1QgV%@jr`*5,9uK.[GW-&l^4F^WQCH=*6Wg8lNjA$+&!M^n4WbIoULe(T3c'bPt,U1&^-b=.s\Yeh)2GmQ[%Y5]AGW4NTkYQAVN#^k:Vu%*KSTf.+RNTP"L?;Ys^@<N+)::<Z*1"`"Q+mPAd%?oAlCCHqOaIT=KmHacZA\aZ%Q-rYcF7'=loK.?klhDUb.3'CE?qs1GD(WYC3N%a)nk<nl%("l^_pc*sm4X(R&qjQ@ut_S73*cKbp.F*.!msWMCY4`\S=eb,JJTSI"9VE&nc<%`I(dE9V'_:FlB\RIT`[,qfhrBbt7G%P5_EN#B+7Yc-*IAX?C"Z$0shE6:=^#L/'GLJY;69%6"M)9I?<^gBGC%Lr0`X\4$Db\epWfe$(F.kpXPm-TlrETtntpm2n_Hf7TjU%?CJkUM2>$hP$)\u`Su!`g[b5;[)H*(bl>eHGTh>DMHr-7_UZ%AhE6/YCIfl"T(VGQc^m!1pr1,=gs<hthakdNJaWnm:Z-SHTO4/*%^(=$Q#l2qQ\KIH.pOA`[6J`CHSri]"r0QQM08.dW6GAjIU<A0MSSrg@rprOT]j_[/1@7N-S]+g4E;ch>/[X@BOsf*K)tn&<W)%'D%rmqI^SdG;gAc1FA@J?Vmd*[3OG2Ds#%Qt^0\!Q#;.H@>-[J*)&-gE&lo`t#'U3'^RHYm]Yd1c2&HO9\8U>?8LHU@_H(%R.(Od'PG%Ms9+PSri]"]I2c'+oeB!ljMc?0'&)h9I^uB45Wh\BAn,&rbjI+Io=@7.H@#8s+:B&pfoJC>b3WdD^X*Lpj[VsHFY5;bn^&$''f*]%qY_>DGr`Y1nsqoMogL.Uk;#WB>S59hrGQ8[=T'6QT!*U_IsNm,POY6's2-VK4!r8ef#5H%X@F'6_J,#[<BO^g-YcSmRfqM!lG'?l%r[3V&/l-6fL"ZbHB9,4Ojr'q$6UH2FA(1lGGW+o</`X#E%po+_BDO+DALr>"qW\3.,7X!Hc\1sb=O2Z.'6!4@Q+8A7LQ-t"_KmQ1%-_WX/jYd4B)<]jdV9=8$jW/=#8Z49dTfa^WF0[qVHR.WUl+qG9?'9YDHSXHAnUGllrd-EWgXZ%O27]sj>sG?4o2e.oZC\;oKXE2/%s1CYc<IT2ps3D"!0(J6t=tCB"cX*TS-h.00'(c=@-h.0-%CCUii&AD0?I,%(=S;6.4b<&.Hr&\4:>gI7r`fX+&#id6^]!$@TC#JD%FSku,i;XP+XFVZYE.GZn8B!4Qf=s@(mrE;A?2\U@nkZ89n%:YV7K'\FWh"Pe%+G05IE"?ta:n,oHO9\86Jh<*]HG]G'_mHue$3Z!%rn@$cJinVQ$%1(!s4SIdKlA4PnssGPEL&#d7.Xa\OXK5ip(I"N]I2c'+[:/os4Ve">U2[rCt]9QGXDCJ0>W-9aEsU"06HgK"TDX&%lD9RXLM?4Ca8]?$T1s`XX2X=Q%'&<GHUjuY#8;KBK*gZl\]LZfs82ccnopdu4S5p)4gXj?81;fcoupT`S$d`Ai-2@h%MS^u8+/1K%'DVU<=ZbY@J>tc%LbNg^$[_TKB?tntXIXV%*HrD<eVfk5pTEoWm+F$9Tg"f+lg;Z:HZB(jODf9OIZ_69rUt&0:WWS'-2:7Cq'k@s%SuDBOrC!CZrR^Z1E^0<G]-r!"h@oRRW;#<#T"tAR30=UH_8UQ.+Jg"R0AaO(T"tB\9@+@IT"t('rdQHf`C_W1rSUJ$?$cY1m2M3<%Ik[!e.\9C[)j9'4UphL]/)G^r<^4MIZ#`iko>I,2c[H<0ossEln)b_<K`+\Xr3'r7rSs:5TCdSY1>\5bSrE\"1>YYbnV$gi.-*U=%FR(IlWX3Yu0`?jf'GO9\c+(]M;g<9h02=5;DnjWpTr[3A\,>2*@cZ4H?UR5//fWBrGPh+A!WS$?HOG:6L]$)ergEtDj>?]t@PE%'%6]+Vbkp0e;MMfFs.jd"cr17N[<!M&e[*#.#@-;&)I=Pq!Q'#ZrSs`rV&BIm-O2YEU.h3,l')X$VIsF-gH8Q;Amdsi&@JT(+pX8<V%=IpH?3.t)0iIfg_1g",sK/E'$).[Jo&i'/)PD[E0.0[ZJm2:.U)MfpikPZ<n`RSn!nTS?BM%_E7^"jQFnh]8;iHmR+W'g1um0@Zm%(IWaU'S_$cH4BLOH\&`:%-RhWS>'J4A.MTq*J](rl7a)Od9>EdP>3oAU1!.sgC.b&hI[D-56q0CIbJV:KK@TsDD`C9oFAm6111M5%a(U`)PD3LS=0X%7MN1Q,/&4R\4_GFmT\D<i2'%IC`[R/SAWcqQ7RWi!cbU1gD8=NV^ME>riAOD-$KOeJ56aHE82I5%Ug/M.AS=J^%A26Ni?PjYYp]2^9_gfK2`_H<SN4Phcoi$ZkW>'_+SkPgaMIi/3K-i"LF;@e9f?BVre$RhC!l0Am\Dshf/;\ZVjH^r^AghpE"u$4?%g&Q.Y2Mn2)-N0f2rDKm;Jg=(2dKmp)N'^H2Vc"Bh<KI;r/Q3p*''$YPeR%9D2NfdOi@,["/7?jBL$"._,n]POF_rC'##50t9r1S\%9rS$1;?.`iPY"aB1l[TX_d9<1RRR^J<9FW_D$iEu,,4"d`mmhP%"Jq48gP*hhAFU>$nZ1J8LMsWEg+$aV9W<q!En*OgXrH/+9iB!%K%WmDbi@pjOuF)o,isu4FiC6.R7k^ZLNgq?h9o]&OKbHWN/W(OU/DkSq5RAYTcf\r%qs84<e8[@PtWuI]hksj`Q5E^P=_To5XdW,%:c1%4[tYbufBqOYmgR4QEQZ-$,]$pdDD=t*0m!cq?d"EcN2fFgW^Wt0Hma>F4/"%%IQ@OV6E>&["bmpTl7eEQBM*_Qs6)?D*d7.)%b0Q_*_iGS(/$KeBk-3&%"pK1cq>u^TofKA[i&?Wa"24ldVZInCo:jUXMB"-.LsR2/cd"M97tqB&3oZ_9QRk@#*_*>nO%t?DLO'7Z%[?Nt-#m1#C!0TSAX3:6&K/!5P"(mDfT)%t"j,Po&7,#\6O1mYk<Wll;7R[PJQQ*.\JFVt+d*i$bK,$I!0H9?55]Qr<IiX8.8VO9d%RqB:M[m[BsZn_'^VBJ#$K/\Me#j;J=K_+kt9o4RY1gE\'G[cM,dR+H#E<\5/dZY`A6YRZb[k&G5?tTE)1oNCldt&QVrZFQ=n=eoD%j<+pO,j[K:([sc_NGCQ'W@.<tpQ8"#hIJdT,$9RI#QZ=.)P(1B4K%"jT,*@bOp`Uu"`@WtKLF8K/j974CDp%/43]FPrX^8r@44%E%*"9Kk&goi`D6EKYFuFeIYlo#h1F^kmFU>g`d$pst8!MGD$Fm0Z`apRs1;i6eV_r-L@[)^:[uYMH643'=;BLo)Ki9EM!dnLeZ/(0Q%3XoKtbX:Uf<Q,I;.ikmieZB%B@"fi`&nMGmdjNbTo2@Vi!aZOj0WJ`CLe"-`om-8kQkeKmBgX3F@61)M4_d<]2`TjmF5]gT*iRkG%2*pNCcHoL9`:ib2Y%>qD8S2/N3#??biDthNK]?=+$F>^],+N24e2,Wg`m]dAL&nU>THUOKlf+X:;#3j4!&2M$J70-<^nap.'T=Q&%?UTn"L--huf>2-"Ig1FDdH`UiBiTsan3pWFe/.BicSYs-JSrn$$'/d0>\0AR(2/$<U.j`:?P?tu5<FM/;=cW<4tZ@mKB:FhrfEHH%4]E'6dP5=9ZP>>'Q=kP/=K10QD+$$]TkT!Nj<RLu_>2Ef?NYe_eJYTN%c8.OR'U=^;OON7mmKVfb8kb/8R\]&;?aGR[T\Dt/Dj=7%33Mo('R8"*SCA>Z,?E,kr7U$on=Qu6J.kG?:c_;"jktXS!G>"A%f@u!.nD<rZB^Au+L4/0c[o`[quCRp/\a.-1;Uns[&,FUE_I-`%/i!@FGV5MTMCQ@d'8]i.\g9LWWPL"Cn$@F;"L*$(4PH\X*;2h^<.X$gn0DiiQpHWhZ^mGC,QL4lck2&g<5XZqn^pHP+7tm9`0PsI%i,C!h_gq'h'mhuP+eSUl\/u]ocmCnZ4uH*"qA]k0QGF8"U6S^U2&OHY(mBP@$0p3r\ASc,QlG!'\*isq_u0_R!6I90HVKb]d[;q/%d5BFuj.;Ya6cX%IQH/Tl?+-!t=f);Z&&@CVVoSTZPZo@MUkgI3e`US%)rT1_9!^;ehP?>R!8-/$is/N!NlSTr/Z0>*[eL8]4As7m%YegU-W5LU)D"!':O_uUtIG!uj!@R]j?FIWFK+n-$"$r>&HZ#hVg#bg:`Y7U$eP%-\C8NI$UM,-<Nb]p#MtI*4dUnAoU>ljD!GF=O%>IIEJo"6Hs00pE4(%>2]+DW7r"X#:KhS."GEb,$oCtl?ceC!2i%0Eh'[:H'bk;(BRHldOfNcQGOYdW#JAR!gO=S%6s79LDZ<i6+4%&l?=AoCfECn5jofmMGZa0@u`H%cM?a3ucQLM4g+r0YbJ]0q'YS$!WjDX95S\dN"9ujYC/X2A0OWTo;F8o9"I'2a)3&Q-`_^VB#Xu%8i8nohLa$\#<('q3rjX:HJue76./k'(+kRM5R1t$C"mAASASVK39gc>)2$=k+F"S`!Kn]Y!Ju"UllL34H;;M_)iLrbOkNd@`,n^N%TD:D"Hf;=p;r\1ZrM,q)3]@oLrC<ONOF?*c25.4B-HN!G]8%<-3ZRdCm@p%183lsr31r?g@j?M!kh\>^Upe/[_:rJ&eJWNf&+4E^%fF6oj82MPqESqoX\Q184Q=u7jHQ5X/6hVdiFUkT@I^OMQS=h:.Plk7q(4JOl>dD&'e-;:S,cn+oZ6%gorAOIH+4rbra6XVHj'D^k%V$XQFG[u*EBn40'Pf*5-PY@#o^s0e1`a9@CnWu6/(*1Hl_;:n(__6*]A,%?>)+UT'`j_=W)M8864^i.oV_Phn0l/E-/\I\ap/X52%@:@*F:)YQNVf?GgqdEr'qTqg8kEHR&3e=u01%n9g;qP;V)[763NT$JE3.\qq@>o+Z'\6%mK/nqOL!=WFRo@Ic(JJa%;?Q*-N:Jh!%9,uu)#4!/e9KJ#M089?kA%[r?0ZCP^_:Ad\_XYLsckmNQS>t3p3%&8+dBT8lS>t5ac!W=Ea*P`O&rlk,i4i[tSAA8?7TF7>`,LaR%U_XW]k+0?M%n7XWSMG2$X>gD-h@F1fY8C%13&VP3;ZiM5$CA-0KZ*"'K0tHSNmWWuA/'[f.YGir,Yi!2L,_<JqP"Y5,f+^hJ^"A,%$CEe*BsD#C\4"2'a.sfpi,gm:Nj2@ePI%c@:12F&Qor7*`YM;fHO#aL8L'Ccbf9hs-IHL#3abm:8U!4MY@*:r(t[\t)s\?mR$\nG%#t9fNBl&c;jq`sT@`%dtf%Ad,`a:J<@FE.E_<h\*J'kc"^q2=QLN.\Mmh_0+1hI8,jp-l!5g8S*E)hU[E"$>2@e'hplkjWk0Go^X%p+<^(B[$1c":o)N`A%CFbq3h>j6I\O"h80^o`h;DC!;ITNGf57goeYm(WL-U9njh,i+=mE/f@>Jd$W7Z0h7)?PUqe5+W(Qr"c_J+%S$3L%YAfEM#Vibg0K"[^)jpN??k\Ce6O_El\,hB$L?h6d?"qN4UbPN-``<abio0kUAl7O,!3SgHk\tkUPJ@Sjf9f9iR=LYG_SF-l%:X#*A=<8:!R/Fa"))eT6W&WgH^L2dWNO^;CY*Lc$M!JMT//bF;=`cJ9UVPYBgulV'=%lQ>QmBQo(76#ULhe!L\B9aDLhRI]$b/?M%.;<T-@d3rg#"DK8d>_Pl,2@u(2C^&jNIBft%U44u="rTh]6VC<E2d68B&ag;TPu+oL4&+@Y;hV5+l?ZbG>QMUf1c=HitkMpRdG-j%\$ecmZ=ShC(Ou)]E<'M'kcOA?.&L[DlX1`34;[i>dEcg8"PO,1F[TqOTS"EYfiKs7"Edd?%=BK&I-DK=,R4tMdqH3]M")I=N:gk]%dL6*V<`TjGD\aWG%c33G^gadKUonc5Tr2_TUrGLc3a.Fi[NGJL\e.>[KB:.Cbm_%Y,su.LX^rA*4pd:\&Ib<%Qf6;1_u?B.OSmY#%+7Qp-063LlKQJ\<7V=$0`IuT;P)NO5KJrDD(4:1&U2E6C=MYL:V%nS&!Lg%13MRiF%BhSeC^'7HT\\hCG'=sBQ%th/H"@ZI9Y1U=%Z0e:=Da>Drn$.fU9>\,?\DNm3qsAV<"l'OO$0)cbn+=uh"AG<%pCh7jYuVrbMG*_p8dg=YkG'VS)J`hW!^-UhXU,3WFHVEa+VYEM%e`;_`;pc$.TW_jV1%s=$MOMUjDp_4'H02KW;qk?-b,2EGl`(RD3mIqg^']jUo[`7c5W<Us[`t6BcXV<@`^V-WkTOqb:f1"B@nT3H%Q<-t&`cHjA@paa'l+O%[TX^.A^7j['C#3k36@D;NMD1FR"rG+,d&?T."oihBGR?e3qdMrG+!\Wi)XpAjI_S>L#&)`pO*OIn/AXsj%8P[cH-"GlNL+PDW;/&hWFp,JOa:0)=+Hpf$[O8NQ5]S>a.#K-2g:]GRe!:7b1't!nROiU(XA'B$-"rI6Cmo'mZu2]X0aPi&UdWD`%q!](fTX7+63l0E*Ka\Z4KiP#Yek\\/lun%PMd.HkZL:^3UI_<MS+8i?P-l88I6/jr<^[L++pu^1-B%tpoT_7?CJiXC_.j[1JBS+_%.4X#[*9k?F3h"!qD0M4IA(guLpC(#,>7c;=$W:+_8WD#gbP$c]?Ot>^0^Vqdm\oqI.E2]i60nRr8RnkWG$R"jC+$Wu>Fa2gl*1^s%".92OfNPcK^NA?WU?2k&LSdn'FFXX@BZB_<cU9*td0frR6"e!fO;p,n^k=+k2NiBdOWE`i531CGj9K*T<LQ>nF.iiZ"[Wol-[O`a%aq'+75I.aLd:eF&!]H7rYT'Rpm&@]B$&rLJ3+c8Cn>'ZgDlRN'PU1/lQl;l#d'9.D5#?oph/&%J+,EsW(pp.^bg(".U)ihu&SRBG%]Ms7'QQeO$>I&F)_TmZskh5L1'^9Tjm.cs+R)Nb!9PUnOSpQ*G1i0+3T<tCqQPJC'8?[Rb0>['[r)haC=p\*&d=G=:nW9J?Dd*Y(%(S?DD_,&FWDVgqO7!,XQoW;t%oW(2SEl`s>`XB-fqN=d0VMtQZ%:CMACNM+%JH?b:i8,;SkX#t3>LBP&MeL10*1*!/>)L=c(@;fV%%CD_,aV78X(gH6U'kk3oJ1[U9(GhC:Y\BR1*g>l"3ljbJg.6bJ4^h_mk%6QH7bF0cO#Lh`%N7Z\^=0FWCqS-=>r;bKf"j);*,;=i%V,XGtV6b3f?Rb-$F=*Ca1D/?W7t@NEp)3r@UsnLmXe(<]VJR$`"r+j.A!>)p\tFVM'G:7r2$=ihepNIbL,Nda4K$&hD<HN8Ku?gI%$:5E&AWmKR8!cM+L7u/Wr?iPj`hfVX[^56LZanh]hA\*W^j7&^j*^DOQ/7uPSdVCZ?Q6=CN:WBOSR3@Dj2>TUU`hF]8K)'+q/,*R%IRd[9d9K11.U15#.d9?PK<,8!/hAQTee<\T5\/i"B.$`9<qeCS,rQl`kN^C691RmFonA*<Z/skiS(52<@^qi,r[o0]`Sb\(^P.BL%Vo$<fqWd(W6L\C1(I0#>*rccC^(B!3:Fe9sYU%&gok`pmKa/]ccbQ0l<&qG.Pn>!e%Xal#]=`W#"!:Qqk\K^&k8f"Tq$+T'F%j1h%_QQJnleZnBd=krrd+@8UZZ6&\o'"n7/A8G!0asbZ^;/V$9lh!IY`!rYje)"NIj]/trH>Gc:+_dG'fUoQ>WR%i9fMo%U"oM/#&*Uf%%V;"$mg@D(cflXsXtF?Gpi?f$JM:VtMksb:(W[Y(nU&Agjd(bb1+NUENW8SR^`PsG8@aXkKlZKt2tE$fIs]Vt9,_ra\8]4ZI&ZoO%BOplAI96;M3<;Z'4hlOQe=ug"ibKGp\]KIGX8UG,]1_)Zkn>0A]DB:5&^rKR<g*]Z^OQg^dW3*be)YSl:rll2QBRcc!g>628j)E&%[f=#M*Zb\RJF%WI\/4oI((/;'PQ(Ge<5fO[dUC.s;P;>7i/WTjT[W'a23';[ksBOt+CJ1W*j`je=ASUV*Q1G:[_hW'j?X-IJ,8Z!%RJ;>rVH,*.Sr9-lXHtireX<hqPg,;u5-d*uF`#Ik/R,V7.M'[]*"XpfU,Fln_ZeB@5WALAOn/\:jB&'sIUE;p"8=)@cSjDH9.XU!%5MPdFM3%FmQ/L!AQI+RfT_hUFB>f9CTe=/gI:jY=d,,':mMC1uTX`qo1pl&o$U!XaUDmma%gEudg&k=E%g:NRPOj"FD?oLjfah3_%bP(g\V^WG"8Af$YJlh1O:]t:`NBCAT&0C%;^[O?,^*EH/]f13$E5\?Ei*qAh"C3t*:>anr<Cq\[]hH@FkB:`pSu"L55(Hqf]]+Hn%KkoE[@9+JS]bX`+[OpNq#)\]*9Rma+%DHlm=?gTUR#tGnQq``MC[;F1)9%FPXDkRk\`*r;d#N^<'tB+SH1%WnR2o[cZ'!RXhVi="%-5A^e9,6j=p=Kjnj+!"9-!T-eR]:MbQgAI.R7,I53g'A#LN6R&@;j`N^0]E_msoL0J41b+13hGKGJ9X+b)[boj-L$!=?5aEj+MMU%7C/e@9OaQ:1JD,R#seF@c]lYZnnnl##3/TTg=-X6?`=PT5`V.`hV\eP-,1(:=RDcXp0\,P:-d:(B8,Rc'>]h3PAA/L<^BNVB)\sd%WA+o?=R_oe6ILmEa$NR8[RHn5RI['M\9\RC_jYml,7TY+F%ThJ+K0bsinN*nLtdpr!?R;)JQjq`L7lQd-6)R#5[^p"M/#j-3R3#7%:[HRM,UZ8F6-01gCY8/^"hV1GR,O<:'::9S!AGD-[5Oi:L^MC7`61+__jCVi/67@b4WFX8AtG5c3/G[k>q]tPl?N8qM$bX#@Kl0f%+q9J2liLa]a.-ZP&L=R@[T*cWX=2g;Ka'Uu@Quj&XLFg/]u6=UooCY"dnh]CSsjq<f5?0H8S'hNg*K$OBoT/jPl6_,gQrF=l=c47%!jBZX,sQDtXaJuWaSs,+?DCj;Zu[245;Mo9obPMGLC>Sf84QLh_43\sh93i'fcDrB]S5nbiF).,=m2=YnOIMk"K=tJ68(?[j@$%"%cg+Bpg;9Tjiu;.nVoV5YjjW<7]]q9p@N"PdVQmn_:?!];g:_;jWG(KT*856?@dk$Es)tsk)a-/$I6nIQ@_:fU>i@\AIbS3jgL^i>%eFa;?"f5a3=?g\%>[q]A%Q./=fa\[HpVnn6\,3F,ok=t#IST9@gO-TXE2A#>$"g?,WVr`I>l[FS/J=<]qjY,a3E&Z]"4d<tAQXu\%B;t:bIe'k/HTJ/X(2cb;ZRh[H?DlD]RmLR-^NLN^@`tYL(Le3pQ2U&(T30;Y#7<boe][TaK17.#.p]E\d:4?WhrF%'kLn?nA:rkW%j23U)^&Wa>o5q\^/*r!/f1#5D;([7CLMlj\KA7&hp>uoO]:1IEn&DQHDr2i0i^"B&;9L3T6BJ5Z6:M0H>$Fa#1j(D4T?DEdg$6KN%KeH:!<fB\q]l^p(<4L(*<TO_^Z'Dfb9(]VXPc04oc$ksm#0#s!fisj#3&t>V\7D:b@#XPTT6@137kQHP4)D+E?bSF=:WKBdm"S=D%!E^/A&=?j3Ad*8Zk1\\2@jVV?>$d#MpnoC1ia+X2?&05D!G6a'.FB+'ajXAUk.%#MPq,KeT\GIm7fVOWmk?!RV"_WPO-G<epgm=8%]:m$1?_<[nZeJ2.kG]L;X`>5OSa1WW3iJV2!PjO?)!,I?^IiFG[P(.d"3-.8SA@u]nD[^h%D%bV?[a"++3Udf7]Ek!BPEMlh-,`.%Ci&:u7_\_9Y9lC!n%GX)'kZj+Z^U8\P;eSe;sZpuG*F&$[a1+Rn0t]&YEC,%'XslZ!;f6>MT4sJ"O\,m.:!is1(V7V$Ir=RHQ#5g%:4305Ss$h(;21d8o"k_VZ#m'"OE<LSIc#_oP^2clF[87USToX3GA9<T3VAKdX?8ntTY>qb=RfhqjN)AgAEU0:0H]rA6;Wp1J7pj>%0-I*,oNcj,fj$JR<Ee3<%U0@1BF!5@l_=3Jn[6!U2s*QK'WujIY)B-3psMU'5;F1B.ch07/-\g$/bd2kD6lOE]SQ+D#HIED;E#ok%@X6qe$@VDgDE;HVT/jA+06=I@re(LK"TY_aMY^KS0&@%]No6RGpoF\'A%+S6"pU%p`]:^sU2nDL[FNgtTLb*>bDAX]Z&aVs)>$e=%DthO/#2NdQWR<P=3p=KLdhs&<l5/9\E7"RF=E*TOI*cd>pX2s/4#7uN1r$Kj^>(k,$joIT_hPVpboJTF&M(!PhX"7e#E<(t;l'nF%@QN^^kp<`ben(kqJ/PLhl2JD-0kbSVnCB\H>7J_Qjc-02_k:BOKpAV'.MkcaRhBtM['?Y?H6!J6aLcd3hc@g&]R)0n#/0h%*MpV0%(^1>[No@Rq$-=t]b^_uXI3YUZ[l:D-TZO%[>H@C((_i")$sTBbfC(NXK3$hfpKkh&1XeYU>H9L%5nCMPN:I-'E4l]ZouFI/o0Eo]%\Wbd;[@lcWQ`Ie9_k:ZWA_;>+oVl7VBUQFom!gf5oI(Kb..)H;2BT::G>Bf1]mM@a%]fl:;Vu[/$g*'_mh?ic:@IYlKDGY<@IL78%(!AmMY7n%$`LqEhl<`Jfk(B8<p3hL023X&giqca`pFHOa"81#m`Ltg!<3an8(_6smd0PPlnD_=AICKOeh0_.6Rc.cA;&Q_Q>;Ih!%[@8Ca*=^/mmKE:WQlZ9'ITkXQ_I5A3\:SU*hc6Ab/K+kZKU$Ccd(sV@JEaokHb1U8R_,FI@gc<QKc?b.Z*OE8NSm^6&lpa3%h+)F%[e:N$nt<Ve@Fu\.I=[B,r']*nZ/s7.Tmk@";.LV/3%/@V<6TB7b.e/h7R`nnh,H5UmcJ3db_r(.MZWWp/o+III8&pWg:pa8&2l,4%?D#[%9=(P%2;SNQ?sm[@FrQ7o_MZ<20F',%]OKK3Y?]6>1mt3_c[G)"kq-b"hJ4cN=[#R1.[tXJ:XdPag!f_qJR[P_RseDHHooNQ%gb^UT*eepPN7h,t1%;hQIGV8W]=QX2lruSHn#u)-]9)*Oc`?LP_n-_YcIT$gZ"JB&e+gRq;"%ON]e"in7*DLc"-)N]paJ\;mrsK1%D9KD\!Y;8AbGVOr>(>GrWC!l!9."jtq0)M7[.@\u'G0;H.q/8GJ;N`"=]6lulo"&u<_ld4<[r=ZQ;<Flis'-jZ'>E'GEK=[41i9Z%YAIH*:$bftm<'0,c/=n-<UPXf:Sh@YGs:fDnFlZVGs/3VWd&9a1EXbpfCMsWoes"pT;MZ"TD"NM7HlP#C9a9OSS4Qnkhm!F><.Fr%G?=&"qKeR,$SQn/FAoC1-2K."ka<8<lts2SVt>m<]k<Dk:ZmUcgSG"f&RL/DEU"HfS\@AJVYD_EI\f[4>bme6kG!_T!-c+@L($\t%Qk>dXV:[8<W6q>j^<#]/"OZ7ODj?2t?O`^Q]g[8Iq:iuQ>`*^5)f%]X/J`of]33TS@W@N5h6)GH;;\GrCF$0.:gil!^+BWEH-m*@%^V6upFKs>Q=q4/ic?#m!K-lq4JO$VabaRQ1^OEI+ZlIA)#&UKD/<'lLV9P)Y)DhZMMiPUCX7jqs#Ksc?^l(MGT^hmLGYiDT6q8d5%"f$J"lCNuj2;l(<SfHUT%iW3s[2]mB\'*uOIf6KM8N8rD*-C:uCU^ALjX^XjT(pFlPpNS4n`7,p0duPEHEjSBX$KP%K-Hd,cK`j?%L&qAOUi?/W2Z)Y([d;bb;<5"NNei"?YLV]W5d$UX1ldaq@%hJsQA.L74X8^E4j,#/DPnRmSW@GG?L`C7`Wa%1qK&\H*[m_\^32@s%Kogk.VP+i'/[Z<Z&UQ&$4`,QT%Y'QG"OJ5MU#39/Ys(thTIE-%<4:N2nIB^Ws(*QV^8QT)<W^Dcp.F@'..UGF\=iA/JM,ePAIZ62%=P(hn0qeHt3#3'Bi$c[>LE]uU0Yd\X?sZ>g/`h'$2HL1"5Cao$WJWi0^;-\0"]-/W%Jc&O:H98eW"r+fg<.d*jM&Eskie'9]^4aL%i`B?'`Xi#.)pb,h\MDGQ0VOO:1Pj<5j)A9-?M:VIn.X._bPj]I%,/t`<lgjsI5nKJ3np$bfl_:-RGH'<rV:CJ1iofeEYND'au_=,%pu<Tq4>hb%kj,"=:D%"dHk^h.2u:)d7XR.GkQ.FYH5@_CAPEscOEI:1D$BI+3UNt.#+!X2<)A*]7t26,Tno]Tm>?+S$W^`kHr\$K%Sa!.*6>u^67b#:JA(23^hi-&!=,X0Ho[ghM9``orf=K70XWX]%\EMWETa8?Dn$C;>+))"?KSc*iR.B3nU4#b6W=UB65bBi@*j)h,%`=4Go$Km@-R9^esXZ3lHOCm]MYO^ql@F`3ID_UW9Y<*"!d.VCGMV1]"!m4b3%Te4`GJ#Yn8jNin?q\`B0R)_;Sa_[AH<cPC1<pm?%5J7c\FgdD?.NiHa$<b4LAfnO?[h]BV4Z0R_m%u'-NX<S3[-.nMb?@fk"0fA"XOIkbqp%+[G^dh*WG5C*(:-)k(C_BhAXZn2h4K>m%oTiWF9p#Ba7BGlGd#mEnAL;Vb3A:\0KuOoO"DZ&!rl.lL3Ib5%+&MTHg"*B0,+_$45mMUZaC`eX=>5\Z6,3mI45$dC=71*Lc5Lma%p+0TaHA+*^P0^2t=*(.haKD!;`L]#@2fka]6)%*)R1_;Sj"Q+VpMnCc;@G=#mcqVd$r(1O^[.H#Jg9a7i(B@ek^Bu6Z;9]:S6;r9%gst0=>ZTs8BK'$U[,j$d;-pT):2G4An;+m)!ZKaT3YT#OVKNZHc""[`->RE).pSTtJdR=8.kO%1pKB*KJPnaO-Vm)CL&_dW,:N9/%hWPj")j!Mm"`YFH82g=ibU5pXPq$MUqi"GH+@tOg-32;+"j[)s>9k<+,,i?590MU6L+cpY5-,O@CW4E^YQ.8`]uiSLQKB@k.UrKe%lgL#CJCb-Z!:Z*_I1TSQ6t.*$)XEaAMNb/MjP%+OC0'^+$Nk]<pKAKqVocE<R&Sdb$PG$]27l4NT.ubMSatV6/ArHR8UsnV/o_h>%R4WA.?&94f^VhAl'(6n*(O/V,@4$fr`KiG!(J/*CA(kX@&eR5aIbl>F`@``t$(N4cc66>@)SJanRP/&6c@B)7p[\6,QLI@[3V,u`%r5pJJ4pPJ[9>MYmTBU/0&2MnhPK/+0g8>I9HAOg3@1l>?5%>#>,\!NHa#[O:-43(c+'EMUmr$\\g'q^$mI!Dn+IHhW8fQ>Ss%mW-%:IDbM$T_[G7^FI+OWlnE=MbgnTr:7;en:fbqhKJd3#ubgCH`t`"B*>ALf*u9@-)HeDuu5N6*L*]5faal]G$o;!$#J%:.H(Z4m#-L%K;(/mD@9ZLVtV?WoW$2g3^gFC.N!GF'lCp)3#O(<#789'c7\H`h%3**H:d0PmrGNlOg[WP=N.=KB+r<iXZR!<g!#?b/fL0L-JS)@%S@,c_PT4V/rO)<$<t=LAAEZIk^HY"K)\YMI\sJ*H#u;?6\'TK#WsFi16+0^s[YEP+=6F7P6"c5r<t944%Wl<`DL@!Ar%88Cc)-Qt%*Zr>W@U<4g%*;8/f)2n=BW.@EZ)1)GJYSmd[CJi8$RF,9kCl<u>m^]INA(DE4.AO1l2=6$fc29+oG3q6g4pX;P=Zs>*lG<+VNGPr%Q`qXa2f1dAg%SfM5>b(_52$c=gT"R:[fs-9CH,lK]1jHnem[(P8l688PbeFESolSB%Y#dm#j2ZL4Es[W$6c0%mVJ:s?!;.,=peEU%rI*&G,Z_U\OM+%'hlPKAjm0Xo0C9ufc>_?(+AX-p['N!'BeT3iilmfYH^su$fV-<ZUSo8de0Fj%W9FXA_Fa==m'Ip4]]G5P(UArh%mqVRSN8!b_62$G9`s7$oRA3o[fnZ-C`P+iJ)0DQP%+_#tkXFg)b62"->s+^2('D5eGH@\/B+>eIW#obdXFSh+qOqQQL8,%_gW#F)%f7od2%7>(BraomLW7#]!D$U-P*>#&BWG*1t)p/Nfc(MI3W[$VM6!E`k!G>h9Z"hdRakAY8r$8??;'`Gh[COjH'MH`l\V(h4gR$um%WeFipZ41+._,X'mS#<RD,p>cl(Di%H=st^EGBFoa-mgKdJkRbaj]l(sgF4J4bdFG\Y4dHiFOYDXfs"(4@e>YWcF/Ft&ZHQEhMl\b%oUX6`M4*/liX/7>fsitK5*L03\(I:^`F<aVG0.3sN\CRWYa^/nZ479VkGjR8)6C&H2tnj7[-6!RRdOuEma]UdhkMPlH"$.nGMK*c%B<1JpTb>Yu)o_bS\t-N<hg5mPK&\Xc(4p2BWJ-?*COH5.4%I$#69$!7>Za5GU),]pBAXL`/g'?d)iq,mL#D@P&:UXqQMH7(iF@Is%?G32"I&Ci?9hRB%?DT<XPA@oiQBJD\XqoQS3G[s9Ut'$B>IpsjXp[.Rce](1DWA=([6)"[\qdNOTN!A,XBH#>cR+Kc4_eV:?\nA_%='W4rYTC/V(9^5\b-bS)VPI6G>1^<5>I_/FF%`.nSS8;Y(S$2fpkoe[2+Pkm]t!fb]l-nkG&:;cpHf`%79XLqi;7rgMS?l1oWhm_%-u1VPRG-0d@`I]PQ\-U-5o8sTOr%0[h(T6ek:)C0XfN@O'afpS)BO<)-K8Rg,&11biq++4<\5,ggC"-IMSmKDJ4@%6SB&_dUJ)DF%l%6B'Jd+AS(D<^=R:MBu;^?K#6T_]@Y/0bLU9Sr0Oj:6jYPCIsh5p6#D16R!B3k,8B:@Bqf-V%2"[Nclo%CE"g=A1+D.2:$G>:/U%F/ca7f005+<Ym-]P?H2]D8A4sH[X%g4,^'1>RKo=ph<M/1?/IHqT*dRTq)c_jEX(dCI,8IgsX]eO:p@mCXmUA(_X-X2gRqr;nU<J%D%0A.AZ_$e>]5G)`[QdWU/bPL9Y@A!:n/rXV)_8nX@dAMG19nPorS%"f,K-i5dQNE\rFX\[RUU_Ec',ac8uFF7:Rp&e_[>?@0d7Q%9]Ju>:@?ltOA$SJ)TS4&q_'8ZZPIEP<J\Qq]6H3';pJBWN]C0WaY'?D4MDqB(FAXp7uR.o5.V@^j:`Z(gaYC^W"YMkV'RpSXi)dt%C;)O(ai:ie@qn#e@obI6p9cLde1VE(G]53mI<uop#.k*U+B?`u9?GJHf%99QjLo9PT%X%$U-75!^#cfT>kS6q]qcN\p5FPD1YZr%%cK`(lM\_7!*gEp;l:a_u3b:JhF%F<CN+.kA#DPoAZ%dZAS3<&3%&jq%lLmoT`<JE$@VAYD(+Z^Ig#F#'G0;M..X\K2$k^IFI7Jj0%:<S,,V"7tqZaLV'E_9u*a^#>W"Fdq!<SI-*$DFLbI>-L%VCcJe,<75<AVMbB4(+2B;mEH>dT@8p'!-LoE]DS>B`1OrE_N:cXQ'0T%BU/Hc=G4JMAF?9`6m%;dN3,XOH81$m3E9@UOcsWTNJ\C'/aTL0jqQYQ+ISgoJF+SFXSDZYOEA%eSjWU0>+M'Vj+9>HMH"%#BNlhi%BIZo:J=8#5UB=(h>7H+?c&#2ALW$QKT9N(WEX@@!AZ4mf%jYXbcZ5n$o]b]e10-M,+3kk73#G.re9RHCc+86e&<ZJp,pr]B<bF]m%p+$Z4p$Ir5A73rUAOK!pq<1e%`_;5N`ns"J7mmQIj5CRfZh+$`#ih0#Jg]iOn%;$Qbd-iC2jX2mnuC32ZNJC*lj"XhQF1:Go"<2G%ONu95:s\Bs9-Kk>7\3[)h)suAS."R4q,>OmRS+fpAJlM+?-H,97p>RJ>9TPG4cDb$[[]Ho+l.AbePJ`5bNYR6:U+0jP*W<*pgT>a%*5^^2E?CQ4`]d.$[prid^og@05UYTs4Hb+Ko,+Q3SD^b=X0e_7+_G7Gqh4p0X$#_%K_go`&F\^XS5X$$h7eEpoX'gD[AaH7IR_!U%J$[bT^'OkuYd<Rlb=uHM&6]]TVU\t<Uc^U+`6#%M/<#CmFi,8P;Yp[REJKuNP&23V8TBh[5,'=pok_`6A(2ZdWi^UOSK/;u&*)'6%(3!uo,c4lE(DGKj<m_s2L1W.f[(T"Khe1d(L&F!'L-\Wl!rK7W==$%/6gf_G/'h@m?'p>Z2*<ee+f9%pXZWFl%GtAIAe>S+6SK)t%Q&(Hc.E/p!AbEl-3uWBdIdj.Rb]4R:n#idRg**lD@9ML[DY1Fkl+0*?AI*Y!o9^ou?;Wp#+%g%?`F(nd/jlHOFV.fr@0fSS\MO+M%*YeukeX<[eLL(Bt`B3^dUF?WlC<\s59JpnpEbl4CFS6Gk;c_RZ20AOeW)[]OUc!7knmGE_2garH>Um5iCZn<(he''c_^jsCPpu=(%TsINMdb-<1eBgp]D$qkkk#X:E])==Q?cCB(coQ>2EQ-::OQ]dlZAP@#+N^W/X"`iCk2]TMc)5%7;4M:<d+*LnL.6o+7+%9Ge*qZI%Bm3C'C.&)G.c<]PTZAIg.C</F_'g7[TH\4#1E3FYja)Ag2I);=Cm`n1Bh/A^+Sr1WPPVhK&gZ"2VCor:8U:5]@A4Z:999Q%U!L:n%bs<B-@E0@abh6,WrLT1Gm3D&9(YF(A%0ZDX,KtTf>@)]TRsUQukfM]L,2FY&n'p)qQY2n5R,Hicde+>$?dd%e0+6aqkp%aD.kZL]%Z%n&&6)LU1a;nfo@<(*`r3NjDC.8\\!E`Ei8&]WI$d2T[A5b\VC;\EKhV,K*rn=bKAi$3aJC%Z9[UNC$-4ZXlel?\QC2^FEQ.m-m%Y1&;9hq44N^!`4!U5Q^-E>ZU4C\5GQdq[6q9blGTY-&Xa<#MRg>E(8J*oUkHGR[u(4i5]FOLAb,"UE,\c04lqNE=>8W"Y(TP=tD^%lNaI?37E1<<6]t"/B,kQ<QY_/Sh;T"L"BV>XfC;'qC56M`S](Cje1fM?->Om-+`9N3TW#RIR0UH'=!k<Blsk::"qf>]042Xn=ISm%LZ2=aZ"9Z3n=:b.@#`<72PeZO:k_QHCBupf>Y7BL8eH[IB`6L[&<?h-)qddRfjm`bP+1dWqTAG8\ERq7ZN/,.IPI`_DSjO?D/<>J%?DgK(/JsHMX&I2ic=Xq1_<K`qa/P7[ZK%d(j:ten6e4s%a,%pU8FA4ZEKfLE($pl9hpMhGYk&l&Uh+IfpR8$8,r2-pcYg&oa^DqO%TU`/A+U,u$o91KS)TmVgG<>-eSa`AM=#+KtTZNmGPOJ!)'^$2[]+-LHGY+)6f%S-D8^C.].*d3`3\6j1c$jh^EB\$5_t(@kcV@!>%k083q3[BZl"#OG6%!FP\'6R"BCY=m4SHY3kjO,Rh\)gn>[TPNlO_(i1mRX)[YbH(4]C'3eOkb+=9APllXu)X&mUj#qDRQ%L8FO,/%9,OS]mKb\G.7d(m,Je5@ZeT[^A`_s*GMUqP4uul!'3%/YhKCj$?$DLiOu^cmGF#Z`G2(i3'I19XDO.p&VP;_]GMVL4Ap<"#>)hT^%f:?W)UWG^j@)r+QE3^+[?)+dBcL,Z>_QgJGG"&/jj0`a<1BIjRDSNbSP8O!j:mnQeA]efVe.1h_b&a`1FY6pWcCp9EE%0@;FaV-H%44_?[1Rt+"%694PJ)pM^/'A)?1m%lR@?L[b#lmD!qIAaiH?FUA*?W:s?6.p9X5bu9FVMT[=Cg^qU$[D&>nVQ>[#[&*7HV/do;G;c%h@)$k7P)XHOq-VVQde0c]e4#E1EN&H'=)s=Qb"GeOkn6(8^!NGdpmJIWu3pb:L+Sa.@a1>'!*RQ@pMtHNsbOj%8e:\o.KAfNt*P[%>I;g3S#6ai7T,"&[X4-?SQ"\?U&EddA7p&deCJ68iB<]$2%hGgZq+aHq3=>R/PLGJU/k@4P/<W.3=j@eTea=]`Aq?8<Y\enrijq2%r"ltm@3?drNJWPN2[<qK-p$*TXr6hba#E9t.T9s#(O!AecSn-hGPW9OFT0#ASU(q`'Oj#d9m_ZO4RTJK9^^E"%[qZR5uWFqlM4!A%5NS-L)+ri[p[ZtmWAi!a`jj=2kt\o`&dOCTl<2_s=]XucEMK+dpeJNeDU^Igig.R.Qbpsjo>7H6o]CZ]EK2m>b#EUZj,(\!-9M%?%nd`;.'\A*"okB:<iGeOTF$EEh]*,arW1TL(o=2A.l<i[>*U=C.-G;4Srab&'mS#@WXN41_]Wl`.f?DDLL/TogRqG-NQR]'LSJgH4%>)&\+lYBRXX`6o#];8XJmF'F[f:4`pfFQ@bF?&gKE\>Q)d]a"TXa7^'5)<*Hf\=Hd;.g@D;3IG'0Zm/q(uf0:gq?LOBOMGiW06J*%i!L`V!e.U;F6"l0d]8#8:MJsYel[?ma.8N?n)GCcWFL@T5)lKj_Vn0'fZtQ*Zin'mfq2RL6>10KSHs03K[kG#gDU`s2\$X[bncRc%NP4kTO%6PJ@,\;1=b_YuWJtq7o'/B$6ncG`c^'8NZX'G`;/C,OASNmIRjN$PV\mNiBLI=2ba7RfpmBNQH8Ap*Vi</;j:P.4R3$Nl%52"mn%EV'nBgoiBM+53;VY<kfB037gHa@pSLl\.CE]1!CMBk\f?q2U!<O4_aN9'mCa3=eK-,FBd#e"]:c7G1^XPU9]Gt<rU<q#;+%bO,K>F6-euV_g<b@=%='A252]rO/)?kr>'tC`Qk;`J)c5/@Tn!7urA;@^`t^..,R1O86K-q=CjEOR9/oin<AGq[7u\<X8#1T,6AJ%HnKa7]s,Eqe-im^qY@Sh'M<sQjk=$_YaR4Nh3D0flHWj)NX2DtiA?+-?(mclad#'Ce_]+o\/K;Mo"(^KJbkhCc2?t:7A8MjQ-F`)%ip^[2Y!.nM5IMCc\[7kf>J%AWO71fr5/)KiHI262c%Y8PX-H08AaI/KX4Gj<M?7Q"7Ph!WAkcH'Xc.$JNVDrhg2"O\>McA.d,mO+%`=a,p*0_onI]HW.a-U$<`(p_9<^hS#G$!]U-Ok^nmc,gi0&9V<RbeQS43+GQTP&F*Q\Uncp[M,"i^HF'X3:"s`orUa4?-U'NnUs@%W]7t+/5HlM83O(nAdR1F2MFG:/4L0u?cS/'mmuW1KU;:Rl0.8D`]!!cQip\&`]>$T8g!EFHI2D0hq9I0.QZl&6?P)A0XJs6r$_#Q%qZL=i\[LLB08*g88r<1L8&@uk``Y!A^:N&9-_lkh%d]R'CNV77D+2f5^sa*^QKp\h>6$#.-bHE[Hi\9"(#V$cMH%WC<_,Lpb6ZY,%S=8Y:(T\1O(W#NO+W22RS51!6R%Weab+cXRp+4:CrgYK;FCfsQTk)oVZmoJibPn@iqBJ4u*L6Rt)'IOU8L.ks;\o=+I)auA7=VhM%Zn;0EZKTV^kC$gchkB8[.Lnfk@>Kj@1hYU+Pl4;oB,[=)7oo=BA^R-Y2M!P%0h'K^8S&6Kd27/VT0n@5Z0ZDOW[4LYNjS.kb+_,d%ZNtBMbF?$*ccT.k./TL>kg/M-,iZ+(gT$j%G'RJ8h,HgmB"L/`AUdVorAdgd9Mc74QgI!d`MP0^Z_3[cg#&#_J+KG&Fl'mTrKW]B%Th0o`T@B;%3F&s$qJOtJC!O+gm02KRbcJC#F7RJFQj4O+%/f^-]<M$$&"Bgt//qec0Di\Cc'Yg;kWicb1+'H+@i+5#ZWlNslk<Xe%l!/1?SW;_<(fZF(,(T?AUb8L/Y(Yn_:6NN*rm2uX_TYNY$GOEI!3OeIh+`Dh*uP.!=^L4%-UZon,.&d:X=%\@#7H1[<*!-s*R;cM%Tq'8Yk>S@o+6H][pX3G`0"+#V/2F<$E5^G.Y8%,$U"aq%Usil;;d&t<Y``jt_ijAD&FhOZCnkr-`HB,NE$CApoD)g7*N;/?!\$=d%3ELCsIWcIF-KeXe!0sprSIm]gfH0.j.\%<krS6hW>`q5[d-3eOQ;d.uLWfCb'-DK;e+.*]`ArBV)KIaYjFc.7X[!,4W.6jp]SO\R%:58FsegE5:hqL)V>1(PUd5fpB/Cru6*13!GOf'SlBEQR(R@oM\^5+5HHTn+p#5dAlDZ>R\?A';=BF.E<lQ=E"MOWb*4JLRgS^WMu%C7E4(>LOQ)#Lk(b`=9.+@%#ip,uBBg\]"tXfM-=BRrtjs_T\pf6*_bmWh5e[\IS![0[jtri<<gNj(YgiDpF58B9-3W2$*hLAdZf+%\T%5PSH]>11.a)VMt<-3;:R&BG*]UKe[dOYTno^3Pu2/]LEO.[8(>jIC91f-Z`ZRCMl#dkmoVRtMk\L=/hBTNWD/We@%3.K+diu@%[V`4E9g(@l.aHU;hYsr7i[dH!l5(U*X4+)u:J8i3DV^J?qK^KTeC[eg95eTJ-+*;V^!DMR@8JP_eV_,/dW@EY6!jsT>8!C-k'"Hb%k_u/Ig3N'YD_i+lWKepb1""JB"+/^?RXN&%8CG'iG,nJ)PMLb%"cY6%0k!P\@=aNsSE(nuL;<Lda)4XUICGdRe'ik!Qf7$g%OARP%C\Em'?&$sZbPc$G3G,f1YPXM*8:Xk'OP[qTU,A_1P;MW$S9F7SGkkHgYGe'R/0E53PY?uqp1#-&f@GhBPj`&d1h3(ZG%Gh8nCe'f%_h+/"dq;59i\8^Nip8VG!=Z,i2rJ.&,K)NdZAXbHR8'uTUN!O39qL]\A*1($F=-)@2gK.qfka;0aA)u'qjBX:283-+(>$fU7(UeS%?A1-0]qV_Qlb.+tC(<T[X%f&CA@JGXG7'+"QJpB,DGAjo;DrQ3dTb0A78%"2=Cjj=CYI>"DS,SS>g;a,P:JU"J`BLGCYGOSQjH>`%KGYl4&(YT3)C+aMf[!_T:O$Xn!"!Xu<E+PAf!M\jR#cnT__</eT$od_To?5*cgaV%i)u.JWX7-2Le9AkU0J@Y/0AkNMoa5Da@?kR%k:)O`;j!,#'Yfgc0MLn\O^Kia1cU?LP=W-9@sb%!X?P.54I^^kU3e$)Y10h]'K4TW-H@E=h:O03l@mcFe&KaPH\dH#_/Inu?&QYu%d9-U,Wt0@N,h$9D_qNf3CSk#bfp&1^3YFiB(SmWg6q+.]E^\:gNA!m-V.<\1^YF[J`2Ge(%\=E@bV26)[YLREhSjj;1j])42dk2>%juZia^G!s-m@=D'`OWW0m[SFnU4[@h^-IuZJ$4n@,uK)%ke+om$\>q:aoX\NC16dD^V(33Ia*VUG2>$KDd-l+U%?R!5S]3\;6'C0%hP<c!VZj(GFH3<jBdQLo<DFU7U[I^]<TUbLi3E,u/45t03g\?Me:+8IW<#e#5&:b/n);G4FgH(m7bp!=X45&)eMHlC()p(GZ)^mi%kr<o;MIJ:i8pA.<32Cnfip\ZC7+Hlsf$4Joa:)+eS^r8?(YCso4RZS4hn1MAY6;"CbNUTB(T>m-#:o2N^uAfMH4jKBRt40oZVkYQ%?5:2VX!O,@_i9-C"D3?.pZ,!<ZDI0a!4C%Y^i))=Ch)f'bBP38akIfkN*["Xo(m*T3o%C%Me0Y#40]>I>t.UfN5-.B*?I#=hJHrp%<BN9?-UJ^cDG&TWdWTfG3M$Fsk@:7"[[MP-"/)/Q(U"pDS'1Kn981/cYC<k$nT;G#^0#h#pNjrFL$pCE+TQA+C[L8_Go=a)VLl9*%*`9%)Y5n$^>W,Dhor29N"qi8hEh!PtMC_j'\[u<1FgU]HS?Ga\=tE[j$Y&9_$>U:#^r!42H<$9_lE7#bY?PsB=G&IT;_0jsDS3R.%Mm;'[C34CcEoSiSWkM_,cQ8*>eA4U&"3f^r(-I!pB00>NV:`q"F."I(U@:XuoDk-b0!*rsL@EpC.sU)%]GktQq"rT.0[)/d]0Qtc%T.P:pBPen4?$TOSlgR"*,1/Js95"Od$l[JD6f^s]K=s+98@C#g8_M#Mh]G1=NPMb4goj]8q(U"J]@,`nm30jHf*NjEQXOL\"tVJ=%b<^rT`17%G7MQ"OZ+i?r'SMednk]V0dXci9B3RV;gdCOPIfk+apQ8n,`I;@i@Ph&s]\8/1g]8(hT?DH2-r!-Sik\NT3JJXuY)NIY%2_kJYDsM(&KF^E'#=kI7H@S,9_m&j^6])hr1EQ!K[_29r<QD/gA&=m!VkW;?p$ltmHCitk)OL%\nnT;ObP?#J;'c;(r9JlVG9KMY%2<J4k"X:O*7\d/lh2;I+[C/$^q[j!g^i(Mem<-4?>Y\ET:f=3b,YfRB"c]NZ=MVIu%M\tN02T.DZ/nZ'!5@=0U;ur9(jPp?'\Z^d%[KN4W^]9KL'tld<Ns:#17sR]oMC!2XKdch8Ab2b-H;XN>N5&g:WTC0ZXnf*Qi$2Ni!>+tqW(42n1pM&[*nA5`H<`O&T4ZO5dbZHt%?Dt6>(DKSaI7:3<EXoE:7ha4MnW->^k1b4e1h,Jie6+KJ+JVV4UDek4g&ON8ot]1;-jjO9:KJ7d33''2:Ud]IAOROKbYG%P#gc=a%YVGbfHtpVt(Wt7ASY7+Ba@$5>YG01oDmtu-l!_eQ%A8K;FqeWH>-[T"?\!E(Lcrn]o',p4T]#Cl9e$c&*D:<j%r9MeG-Y)ln`cmW%`fEOr'$;pHU%'5X=<)Z'<-3'o)%G>"Qt>bPd:IVW#X5N#qPhGmgAsT[#4NSE`\D->K?M^>g<Naa1;%j:H9)OH'PSFhH'D4V5rk/0%ZZVm>f&@FPUbSD3Q4b<O/[)`%8"84<H`c%_Na>hC[kR9ADGY9/(1*D]:b*5C(:JG\hK%4WCulqK:VDIr=6Xo%BSh%!l>DSUK:QNq%56Mm_].,A>L;j(=q<Vkf^+'8DhfHgC\M[]Hk:\+TF%%R!mL*je*;+Ktr8lI7G!EOa!<(FE@r27kY#Q`5!E5grdBZj8*RM>P$XCB!%<$D,]JN7"p6p$=7'mUfu_2./NV`PKQcXB\H6mB@"._*=kh1K&n6StIdN\"d4Z4srk8]d,2R]J3D."Xc:FSR)#,7E@J:9T+RE$+3)%j@=3n(%oCO&Dbl(Dc"-FO[,1#4hZsg1e,5s.)0'7&L;FkKLoJ;kF^V:/LG[_Z)^LQ,Do)M%Ug(7OOcthEparOLG)ZshujI-/OU-b%jU6.kAIjHur#<7Mkp+$&i\3XU!b/k*pr-Qrh@GrdfS-d&rS97X*`(CE9O%1ihUqD]FucA\.c?2UiQC*)e&h2q[(^onagQCS#L$\a%>GS:Df2q,)7`oA)H]&hiQ]_-PXQX)Y(:1_O/5c_\UB29_cHmNHm;L4t\(m)Ym87d-53V"S&r+RN`C3&fIT]N,k0^O*!X[?JQ$CLe%\@4Y($E#1(qoA.5qg5a$HClfs<;6+_io#"KFAFsB[Vpb9W]/@S"@-Mu4ng^%Tj;7^".9ukHR'm[fe1WJ=>U#,1<gd[qZJt37D9@^%%oR$gRmAP26$p$BqJ@sZ>uXO/l#M/h"H$F+?*%bPf]X"Y?%hdl]<^=Jeijbk>fXiZ%/Og\EG)a3>FFKZYca&[!=K^2OJTb&$]8.^%6k*F,?.H6U/il9m7KBa7!2g%_<DpKa$HH2UDJ?o.KakOUQ+I3pkZ>9W,Nr2_K9%`tKrOq:EM*u09<7)'f6)k)A/=83>KuFfFM/I;%Q/fXuf:A_C3^TdY^A!&HeQb>A3"YY+-2.DdGSrW:,<?Voe5POA\,Zb>5_B+G2D3eeKj&e-:f!(m/1L)X(FND@qKep7:b9)!33qH9%mj!ao(W^]bn!]#@e8T_k&l/^nPsYlj$;u:?KKCatL:>\F&[(aO#\chK/&iKrZYU`j<<"7ods=iI!8u6;+XNQh5t?P"AISrhoC%:^%oa2I&(qYn.)`4YU`5kkd9*@Wa+R7jYnt<6eoh?S11SbJ-!8!.O$$md`a,GGS+@M,C&]EJtm?eE9NTIK.$U.Zs+&gQ'=:]d`GVWbT%gFbf+nY.[Ed`$s<MlC(i)`gg@;jsM?aQ-":GhtD;j(rP!nhd)._UXZ/]s2"N/=boXQM_[6!]4A5Vno%S"hS!h_a%GCJCZo8I+huX%/s8lffoQumLO!1;kk_gFE\Fk$;^_j'I[AGX:2j5T>FV2(U6EK&j=ts]*a>,)a4;j)f;Si]O+dnm<7cg9%;SjVH-DQee1;Sj/D-nR%&orXKl6,m:/S<ak'e)_P1E,ceAn7ni$"Ni6[Tu_9U-U:FljRP]UbJH?RSBK33KnJJ^3uL^aW61!$/I=\:Q1%)J4?,b'$S?`0S$Ql%6SU)i0p0hadZPb.D@Cj4+>'"LQ8n5]eph6>Ef;`7/["u>f[,,uP:3+H.M:3\V$sjZoUmK%lHM#4M>5_#VHPKs&f",WD^\E3rKkt.%mcKK^:_Xuq2qe/jaaTh03I$7_RtTAa:ZNa@A4Ia/d<2nL9^lkuQ<ARlJ(WJO%_CQ3D)?oVkOtd++thS3,r6'1G0D3(b0&T<?F^t;%Id+N5^#b7ZZ!@-K1!?BF6Y7q)=l/35UW_.+1H64Ai1[EgXJnl:NosfTMjl#]DVjfQTWkX5["2(`"oHJeoP(Zc(9[u)>oC\EQYs_-%KPP4gjpoc!NCnbIjJD2aJ%@)reLjKbdBf0+0&,,0h>%-*p2,/I/mX_YANt@sI^PgOo%<]D2K61CCdd#EC6)N03MT)K!FQ(;hle9V%;aL>m)B$TqOr)lB!13&kb#WG!Mn3._'89IkJoA"s$9+gIo2$dJZ]s>($=B.FGHuR`Vpk'"lM9RH@rk'up_LVZ+)QsLEg/GBi_`@R%m)f68D"miJ`[q]/lfi(1!RIpl]p:K`j4s%uK,cd$1oh#d<"kgapHr8te2Y)C'<dWF)0[!X5d0>OPCX3]e9l`DG.E'7W36>;A0sdN%lIn*^*/0):0r6I(qZ[-5E8Le9O6H&jmQL^5@XHVrOT^:f)_h>:4NeEgiIi+.W:s`a0;@q*'QK7QprbL)aKXV(MY$j4HXGVF7C):Y%$2b8eDBRBg^:8cFTV<XuqZ=9dU(6HOb9-1cIl!Clb3H,6)VR2-@m0FRHeTYn.l/\cabX:l/h-E1cJ?/1h2&NN`&d`1dh[0d.lVhO%H;tsu,O`C(m>pF^5.1:L54A9e&'q-?lrMIrPrMsN(>ds34"mdin"QgXRoXfl4mS.mEo;]Gq'@iIZ8u&i*Y<4&(LVsfEoQ*i(WG..%G?=FRmW439h$%mj)XT$;SillE@-5o6mVcgGKV[m6mN`Z1rS)PdG%oC$#M3S+gQs+[\NEmM'3&^L5Ih&?m-t's?%%!Am_bOG2k]!g%A)mY90,54ZTF^SZ>K[88HK!)9CMN[h'rOj@H?_UGZa2.=I$Ia(4nnTC\Gg_iJRClTWqRc%@5#ckO$5hr%XmM&"ME2>B<PT8r4<`o%X3&ml\`ustLQ]tiSmAsX?Cnk1qfN6Bef-M#TS&,K3uipX^!i80S>)F5AHUJ(B_ed3ibPUD&1BT)R/Q$%H?F[0"7!(VphK?!\Gl@'%Zoi^3rH.#4C7k^DpANt&aTd9GI1d!oIf$ep-dKA^Y;Yg^3</%+p21KHB-'?5g,hZSWL6am\XA@7`0hlZ5"sk(S\J\7pn="VV^:1^%3Lf*bLY6J7+.(:/?LSn0PhM_^=C8R`C&L4W#0kR$fIEI(&M1`$n$!d)lqRW[ol&H[0ks`4]BlZab/8KnY,qSF(;m-:biB4to'GdN%q0Hq=QhU.pB<-j.'p,9R!WlGh\HtWGQ_(bdD/-n*4arV`prhRUb1+rF-mJUior_Zt/8d$,>b/Xi:@?8o;eK_=FVbHX?$SQ=bS#[.%K9mYJcD?(9IV`<P\F(ETHp:JG^YQHsjiPNCV;kc]$q<_Sg/[h=HG$PbV`4;bk&TS&\#\HOS<^E.`QHE$ZaY7,iIY*QFK,r0HROER%:Z5R0(\_+ke[d7()>qS*7JT?*[Ab.E=m[ggFgAEnhZ[*@gt%\4O"3*`O;76VM'1lee*#s*`[6^MT=X^b:?%uCA\%%@K6[:QCU.>3%hHiIg59gCc55GK77C,MWlH;f7>eRH5i$NJgh]LkCiu\80?C6j*o)>Xmg0'GLPem?hQZ$3C=Q&dD,uRMT/IAp]/KZPQQ0>&,J,Ss1%:jGf_Ci>/:^AdNRej[!R,utW$3;;D%dtJ5#^&&P%kWMP\pruktIA/+]M/t$Xc[Io=RAAs:j`q;=^h"?*MrSE2_Q'Hcf1CJ;c[n-*%EbFh=>CRM9RZ_<]Y!md(_im.bPKMn[I!PjYbc?*\fL^MV9Y<+SiOE5cN96<`^2W,4>Zn^f"iYHok5KCafW0cBa8+<WG&_okbhS!H%X^n#@5#RbFP8)"'7<*bSl>0Ll<E+'r,d./Di5`o<BfPJJ:4X%0;V[=?j8e&]cS[\UMCH83'Dg4R:X!k>nLb'i^JE7&^CheG@K%RN%OR7>J=FUN$&Voa]YJNNQU-@D0@f\f;Ffnm[d6O]WFgT&[d7\r")X-c*TlK>V9_!l>T5eSML-Rk>KHdU"n%0`8'S2c;EUA0\R%t!Y%e?AgO_,,$70U.h=^!5gQ,mYeG#<4[!Wk^F"i%;0%jJlF:PN+5`ID:&IZKh>4$oLTp%]m3&Z^"WSOgoE=M?Vi#;3N8;TU._A@gI*r%oeud_4]g"tk*)^+^XhGG1DNN8FI/G>kI0qSn+B:mo]becjg/t'7FhLI7\8>UL(W9Q1mn5@`;oAONS\/LJ$h._:R"1jmeF7!1\]5a%\kDeBXTe`PCPjD(oTQnN)$'67L+^-e-SAYK70eM1+'TiY`#kSi%sI:b_+0el07q+#@?6^fl,beS+o?A[@"d%XVu)@$rHS0j,j=gk%l^.NB]`XeB6VAH4Hnl624mCoC,K[3$jp?A1jc9l=qpk>6C:??'"dgT=B"qDs0GR['.H^3diT+GoGW2dQlFd9mBmoU?g<tsrPBVfH%iB#';GH'R:IIbFd$9Ij-%]?!rWVZn?$K4Q[#EY6EY<Pu<27It;Zd:Y&L"hO[SmPe"o\8NF`k?#_Qf$$45D1iI"g#\]]`7r2X7\>P%Ai<_,_dh0HWOYqI5:'@Aq3`>;]mYW9nasf4B38'._^tFC$O7V:j1>/-q),;l#[tZH9d(#JHk#O;.KO@,8LZcm5tP&_Ufg+5U::9+%mN^Sm.lVK(I$.h'q$Qha^e"I0*5Ts(0.>E1/CkJ=;cDkb<'#f`R$,WGc<\MuGncZFCl]jX<FI;%-0jm`@ZiE<f.VL`KCH=V%i@`T%nP"[u,WSmB\M#YTQpb%ng62);*635+e?*YFCFcZ/27tN=>^cL!Q]?>3jFm8):<[SQpp@_]HhYFi&"b5p*]njfDW.%KpHNSE\[oDd%I;f#?hj;&nrn,p'r-dS[`8&5c`G=(W?/"05ZF)h]TB;EBADf"7JfQ%]-o_M+hj(%IETQ6GnVrI1QemV?Qe6<Kqp`9MH1^Kg>WHlf%L-5@m"^K+Dp;56*I:_iq`nW.!DCh`mn%[&jCKIZsmGH-KRZ5Z25'OuK`"i10jR'qLf7'gFXY,Ef$`i^@[4AH3Y5OZfjLZ?:7`Kdl%>>rN8)rl/:oZ+i3j5p[-2!,nPe;Z<G00bV"oA],lh/Mb7>/%4e;ljbUMUBeY@faUe?eq4&9:';J4C6lmroWqF_o8%Ao5ifmXJO<.%\WK@.H1C15bN9CeVn^WQW*s*nE5<rB`T,dn[k#cO(N.!tQcp:3pjGM_M>0%jF^*2IH#P,?C?+sAbqJXnfNs!8S;q)\iF$j#Ss1<m%D'YCTF)LJdGk'%qfrqlfcejQ9/qqg`%t!P[@3-ug5'm@#)3,[B.;!)Lp,6IH5?Gr\g/pae-_-WDK8K)j%GY<\D4\8.-PpB%?2`b)%C9b`JbNiN!H'qE5?VdZe1UksPeEh,<B_d&PhV?,/`,"*XMp(^8qY[>g42$\<nTOHVl,"Bp+no]aH?!tKmdp]KF>$=Zgm0l!a*SX%%H'Rk!!%]$>'2_$9qV@PrZJWU@l((TM*^1r1]j$e@hS!5hj-p"TE:`/@)rg^Oq'^-N=hU(Ya=3*=??!c^n#%M10AJ<:W!>#6V9'BD%@;bZ&o_^huY#!?uq<\sUL2XmM/d&+uC\$i:8#qhdr]%Vr\ci\:ED!L.Za.$"iSjTD(B3W,ZC&<%<M"X5mLhN?amoG!)leo,F.:'s%JfLBA?b^NO@4N/unEE.[G-O)lKmu-+bd%MoJ$'[WipH\ch_Sa0R])4Y'(!04]pM4@-l-=kLQSgZ&@Q8FM15kuR#YY[ReWdgM.sp9%2"=AX&guO#C6&V8'#RI^TS\.*Q8f\UW6iII"\T8FBqU<4$C835,.[F!queQjdP"<OnP?t6;rVj-Q96I2Dn]IRbK$Np0DMX[&tkCH%eC9D#9+*[[2PH;ql]l!7ln$>do"M::K"\G-a%l?%M15ku(_R&lB]>Y9,u/K^M'i3N=Q4^YXjG!N"\[(ti>PGg;m=1X#%+'\gT\Wm%eAE5,(H+0(T:4MZ\$DqK-;RuA-aBj:WqU?&ZTNSCF[N=E\ogqhDMTBO=Q3l/1ss6+"%tbA,eod2"gQU3eHNAN&]+1!C?a6EcZ8.'%du4'effc=3IIG,P+4lga>CTU'nUR/=ms_]apWO]ikO4op5NM0&]a@g&%^>(1[6-H2T16/0BAU?^^*2C+'(>*E%h5a?OnS\MWf)r,%%_*YNT?$V]1i@`:hnr;\aU=:afnm%VVtAM0)n4<II:4;hbPSLu4a1]'d?8g$q=i'H#'6]mnl\&L(NqHB=k%CYl;M>]YKab14*+_G%hRWZdo&&7CW&)HPj+6NgZ3Z3fDNWM)p@cJ9he2XN0k4<4UR67<#(Y(4],**W/\8IcltilY`VW=&?_1E'&DQpu=B!(P+#!0<:Xo(6%aMCsKM<,,SlRqT6G4D?T`TjGQg*;If1nSJIGb2UFi(b^\_lqA$06CJTFfqGcM0JYGkbP1`&t\/1k!_Ej1GT01%sif@/sm2;ZmQa"%I"#_'_Fd&L""TA'EtBjMm,S2odeIhG@]fT[_JLu8dZoTAm,]P/4)JX;?Be*5nFa-kE.0Oj:Wc*sj!bcfBor8nj0(,kWg>t8r?OaM%Hc5MoDgK(:%Z6]n@\jS:CW1]uK=h!,5k@56"cVo,R9t7/V-:iN#jH9`8pbaOq!1It0s0(n(XMAbq<UpfGe)S\61nLngr5b$UU*oE%nX6`JO75$XT7(S2dqLGbY24(mYJ2'o(Ak7%QMd*#\%`q4$fTP1QcYq2T_&0^nnC%\l'TLQFVeN[k2X]UcH!8+s#tm4Y*c`qI'of.%m8<T0h9SUJA)#m2+%+p,q_WT:4ndh*On[Mg07/W6TcMX0m*4ttg[rTods+*).>p?tk=U."EKhJp-2LuW12M"Xp<6ZcZ]F/l/[f:.%gI%:tTV(iGHNXs$AQ(bkG`[nZqINbFT77i#)S<p*kdN\81k,@GcnT(fmiTN4j2^mu9(hRS4bh)-&)Q1q4*^@ofMYG'I*e.'Zi.p8%@lSXPE"qc%\>e>4r,u%Rq<%;CdIg=7>/'gm81^>npb>qNF7]0F9f]Y-l?N";XccH]I*Akbl(<fRIe)jKXT4sj[E7)PNt$YrhCeN%%TK/7DTOKlr[QaN=VcPqD]U:n\p"oQ+o]5faPLH_DG:(Y+rp@niPhY&s!QY('IEu_ZSR6lWEF5>cZEjpfJbaC#^GW_"9qQ`Sldjjn%hUrukdnfD3l"_U`S_r"ZQV_%0K!'K1f?qRXjEFD>ncAkJcXcLmh65UEjkM[633dGORKneJ!S$MBHF\=/=%*J^q4H\S6a4!V.'3s>%7kq`"HsV0JPOd`)lgjDSXih+@T0Bh92s3ta6R:H=I"#jRiT@&Kon<okrM3W.o4"^+nsc$r:j.dJR$&t?nT%ePi<XTabHZkE^F<%2%27YGA(C;PGVULmpce"jOqgJF]p<)tSDgl>3l(a<[i=it\X`?)nT?Sa?.o6,XZ^/>o4#&b/qo@"C.<B??EdIQLLWS4^b7*'>ojki8%d?A53n(`GGko"n\DUnjRp1b7@+`Wn1JUa5N(H9[WKQQT!BRuB%3]IDeZ=j'iVTi"?fmU8WqK)mp"m8DWk#hZNEP:3<&@+?Tr^Li\%:6cb[_d5._eLf'p\?nO\!`jiM61cqMRTmRJJ>4(Y_jMGO&A=\g!R+Z%k4(eA%mRb33\qIc$l_EJQ8L(6j>6mk)lU1SlE!k;SK_+2%#G+9H#bN-)Mk+FX$Z<KfIr"02r9<N^C$WpdI^o(8b@aiUO/0m6hL5Q(*ah>9=;(qRc5CRE!o@nQ!:7Pe;]ebNbqpTApa^@^obkI4%lIEIlrr(XF&t)e<KYL;G`XeA9XScUW3+Xh:G3J(joVL/^+&5sGIW4V-5'?2emCDt0J%MYV5J=QLcVD0@Q`E=,L*m$rG=eEq]DtOY%i0K!laa#a,mfK>S'QlTR!S>*%VNMVoK[=/Vl+2\L50!9q^7E)Lek@=R*THr6pPt0I8FgD[AdV*/!V+GehGKOqo$iLD[jS(c?TjgI%g,QeUD#\WuqSLJn>f)#Ra9*1(RU0%.1B$d[_QED_:J1HPnrL>NIiSIu<RIs90s3%bKAF1^9)S\Kl`Rhmq;LMZmIj$^8/M@]1Hb^J%R6SB4m%ds4GRs^&#D"q.)%(L-$?Vk(GOtG5R*41WBne:TI%!!tc[QP92]jU9.rtTApiu>H*O5Uuk+/kTgreJMB*("t>'Vlo'_LkP%c@2k[!`fl==Bmpda.=5p_AWR0!5VY8ZRPtNKh]=cpJ6??E"?F@a![dnjrR=D?B7Z&:JU5@lgWlj5kt;pjQW.P2MMFck!$G'\dSj-%V5@%[88NeLL(`)[]r=:+%4p8'7j@K;EIDCtPMlO4gsYk`jDS@Hq%[H7-g[RP@aO*o<H6K9gmVb&U"I!EmVJN*`9Z4Z$N"&2043dr%<EVn;G_M>R,=V69-93siHG28(l-c"%Es!Qe")/2,P#23n$rAhJ9MU2T&sm2'$c^c\VTO:L5$da<a(f#rOrGP^:,j/P@=nKSTGA;(%lX-4?:Tn)>:T@QCP)QA!moBHSkGk>9LGOm?Iek%mb#ceELVhY7nuljjGRP/r/"b6r?+J!gVmf<_[i!*?DdqQ#SFkL`A`2TiAS?2I%dCng4>\O"BOCkoqH9n0Lq#"0UcKA]kYh)p=P^bh$\pG`[oog17&-eg7W(4.#>0I2LNd8DE?EDUbP(]P*](Lf[oFtaLJ6ceIF6`(q%XIRhpDL7[makZ,IV$$5^=J=57LJbOTTsA,,DK>%5VcU\+07`e@s4@K`n7WM5IsU(kc1M<5hJ[>rX.)'1k&,YHnO6]TIBa3gX-OC=%hu5N`BD0h([Bsr5*#C^TUSpu#nnJlj^]/`l7-5K/KY^D)9NE]\bC`gXC6Xs1H?rSo4o07>igL7$k4ZLW!:!m;G=c0?p?h;'`[c+>%iPX*M-hHYR]]n[EpA=);;ABKK)H>EioCKbnB<,"NIWM*c4\%6j!@G3/3?)QP:/9\mr+5Hcd`/W8WMaB("77qFV.!s'?N-=TX1cu_%&77J^bcXs8XPR_C#E\M/14FYL]EmG7;Z:d1P])cUK5upI4Ii=<;LWq-Gm0A8TR>fjRlKd,,s_62l]^mV17g+-*_"41ZQl,f2.]:j%=_er+76Aa1s4)B/#I3Qp,#,IF^UHp5ahhls0^@b`hlih5q7;a'i57!lCAG^ZQQjHA`Ad70!W"Gt!Lsd0m]<t;L,[5X`O[LdjCfq8%"c8_Z.VDd`P(!+C+[,eVo]<)`PJ!<UFRJmW`.U41E7*V*FSIhHQfbBQ/Y`T,AP5AiO%FIrP<@k3qFtuY62"?V+[=c;^i19"+]9Tg%SK00VE+nZJ's0Z?p>P[_&+h;tI!XbX^:l?%Fn^sWnpS$RS&CUfk8-#Kir2Ad6f5JW?LD(/SJ9ki'8Odq*1D5!m,T"i%u6V78QpRL%hS)($meutYF#Ul+jqm+M#G:,?m+1aEc&JVOoB0G.J$*+[T7<M[mhQu5A!.AG4_uGSPso'G3iu+m@7KZ:gf]#^=Uh@:MlVXR?Fi7?%pYO?[W@]M\n7cBXpVk70kFUR;8m6'$b1u#i@<V4Yl/g`6Qe,l)-_6c5SOoI!-0]g.0?Q6BB$R@>CDX,o+N+-0@#k'KQgOi6k'L[,%F4ooJ.`7eS@gC13#Jb5&8]I@KRmr-XRnQ"BNd7%$hI,Y1`t)t=26HDCjYl>jkqe<8^qLUINb./U.`+U;N]Ij>&UYp\#Eln;9=Zd(%JIZ#hYCH!Rc!QcLmsimdWKHCmH1P$.Wkne.A!GV[C2`$^CiFSc1)JL-f-eis?f,)3b0=]Lk/!Uoe08Fq[4,-IIXHJ<$@"n@K/J*D%^004#+PttFZretE/_dlPI;8WPo9i&\CtAKm\'G])!CJaP(m(G3[n<t.:Z9mS`ad;Xq=a?#qJM?:"90+9aYTb/]=:$d]'CVOi(Ili%7\rB-Uj[$_?',20Hi#U7OL,,?bLN`$[6#1gICN5[g+[6?J*Z2&T;"G]]]0Cm%j`H$pd[qG,V.?hcdG%'<usS3k?<Fhm9PECS8';X%p-BUT5;[/O(4WhIX$B!-M<E^6\()S3[)=RKYtIaVdLs1!`%e)7Ski(`8bmE&o2_9)GjOM57(Kr.rPquQ?sd6nIeVgmg?\cTmiIZ+%oUe\S_>j1J6E2`5XA/`!5[A_XD!K0[if04_g\5V<9i%j=5'HMYgqrLRV%9'Q5CE;)HM9W;kCE3gk1]cL9,$J8)U6T(9VjJ#Qg'(n%f4dd%Hte2#R+p8BrFoa+p$VQi>=;2\IsF^]/>W;/qU_u:da/cDVVekDM4RP[.6!B<#]37g+&X"k@+`0VSad>A"J^O6IKZM7`1tr)%"A^Ulq4I;?lflIYM=dtX.4/q-4FJh/[bu9Ia/$%Z@b.@nmi77;J$.0pM*It.q4!hc*O6[^r*)t@?2OO_/\m-_k;Kb-^VBdGmaLm?%F4WU*q#97FV`R+LDsb:<r1-l#lItG$Hi<1r>,Sq.T0GU/khY^>+$RFYG^Ao'mcWunHiNo1IVX71<%HeUFQ<&FLEGF!SPr%'OZ^Le%C6V#A&RVp8ji?PdoS:GeJob\ZgCg]+mloHP8.4qe\1<CB^r*d19^Snuf%K?^LNi4_,C;MRe\_o%hqqA-oY)h_^9kQAe!J=?s8)5%%qaaA%ZiubjI*5AG:%M@0m;79)rQ-R1Sf4_ZpqQ4.mpEsSemIm[hYG/S2`bX@^Naknp#iGQgUjq$mqfK-?AQK@ks(8L:3u;j8F@@h%XO\ZkPXSG_71979Sr#d'#@^J4m<dP60fuE<84]eF>Uud[pJ_P.A=6H&kCQZ#WO[elep`BH^o:JiZX3Fjdure"\8l.h1MN\F0Ag,(%gL@22b1KWf`kF1Ze8fXdoc8u58hJ(Gf^H>iI/d<=R$sUkoJ$5Ym8"*O9[i)N:VQ`-N8=?LRe1p'5]?O79mStWpATVljE9\Ygg=%,%7;7'^l\C*@44Ee!R=f08(OAuk]fTf5kBkMO@Cin@q4Q\#9j/r0d4)h;7JUZVLWN8PASmm18T2bi2Jpj;2e?Qi`opsp5?Cm?k^#]E%];h'[SZMbda\"Ks<fV'ab)**OcX/k3gtBC>hjH-9+8sC\lQR7IE#+R>\t/obLQ)<E*!'mJJgbpgm<LCt[0Sq_6PrS[%bB?[*S[P[%7Gj"]g?+2aC-=PAI]K.6E,%PsQ@=>'WM8jGd'ijHE]%_W[s`ilH8YEIhE/.>:KDfp->Q0K@ERqUC/5)hF&q\qA36%0)qM5lHbZ</%bD1XL!T-C#KjUmBn"Z49YuT.p;Xkh['ts!+-"85:4/r"!Q&>>11#o+[4V=HWQrVk5c*u.E.Rs\P13B@sl"gcKE<qgk=DR5FChC>9%(4s;\n^b'V?m>B;<]1A_f#&Nlo1q'ugD7LpY"&rn[`*15X0K/-hPmN)ZDoZfZT'[G+2:Wms&24_WeS'Z3`X_0WWO+-/Y]pED$[jV%n_U(.!jP24GOk5F/.]GZ8S?'/ckon,G,BU6%tBc,/g`K:M-emrd]//r6NRBboDnOr4MW/+0Euu>m1I7(KOQbNg=g'gW/4"Pa)q/,%K:;R:1>';.8I\SH>*jo7;<T!$^?;V`M(3$h!m52YCn':CqTgL<kZR0:YdRQHCWF-u'>(923g7s7@eXdjG-*Xo\ITg+FY>4o!3*#n%U@!%6WU"oRk[=P(+a3Trfu`&W;=80ra8PmETg&g4Stp"^X"GF%PK;;2=9`/F]QoSN%UfG"=E(hUSgsl6b<B&Z5l6>hPdRLBA>)KI%Pb/kAc:4b0XDMl[oa?5-+bAN<9&#35>@5+BQ2e/%[Cp^E5BjF.T-T>SU$^FQi_C9hA6H!gal;$:g+Gu@<7`Hj)sn#QMXJn.J_JsF%d"`l1FTuY01cqDa$-g5Zd*/YG)f"c0IC$L(rqij=,ok$dd$Ip=H3]u+8JTXaQ,+cifr8BqX3iY)d?1M7Qeq&p;!YRT\$Ks662eP2%eB))Pl-snW6+qKc:/LtZJm+1Fh%l_!k\\2DftJ6"5]7=7mJV7[D'q/%U"Kas^R<Hmf'TpEp]#s'V<+8WpFks*N@jjf^Q`\uKh"`?%Y#$iU`rb0&M4)#B!&BR<p4CnX4t&iQ6j$PEROD\0=bj_D[cdBA@kfsF6i=K,Cs^2q']?rfrNlLbdsp5&q:m>6&/l-agZ9"^ih95H%U2"r?gW&s!+.lm.[d;`EXi6lC=X2?CEQNrrOsQ)D]jPFKFNQ4)To/^(>VOh&J?`H=^@c"!mY@q3DgTa<:DiKhde[M[i%TV'>l:FU%'_1-O8Ljn5I+cXD-+RE8p0RGL4V#F8/cY5sHFM;rg?;\%I)#\@/:I,.<o5Jc&/V*B?s,IdH9qskJNj1.>`l,SVX@!P\k*?C<HPo&%SO)(/&Z+bqj0=&)bOY_2k]Fji=iuE)DFH$la&3.NWM*lARdS#1#P`B+Qn*8N)e4EhBOQl)\Rplq?94WtGQtAm",r!9Z;15AB=YE)%1UI)"'KTeFTFt[3,NXG!2#)9XG"R)"!k]&2+iKt8kjtced^s%b;-&%edsm2fM+]DgNW4nmPqo^WSY>aUQtg;#Mt09a[f)DYBOQFC%>-L8=++KIAkdGcGc%g6/X?5:rpi"Ng_qj3o2G&*(r`^dh*1"KB?3O.J65t^^;`S)HQ,KIVPfFlc$Ts\2N%tKDhEXRFV0XIC9N.39%hb.2'-"?_`:-!E7eO1R-"r,NilgoJ]]fRhb_F<2ON&@WqU62s!BI0Ds[Z$)2X%t[f^ph@;O_CD<-!5LDBcIGLUb$+_#cDte/ATr7%Y^4Sdii8H9c9=FfpTM!un5h=!N/^!\LMYh^$8;6h""i4*]Vp/!qUk>t8A$nr8RKKHgK4H7Yr3qBdVCaSn)r"OhYrpIIE4+SXZl#N%cc4_jJ+'PrhH>6uInpiK`nR3T1?^ON0RZ_bf5nh'l]SV:7J`O\12*o7kdXtuX\*)b<#/u:K0R7iqkrtFKK>a*j.F`oB..A7W7eU4%GR@*u;"/qpJ5*p\Z`.M,)WtJJ,5;O&-m&PIQUF:a;\mYb)A3BT>9P-'=Z=kXE>-`!kW-Fo[l:DbgbYVP@9W]Yn18E>D20j_ZN)M3%]BoUf/1=G5orqaqGh1_'4*]>[#gZCg.&LbZ&7DP\7@Zo,HnCi>&iNVAA8H&=HQE\YQtn'>4#u$:dD)7mbm2B]2m0pmHMaglZs_#Y%jjC*EJ.l;3IT'>?Pa6E]<3f$Gh6i``(=-Y(d7Yr,erY;A`7F$F]1OcJ%/srr=S5o[j;gVmn(G"1_7ucS%WRjE*b-L`66t9H*`]'d%B8n`I._6d94U>sD)fiBpA^tL]-elc%Z)2o*K9n:\jDZK%O!9>iOHS$A7aZG,,"NZeK3FK@WjkKb[W^Lf%m#:;ZN]JW._tE,Z4iUr%^he-7/DjT;=o,S3ZMO#O2%4ooMkpflW'eljMe-4J80%`B[bZ%ZCNag@8G"1"LDdX&T:P6#8`Kc8,h<l+F!&>[]6DFn'*"D`G\BE?%X6Ee\;(u9[jClGOXX,Em1^qIRf"O5h[?HrJ]^4_@hb7?Wf-!3Pp>=b?T"M]0kfuu'?!'WkV0Z$Jga`TXe&(<WQE'F;))Mt3ltPX;%[`j/C2Jjh:s&UsZVS2HJYQA3l$=%qdlt#al.AIE8O4u-Q'=ght2Hn^q1m-O'BkuUs:#!e5:0r,7no#j.ZVC>SNNY.!DVCYHs4lD9%@\F,rZWip0WeW'%2'h?N6G;%0;O^f,@o$eBl/9tseIt\]80O-Z@1`'2[S;5^L=2%i0UmhSnKDaj^Koj:Y:J^e2RFLE-fob5MRH^o%f^5L4cbHXQ!*.<JKk[9jMUQ27>+br19r,5lh\jJ*f^-Og-T;"1@e3C<BP>IVgXD6=Q4-n0e%Ubq$o_];<'o)FaMsh%;%GTr\_f$?%Tp)uN:#^>0g.pWK:#b;]<[&GU>3LfNXbS"H.3h!d$7&/B87RHABQ+jmn/AZ8ZDqK/P,9UlP'sXd`L`+rZRt:8Z9@6Dl]\HQD6&,t%crh`Ca!uG,T^C=PhG3eDI+]InS,n>j"F?QiC``"[_26Hf(=CglJ*.7(`8f/ZO'UU/-Q\?8$s<K%a3<6Z@K#'7jYB23e9p#jiEZ,I%YRV+@ms?\NTuL^@fo&&P<O>4Cqq0U^Zu,6?1JBmPqnJ<,*U^A"]Ka:f/VGItgVd^1I4[F0hBk;<qsOsB:-<^ZYnN1J=n.jg;u:.l%?WZYKgfiJ2G_FT";?S>?WZ28=SEsr1ge_2gWh1e1<9)EM`:14Ghp*kA"Rl@_n93I;:@S5s]<i?B5]7=*c1\R'"F?R$D"#-F90;[r%M8r@Rraj&Y[S-XCj7[tGf60A@=oOeP#jS2c^mE+bji"7pBd644Yu46K<7+<<:o/-6k=)[WB>$,bn%:/b%Z^;2gPO0b"kA4/<8L:_%4^'.Y`WnY(^UbV+*Xc<KN,0&XoPi&N/@qlR`HuB028Hf4C*"r?hV?9_`k&QAqO_O-#GW<aUY(jTT0@\uqQ4*[Lt3p=+1@M#D\^]t%]ik5T.$][hg9iDtTl7[BrUoUQU<B3pVF;Oi)j[&;`1G>LIGT\Ig9Y'6%NA<KIV2U!*IoO5dIAO[m!G5Wad9-RLj)oBJK=8qXMZi)%qO31P8LVc/BVsS&]K-a*[etLMCc>`0FKG3QB"b8i+5C#6^9mk]@:%j8XrF@Im!/\)`_(ok8MI\Lq/e**dFUdcAROY`C$uCA9S92B%^F;H#ejOG&63>'Uh.bUW+gH1g<i2YtiIW\cC6D92P[m;dV<Y$,'lPXZe^1>AWX0)/oIljKPF\dp)ZL(kkbOq!hNo[&&rs5BQWY8'%ma^ZB^lnZ:pGQ=[o&7,24agF]K0(:ga`6h6Tm?'%d!'!_WrKW@)k"%dkPc!%XZc=1iN_4\.MHd)C4HY4Tr.o^P>n8PC_igI"]]jV%f70^='*H4F8ZujTA25BnSH::@VCIqV64r3FdA'To%*mkg'eMT9''FQ'9\Ii@Add=IZH&D7^:U%=UTAgDB@AX)^OV%IOS=T1q'W,^%.'045mSm_tMJQifR,q2t&"Yum"2_R._Ldm,Hk[q*1QI9$B=%WGc5`D*IOUi`H0`BAfB)B)rkDem*jp$Gl"MBMJNP?I/3XlD_Nf-o%m7g!<3bs(#.T[;44u^1=J7<n%$.U/pZTV@2!nEWoONqctP7pB'1*l7i'sLU/g56(FMo>88ag.`PTkBV\AWJ^NI!%`Wa&r":cX^G'%RsS.Tq3/1_OBcMdT:n-=U,CeoPsbBN7^k<-3-h]>IfiGH@H`.*#H5Jd`hPd_1marn5!5ISj%&'-<3M)>eNZF3Nh%-<@[lMFnUG\I%C`i!D9:C>Q94jH9ASq,:gpP2[fD[;?=5T^u]jP>>CVcV8(9Cg6jaue@9'"Vu9mklF3piS.Z`9oC>,*sWe@u_u7X,Z8W)\W2q?\df%Y]t:Z!tB"o5)irl(G-:.>)Ac@402!_oik@q1"IArF(q'8k4%XL*D6oe1.>hh-20?cL$8b+\aO/b;nKe!;la>#SP'5.Xn9'gj'/#H%^D2"DX:s5](=^83VC)KL&=&:6]5#bd^9+A6^BM-]l4L<3PRS)iWG'(ocM)GGU=%E+i?t)"a+@?4DG@6&=nc%EVIeV6"c(Pkb&e\U%W?(b-V;%'/pM0E2?thXVFRHW&><*AAeKaQ14F\(5KQ/#d5N2F5E+il<s-4GkDsND:K+YH+r9:tG4F$AQV>'Dt[5uiK*;9pZqc_`b%>>hjM)\WH[iX2P0RY>,]0Mho0T5BYsSQ?CLJrkM.lL(HAQ>X!qb84e04R<aI=VM*`9.pUW;ta>Bb#]D/C5d:roi),Ch5T0/*LEZW%(mE>&(RDEuZbH[1Md]j3>P2gWO$Gol8)i!Qk=Kpr-sVVT++Z(,-2XUE?i.t;QXIS0A?VI+HhH7<ld,%EhSo5;glIYKN8ZNA.29:G%4@W.Al@TG0eC;uL:OndE%B`n-4m/ph7]gu=C[H>l`6^_=rH4N(s/SdmU@4olfW^%'L9,pm1:1(\.=O\M<;V*lWH.9f9:L%e"Y>Y_%V`e7-WDC9<lBCf9?A/IKf/?dcTGMV^Y?Yq,V[[qq459X>q_Lp4:29d^;H"W=C(>%48^1"F[[P*,meVlkn7M+3UW5m)]-l&+6Va&'%<$bs!B:N"%iFp]D*K)X!M\rbfgPPb%[FSYG,PDoha!$ON*iCu`_NHD;N7^lFs($+sJ8F1f8_Tul@e8[(<b^81f93JRpWeHZAEMi]%k2)XM;J()!CaV"L,Vub5qdFBYDV2#Yjqd^%:=Tl//<8>WldHLclS;#aM]23OC8-PCQ^UN_UjL)c4cGgk=DR61Z\3g6WG[[[H,-D>%;lZatgp>BKXHHRr$$T9qCh\uJ,-sQf`$<X``+FX.bK/8k4-R,eN^$f/G$`ou3$((uF_q%[-]'3_X\+YdL_.@R.Pu!\0K"iDgS<7p%C@5N4[GT7^rIm\D2PboE.=/BuW3n^n[$/.PY$'I*1n4,@5[sRkMr8F"CE_BfIqP0miis/XSTt(UMT7lmXpm&L+mqm`E#F^j@R/6&%?M$"'N=)N[PHAU6<SF$p\i"87>8pgC(kYR]8AN2jrp<F\DS%DsIU*h-V4m9q!#^1"3rjjENjd[CA?\X!i""`cfX#!6JU^)pXSgEJ%rPEAfQ(pT_PGF33Ke*CRM_o;>IS[#P]/?FKQq*L1@[Q>$5\(@Afu_H5B!rlh2U1q;qW`^PY?RK$WT]-TJ7_fe6=;:!5?ZODCMd#n%7STL\l_%pCG7D0m]kQ"KfX77am\K><V6CGu[SphJFu&ijb2Au408>(dp._@_JcD8A?c0b4,S"DL=V$i#C'g.B%49LM.G7W4DZ\#0%,Y^WZ=HL0lZrlR'^m6fcl&Ia5C87GRcbeFnU.5r(:E"kmr9fFH:I@%JOfm)0"\M*7HRrjL]5).Eb,WKk2M:U-9PQgf/0/Mb/+r$e%YDMK]K/XTWC8/gV;Dne*Q9DFZC=7uZePqsDTs/O2kY\8.d9cO+MeP.$7;2S(V+S1(OLihL9l$h%9s$lfoiTLO@,A+7BC6RBWaQjM%5d_(b@\ld(*4pmETsfB)oHW]b4FJ5Yn%nTcfmWYn&bb,/j.N\Fe*:@1aWB3nI/)juHckg6k!D%(4eZf!M[b[<,A_(ArWnu3([D@]%)P972`nk41_k@kCbil\_L\3R4.lXQ1^:Ii>fUof5SdL.faBm4iVH98>;c+A76C;:*!t_B-+t^_MM'g$aO_BRPkrY;p9QI3GL/\De%FWsiGh(h5'!U>SWj*Nt\FSeVOO@1Y!:h)pg2#9kHl]#Ynftq#OSfY&TB]8qJ2:7eLm7D!EQo3>NBe<<&>6]tNBk<jcboY>3-=a=\%h6<rFBoGs11fk^?aV:O[edX)^:YfBkMY3I^orc>;J!kU8obSVCer.SO2Bim7-:KtQ7I+dIScGd3TqHi9C-%YH"hF1ecLqB\5E+C`%-E3AT5tt!!dYDU[=FGk^eP'1`%[3la#_<YRD*FObE8c6:2)VKU:ee&]?M.CGDd[u/0nN<)UTeIa`<HS7&Ch&_qUX$YSkVo4G__""%W%80O;i1V-`+imQDq,1/mk#<Z(h9h$<W\#_\UmjIZ!Pt.:JE>E<)]iKf,`Gk)d&^2,o!j(M_-H*_4(Jq`7,"WMf^_]IH!ij'X2+H%4CS%QeJ(f9VO_SH-QQS*oZO.#<P^QRP>9=0!U]I.)Y2Y3k&&6g]T^b.L3uTM%kYt=B3J4t'eLrm07'^q7-!*g4K1hRMk+T<%8o(L%Jm,?Rh-n!W[=B`.]G=?:\#BO1r='"Gp:^U.fG0+)?tu<aWnp[tSM]nN]kl,SGo'GP"KlW7W;8="n'8;;KZ_f!KIS%HjA,66RT9os%VUe,<6rZ=eJJHm;6kub)Ll,XV$_^J3UQRe588;$WjI02qXmW>uKDNRK'%V[dQ`q5S`UfAU.Ge"PaoU&BHK;JqW[Bd15l1j:\7\@Z%Q!ji'B55QgM.VA6%7u[qn1jfnPYEr5VCA;R9u]A[9q91H;`CX1>AC]55]2LW%@(Ua0B+P'R(<<JEFUW#+1=W'=Ym0/UPb?Pq\MCr%Jthf'8u0t3X@5oBR0KXZF[<-qVs^`p`VRj@HIlZ.^J$eWq?md\lhs4N\L2,HOf;%e<PPFI4>?=;S"sNE"Z7kL*%2aH<Ze#[2:J!,%.T79!Wd)1>42kuM=ui7E>)g2[YFaXeqWoN$au-9^7(J&[7&f'@$(blS25M./9rqr-oN&(Zn_R^UM_PtT=A+k;q+Bodn#:$_J8/gV%n@HM`H3;@>>f-H14(bE5Z?G[6i;^'3VtIi]oHP=nnbL'E)Yrp@*ZKCsLH[]gWZ:m!LsI1Bn-G'siV:K45P,!IjNFUgIma/Q6iGR`%?^B'uDHCtmWk#0J*F_NM\(g@U+0XLE1N+&G[u5qWA$9UIIj<G>4WI!W]T3.:5D#5sDn+=PS`0-polT-PL\>k\I/.prQ8a0#Zl@[$%h,cSq<uC)_hWkR9a!.XG/#EieXuOPuE6]t]q!d^P^9KT1a\c;Fq#'*A=SqU-*YF3k2nG&h`/cU:2>6eFqliPJ!F300qFm0:SWZ]G%ATYCldoI@>1"ip67X%QbD3`M>P>,7mAG9W`<Z0^Zfk7CFm%W:i"?&WBKL8JlDI7P`C/6(!Y<=bS&_u#VD-liuo4ql$HIMj3h36\8%Ds[gJfO(D#e!p'_aStg[<;k1"r_PD\q[SDZ%R[Z&*oC?>6b)Ypg&`OJ2V<g/P(jQ,HB=p_f]H6q8t_toKT.$&fnVeH(1SD#$?r-$%E1^PeHgL8/7Q-!:(OabG)*RcF1g3?YIl2)/OTSucRq;4'=OUk"4UBWG=[imR2/SYA"(=ofAb8gO5,RhrlBT7\iGM_>]4t,/G`Nk&%Z6A#YCi-H2V?&Sq['j[uN?5:j)f?C0CtN*ia)%7=f;MR$IFS2A.^R%:i9i*8mOJ^rnp>b8&WGZ1B5%aj2m'7q_se,qC\0l>hcLiT%j=%k>VXZNa3.;t+(n-=BbQR>t_P'01:tF:Z"73iBUVeO$B0i$AhfmZoI<k>P@NV+I>*62"V&Kk1%rsAn>2hsCO]!?iRV9.-,o@93%KE'%+aU;@47'fcZ]Gqd:b#+lZU/]N6+@usW(F1s@._eOg:eHilc;^8s&%K0-%LkDSRP-Q^-afd`WtD4#62F&2O!JA3?":lJ_e1jW%H>9h:4W02qFI:9$U&3`:[\^j"S9f]8)*thoMi(J/[ijgUWI(\tYBk&rcLp\l02bT@rbqt3\.q/mGTiK/GiMu<'nD1`2OX=HLb9.S%2d`>CKr%N%ECV%<ZsqGe26BsVdmTtOCAmI"1MO*S8uCTudN"7/c,Xr[flXLpR[R7eW2A-5YC!@K33Y^Opb>;O%^No34%rZ&oIZiF%8Z/T@G_^D*$nYFg/-W-mF[<.l=7fUs6h0SR*K+nQlR7seo[,Ui=369DXHDC=e&i9Qe9^J(O7aIteu0>D>45]2A'[S9g96pUU=QCV%,ieFOj@VlA9gm`t9ousJREMqT!LaET1hj\eN9c[%5YW"kQmb$i)q`3nHh#2*PYEX]1j:n+Qj2X<q1`^cBFWWo[`ls&FN?eCq;*Ys%M?1$,.;)M>lKM?fH<ogmlLh2a>:ahY])$d'Z`$+C^^&^d1c70XQ4F_8+e";?<!!;[m<rZrME)JPkQ_TaAWPC4f<8f7@WRc-D2>([%nLSY%f@70J5W,qjHJN'o`IScX6SpZ$Yn@S,AZQ#+nW$6"'OrS*`Ma/Z28>m+C)r1U([G1^ZWP7?OHe((JQ':\VNiC+WV+p0*pYfr%XO05+8Z0+&8?Qmb9po0e,ne-dBUUTY..DL$Fq`s+)V_WgT_t#G^.CsuZOd"X;jp^L]FDJ%OUP>$NAp0p!99e^32KVqL4hrX'B"/A%6L$QeX_Bd1/M#;GkV:gGNAjqY:,0b)',<=&8EH'd@_F[BGP)kTmk*/&*anqHlA="4Dr<G?B02C5Te^"2Z"Z;MYGj+J1e9!gDpjM7%(Xs]JN,.-BobXQ6c(q6(Pc7C3WHc(]Ll0g6ZuSDh[2sYM@m.e^(#$iS.T`m`?clr]/Y2_Y[7+&UV4\Qu/u[=uMB8g@.,J72@kl8<%*G\<GGeUJ>MYGW-E^Vdm*dc^Q4i`+2)@jP)$E.l+p+cNM#=!V6n4,]lr/c[uI/;415CE=S#=*\5YX^s-plL7r*r)FiJT^%LE;amJ%UY?co$@j*IT[E$eaRh[j!KrN%5euOnmm?4WD0>VBq@VKgq"t^D$+8NrjMc"BO1qch&$V$trAL)#n$ta\&UZP4r"6S#IH,/qohdh2%q"t_O3:0q[>M4"tliB$7J8nY\o,IOQAB.iP^(90`CT-]aSS+eq*o27q:u<KZcl21r<#8`;^.3@@273*$gh?SPG2:aEQ++bA%(j4o%e)Gal(a+TQ^GZL^d2fH>UTIdV%0PZ&:=t:%EX4Vj5)*@PY(p?8d1!Y$Kl6L/2p@=MGeP-Za!#ifIH,/qohkYE%J/Tk*q4Rd]5D2@%Yd0$=ljEc+dkNY!fV.8k)*RK9FNf[`H>%P87Lq[>>r*^\+.Bp3;$.@=kKM!jLo,6*oH;)$T"Almr:1ff:u8hH^1dm]28)\YLTm4R%VNHL5IA<p]024+Kk^fh4QYH(gepcJfDI!dbXs88]RL@pe4)Fb\7ZSTKI8$EV&,XB$=R)["&=Yk\dA)NpH1/>04oEIjZ\e/>%G$e`%])n8ThAH2p`s'0b8'tU%OSiUO.f%[NW<;4p3%j/%ksBESjsRR;C!mi`-j&P6<$K.>eMJ#VR.V<8/uU[BX9dpWWrA6?BtQJY>lEN:%Q6(dD)`A"Q7S>%kNmtB$Yb2`7Y,V(:lQ3+;$r2*>fXLnR?0OWX5nb\"+Be^9l,2+krE$djegB])[[03s("^U82p5\`)Tq%lTrMDa%9gV5)I/!O(h='Hj2Mk4CNJGi70?K>+mFU8jCWk_/RQ]Dj(Z.&%[&Ms9][#X>f<=\=A%R--$nWUQ]Vd6!ARFj'2#0$f:#mNQ.Qi+^%<eW7KKj!C1_mA[$E'*gh):J/O1$W\rQ0k@F27PEBj6sV3]\iP2V`Xp-I'LP<hF8NeKRqdIkkV#M/aM>V[P[4)O>O-HE;bK5_<Le_%3`a*D?Y-t(Bi%6E6Srb/]i7j[?*B#]Et<&grU+s[nt2]8\f9u77lT"E)3RCsG1\;UFkaUV(*rU)/e/=&D:A[C=grUumaA[Ro$TQ^%[&RYQZ]>Grg8*>@'@^'P4DiM^g"G6^g7Mf-FAh_^QC>^;*L*#1>'<fMPFAUsm<e0lK>kn2rie")]6:7l/o.Y;R_T)1JudLtI9TY/%C.2hNg8m1Mb_bS=;KE@aXo3G:m4U#iNUB@d#r,IP%6%.9L\Lk4>(Od<oDp61hCUf\rG,$jTr"GUqmK4b2X.X)"F?P"D:34Qg"q3k%hu3[TF-nNDUh1u3s/&]#Z>UQ9/c>r^n#n4$Z!ued8/CX1ON=C:E2*l2[mlaV$!J.p,^`TFR#GD##"l&LZpsPlVE3TJ<eQ=(7tp]m%,YP%W7q<OV5Afc/M!2pk,nsn?LaTBP/8/Ve[%c-HXF%$]dkYitT6B1\T,<RpW[Et:hCfd7c2PGn(d57=r34U^H>'/B\u<E*@qQop%Zg\\;22pYnEo__:.+&)t-S?$.,]8B^0MoI17$UM4:t15+'SpkJQH5DLB"[2J`gK@;*.#Kb5(f-U;H^(Q(DDQR'o=7`(2SroRtlMo%;rHKr3G^-kM<WsS0M:?i#^d#((')U[gs2^\^iqk>hY\E*ohhujo2u!P`fkacc5Xn:%,l[>i@c)9If*!9)^;rG"c-J4G*bf)>gl*k%#,segU_>G;6o0W(nieX_Al:Yp3hk`*5p;t=i+aI3Wi.):Cj]FaQs4<`6IGI25]dO`THGU5.9onc7AO!(\AnbeejfFV4q0iVB93l\%%5BH!@"Fj)P<P)'l+k<5#e0Lc&5>\0Z\-^Jhi`<9F4Tjcd*?t._Pe`IBj1S'aFR_p1p:n!5V6[)\r!;Lisd+5YGmjb%32>jD&!/R%mmRkfe[?%a[#8XniL0sY!@;_['/_p^l.mN`r"Wn]>=G;db&WOM'GcZjH:RFY>,BUXe]!?>9O!u87Kbm%2X@WMW.BVM:j]N<Vf-:J%7L;o?Vq+717KOu`iF&aEB\!Kc,o2Oq/"en`gWVotIK7'"1aMMlhZGIi-SjDP.E"caZr&C%Uns!'nMMBFC_M`uMZj+,W*PKmKqn`!%/biI[[&,c0.c`Z627i"MAPsb=7KX%R1?HccD,A_c8[?PY!';-/q*Y@.J2D&87&LM5Y%)K?1Urf5R'[noH3$8nS.ZC^!>ZbP7u%?R%3e?EYS0sa.I%2LO;BT(m-3]l)!=E"'pgsTO)imdIU,GCHR)o@S:pi]CSelZ%ko3K\:3ngb>bq?5%+\4]9R2#dR5BP;5uQ<KFujCb%!C8>A-`f3,Ea8C$f2G%B$.&^q4'k]uQsZ%dY`U9*Ym)\>Uli<38g@(9[#0$]BL4^gf0k>T]UTU4.G:_[gsTq-)N@-2ILMY$[n*h[%%[f`cMlXYid.)(,_65p[l*2h=O\'=Z>WOBC*>fq+ks+qH'/^42Ti2!c(m35P23<u';hf"rG//0Ul9H62)Rqk&3c7NJD86:q%kA`0%nk"lFLYIL=Jl>C^A<DD<8;$FN2`rpU&gW!LOI'@2(9J`?P?J=KT5[%$Jf=oNT@^ji:j`\sH$gPf6Krf$'#:=o62VcudPHc:M4J%(%`[$s'<-608J6#IQ,hK\:RYaU>_(J;2@mDcL/?!>Y/YrPgE)PCd!M4X+=eXbb&sj8FM<///Pm.4?[S)*?gC.9.FE!\a@Aak!rfSW"%o]@E_SDcCWJIo7X;c-((,Ke0;8WReBVGgUH3!6DbCf6HY7$TJ>1"dtZ5?6E5Q8W7L"bL'3p/]tk_.)FJ'J'rc'1`B8Z3!Q$QOYL!%#A]0l%.^(o=WMI2V,pb1)b:[YVDo3D+3+E;&5qP-a:b66-4(<gaf7&QGm#NO;C/i#W22p+"bOZ9`,Tb5j0P%J!8>R.@quAs+K/3o%5geT/0kM@[^iGS@`&e7?KTmYp'$t4m'TFE'J?lIFAJTeum2GB<L&e=A:Z\k^7,oBU:R.PqB^VPh.:VuULkpKb1d=i`U=@L&9]ft6%oc')9U\P4//&SA>m3Xk?-)qK5ooXE6_tdh4B:TmmqQs;/>aJh,/[Fc$gB@,Hco(mQ2&On7`oB`+/IAmWRKqfJS+JD+Q]R(`g;'23%pY=,@0UC',%@XDL,T/s\\[!B?ZoT%Be5AiG2M/m-g#/[HBJ(T"k]$AR$+;BLP=:U-:7)fmR<^pB,YQ,o2#&1<_'0X2C`Y8LM3\@;%/LEp/,#P2fCg*6_!`[%j#I^A&65'cJ+b[rAPE3eFM5Ye[E-sn[&&'<6%1_/_AVcX_1Rh'G*ha/M#oInU&[hgd#7`+Q9/k6VmI;d-%a*^";Ve'-t,,I)kXl^Ah<^BFfoC=VSJ:PKFk%0/u[S"d8_@Jt;-00?F++UeWan(ZF+*'JX-2a9.<X]VAcY4j5n^ZgP21stUl#`=(%GGHJRF5kakSG2g0'P&A&9*GLFG).IJGRd:IUX]W*b%oSN!dl[Mb\UHFU)@TCp5MV$L.\0En>D?r'Y)ISo6X#hKF7VhF%qVqCFAuF%)bDO:Z%_-G>JNfp)fBAr%(FWjp-tUt1-D+ef^9<L!6L.n=nbRO]e,4HO&(e5GF3&H8>XWKECJ9`Ted9c]EJs>AkWb=^u9P[Bq!6V%0WniYQnAK-N1cR@B-N$K4LLEpoPdp+6Td1Mb6JYUe#=8;'5"0PT+mG7#3(3>p[[PLmRTU3XX(Te6IMndS>4_m\%6<g4U]jeXo(TA%XN0O?6C/.&,7(Lop=KM2O(gA<>j+a84)/HffV;*#%FEHpYuj#d=@a_q@gY^@n6!''G#Y^\8S=pIFAs,O:SX6/;2$TmDE+YH(;MrZ%E)Zjf>Dm6P**$.uf^.a8c?ajh&$?:O=Bc.Es#WV+7e)em)@q@;o:.XbfLqE-6rS]e3d>m+D%uBQ7F"j_^nB38j\U[j]uPq`:<.^T%R$<&^nY@<?ch"T#P8'1md6*krn-`sRc;`SnJu"A1H"%NWDgnqnLB,dK&%Z]%A)qn(n6e"6H>^iD8dl:hk)"`JcCpL+,"]YN%QnZ1%1FK%5-G/Znd9^Ig97kQ%(ELX[OLe3LQ3MaV8I-`Bfp-1Q]2_+PBZ4l$[#nHoTYCS`#R=D)=cM$m78W%2>_^.]2sfF[P&c6bGS,4Q%8X.ASQ:[-U4jt3I-EpL4:-H6Q/c(Hoh^*\^B1^,g]CUadg<7_.A2V1U<fWG`1:/>b"9XgsSW$[\(RS__EkA`)@s_pXZd['"g5+V)%=E1sM%3'`(Xt"<b/VT=eic[[@"2'c,?1ZY8S+Bb8h.r-;.;0l:G=Q3b+Gp_X?Bc!\rfKr'9M=LnDd"00bc;B@(,p1La$<Qo`k0P<%BZh#Rd;]D)ad1//64sF"&I(OZ@W<ncn-#q'7Xk)$ZbI=s$dA)Y<&X,+K4bf+NX*U'oJUWA^1iX.-&&"64p1V^P,*&uJ#u/_`PCG:%Z;rj@k?p`B%nl/'@OdX22A\DAnIP[PULLEqPtVhWV$(/(WDo%=Q1IaQ<_:F(B9aG\%0mm"[e>HqXHK<Br#,h(,#V!m?4Gaf1i*D/%4iYC&JTr,\`mT^6;lfuc"@<g$?>=ZRC9-#pB"_^+D3W,di'X7[$>1$'<XP5uI'RaPq?%Um?R*r,/Y*')Uh+]\qgciur]j1r!PaiX%QH0A[cpGDV3KG>qVSTN3Z[kccX-Nf_+(.=SaG7FB=c_*!+sFH^!Y[b%G*%ea<l3[R2L?0Pk9V"2CiB#2UdIb_>p/LPf!Q[gNNs*u%&):46Em(9%f^[pPjcc!a1)K:$EJd1.(7Ch*JQI6i<PCLmW9X$9X#!2+,Tf=J?ms17<O[@=Q6)TRK9I?tHk&A*>RE,NXQ+AR6SQMl%Dhp>4+CmSq6p97'MJ*'kO665-6^&P?)oX`ZDJ"<ai$a`JW12E&%gLRZMt!7]&L!Ba(nHj1rXkHjKd)?rbAf)0fs&N\SB_^"D<]go%Zt0k=:^?/G7Q'Yn(p2KUARh^*,WWq6ctpAjLmKjm5iE;Q9@;hAE0S(79@9t^:5-d#JP$Z&YgJG>[H'3#RZ1\s0rcO!,3^s?@^Lc0%[ADhQ@p#^%(YGjF-d,+6@7?E2<gV!E8S9-:+\b0TmBK.BPL=(AXagLt=?/'e+`WX(L6R>.'*mf@LRTZJGN5u(`sp88_7H`J,C)'X%9aAq?A!1T.>1*^+#BE+RjM8@5Cj;g!X:r#6.]`6`-S7n2=eMUD6.Ul*U+TuO86f)XW.E"LD<.pKhn7"m[C;%lo,*Dq\>7-]0h!fU%3tQm4$]t$VU#>uV%l>)Y^B9/.d._E$M-_r93<U*7Mg?WRV6OP;d*epLj!O2l(il?3Oq-](2VcZSi<mT)#($\k)U2<eb7sg0',Bq9%6k-:>6'-%FLkA!5!u#L=o2qc0_M`ePO`^;MfN'chq/GAV8V-$;@cW/#i%kD&F`aufE(%jRZ;BpCNug(_aU+XsR`=Y5VGfOn&)^!e%8MRr$im+JCa6cQT;FHTV6k^GY+X0Jd#k8dNZ[(krUlZS-BW*5s;-PA1f);R=Xb$`9dq7>XC=7_qgF<:!'1A'F&rKF;ga/YO+'NAm%>)DOd;\%$K,O_mfMA<W;+rNX#3TulADTKFgKKAB)$4YiB@USNGlb)JF?,Td6K6"WK)(J)cH`!,c$UlU1!J<*D^E&j8)##DFgc=@I%4D?+;M@d(3KVHP%j7qQ=DZg1fcm2<nI3ZVl88o,@<k]0`U#;<u(27^.]Xr%B*9#]_f9n,^[X#NN)efp0Qf&k";WbL0JdL*j_BD6j%NDUjG7kgkHJSAHpE:BamQ>)BjL1AZ-D9-l(Gh@4rl9dHp31Oj6[oR&%";%7tK/"jAN9O#nV^89t&u0%YN`.>[%/S.M-A,MCS"VY^%8Z$W1q+.8k+U^q9H?E,"CpOG%ES**9B*mpW<NV'=?ofHMT,rCR5Z4%A.$XPd^0-M8P@EFLnisXsTMd6tj!E30+e&!B77nL9,IJ'e%&_V4T"4&GGnsKBOP!D^F:'`[%T*n`!Z/2_$*W`pk$Q@^AOjoCie1_mDZF(4j![L2u-s2:(nU%#Em"e6%1si]C._AT#UbCCcjY=d:%!QQB>kCCm$LT#eLQ#P<jPtQHl<P_=d-$q?6/Xa)AV?fW3!NR$B2q1]<5-i([U6eVq\6]=#GQUd,7>gD8AMQ:QD.&=q>PsWq]i9Ps%?>=XC#Y!\gG`ObKWG.uGFC)p+"9=9@d5LC^Z+L8_:1eAQVD^*,,.7U4B,G\$I:Rs56O?;@/t\@26ZHK<jH%+J'1uJrWJZ'Q$AcN"%@,W$l:O9<5ELHFOb@7Go,[&IERL).j:"jE&Go8D9_N;,mR:I-_6&/r`k9Nj!DoQ:pRA:B6B!ZmU7%;<!*+j7IY[X7C.$SP,)m\OL%JD_<O*S=%XEh"[K`NZ:SX!jI#C^\?MO['.HeB2=MN0+^V;9;"rkU?5/D,f2KOu,?+qN4K!9<NOG/P>qS?o#8dP@1,mc$=^&$(Jl+%XG=$V[tGG_?8P=b11^BkOf*m=*82^16CG&O;,u?rTZrF(bK*rO,jnHABe3b'K#9PS/?$O96Ca`*KM$KBPp0uH%U0:GoRRc?O&6'^%o*,4I0O/BKDb)u<-po-)[X!qe$q9RL!%>W&%q[45?6-m:*Li`@[gt`b7**q*_+4U%,RMH+G%dO4&\u\8W+:RFY`<FP<f57$Yqea2%^>%Z0<7qs#9J]'<92tDu8R/:L&gbm=W)07q-&R9hge7tlD41*B[Cf<k>M,1+%oa-Op1k"G(/XUUC]L!"a$nBp>'G>qY\C:OFfV%X%3(L&j%!jo_)FLm=8M'1B!g!Dd&5K**cTB,&:8>=XSO7s<!kZ4/A/*eqc4E5_'tq[J7ut_l(jEpn'qQ2B?s;Hha1.kD=32>t#\LGa%E"!<S,"2LOTZXbK&L,tS;A8B\`58c7#*ie&K>8T:INZig!+&]0n\[gg"uR6RX_uRM#]AgX@k0AKQ3Z?'%aB+u"fHd'=0akD'hST3%]g7pLlsE%4+qS-Ym&aj=j',3.'oYjNr(>uD6reIs#@A-J9`T0'F=cSoE2m0I7D=?!&9h"53hZ"s/YgX+0d>U,6'ZEm1>tN*9%oel%)Sgr42h5C_4k`LBj.q<j^p!j'9T0k@Dk4ts0HD"Jn*sn\;Z`\!D3H#V$j:JeaN5_B8;:5u-P.H`e0p1n&70l0N?Ua(XN`a_*2X)\%LoPK1&8Von9jd)5(^>##-!^)>ApceP:<<6fO9^f=5a3Lke1eaG"K/;b)KIMZ.O)aPPStAKk>rh(d7q!mH@5]g6m525'l#BM:'W3.%-oaEY']N1*Krf>b%6>49KWK2V1Xas=@*%C7!_b5$Pn8[D@8dSh1:S/.^b[28@(q@=Hf!^&"%*2YjsXljI<m*TOEJjI;&"I&m'Y+V%22K7;n9#HjPo-eISG!ed'Pc@B$N3OV2*d-jF-r.YT@"985)2<>m&`f:QD%)VHt,/-JjZ/eVD3D?The6C7MTt/J`'Ki\-PLcU^o*i%(m.iK.===/Knt(<NA8fU\;YjQHq`VqE$e*Y=,Ek2625Np9m`shY?h+;Us4:j4RtK";T4$%ZBs&a6CU;t,#l02AA37/1!7"!&T7l$%mo6\d\R;K>QPsd?m4+nZ$'!#o-PT9DS1&;RNi#;>S4^p1@D6q`\S@<hk'LTC[7QeTqdr"B:gJ/i<\bu^:n>W_8c]FrOID>r$%pC"%FQj@'dG]\[+fEgI<JaVqR*ZCm(7R?4_oXCbj<A5aH3D2gP*C%UU.7^.Tu0#VS8=-fPZApU^u5_ga9_p91&qDF.1a(0g1/F)A&)=P%Q'tY9#kUQY*(;>9d\-nC3GAEMjbSeFH0M9eX'@[oi=RV2fEoj"oBc=I1CrbdE\8e=c#kLA"i=2m/I`FMJB-Vo!L)b'F>f5rTj0X1%s64?Df"#mYapA_5EuqC.ac\rW@>X=nd=MR\/)o4G`->\ZZA"g7&Zj5M@UaLAkn"`7QqlOrNe,46b&)m2Kld`F`iH`tc=NnP`]7U8%,!2O!-/gXjA4RsIQ!EElb+\U;&(ll:[C=[M@$agLXN.@,NGu&Sr"Mm1eIl,XO_e,+iL,BuOr^NfJB/9s8Zl$NE]I!"7:\MW_Qr*F%<\5_cM;tpK_&-SBGZH"LHBUAGo:nL\3Zm$f:!]L_icqn%#c>EXcW[Vmdc9A4E8U0)Z*47QfR%*aXPV(73G@d@^_?jr*Z^(t`jkCe%HR?Qj7<'W`[g)pj82Cu=cYN5`)9Q'5m3H5-''GfsWcXW_,Z/E`@*s_(I'Rch=)X+5irp2Ug?0lV=.D1B6&H1JH+[`fFBOn`L7,br%jr,PHO/t.hA>@8&4RicqN'#eVKgXHUmqe2aVc7qSB1_&KZ*/9cSl/Sc\e5]nRG-rL-:&f5SQuOt'rmfVZ_XgFU1MJW4aK/gEgR<Q%mlR<XJe'l&8?qg5OEa%L8u<ImM*k1A,kqS84_4e=7c-%aFHoWp+X+A?8lU)F3bO.60\p7JZ;H!q9H#p\]%4011ZZo7oN.*_cLX%0%r?VNN44&,+8l'"d1on*:=cX:XU'N@O"i`BsdfKFLO$EnW:;JC!?]Z'gR32t[Mh(#IG^KW4]$M=ZLh<H6,T2@`Bu%t\n6EaN3OI<;%9S.BgJ/2ma]VQm%aR5b_@DJe6qorns8eWCG@13p+D&N0T@/POM.1bSiWn[RtJA=s%Ra9ofa0qY_F9aL>?nWn'-g_I&9pJX8.>\dQ%dQ>a;,X5+'%6[KFO+f!g7P,!Il",$OJiZpRh(=1k%NOVfk!6HoVSU,&*[<.dW8Q2E5Uf7Q6F2:ZJN,pc!ehb-I+"@7[n%6Z1=B#e%Yj'5g/&>)b-e]n1^)[RT[g?<&OJJ4Pb\a'Y65m_oLpA9LQV)j-1ltgPnYDB&H&LjpJB@"s<[$d)&X@r5Gib#PM[<-6*mJ^S+gPp@%B"]R]?G`/)l@R5@Mu!('7M2UV*:F&p4@'bcp]qnnoT6)-OmYUo(3B<qCeMiMR%Zd(j5@#Z[mad^3+Ch5Y8fit1^#@0`B4J.GaPP"%>:-ldCBE,L@3-YT(ghqacgnprXrC-_B_fPs"oV4`;7R\m.E`Kf^at'g"n6sfNTYE*&gSqdS)\X].SC=+kS+P,YL''K6mYm%!LfkM%&o!$9_<5O#o(\780JA#n)0X0in@YQ,Lp)gE^4U\C1)o;JbbImj_G50sW>m`JamShtM[e"UAjD<-QmgCW#[A;kA2spf;MSN@5Tm9I%4sedF,eu1&jY1^,.QgFIIGY[U,j"=/a-7GFKE:2CBod+&'d0fpiU@G**Hm6rIWu8.)>pR4dKW,g#)+2"!AnS4'"tW9h?$Yj@MKSL%3tt;f8XlJF`^!S0$=L4#5,"V\Xp@k3Zhta+^cr8bMOc`0L-a)J1dj&AoS3LuU1o@E0Q$(!NY$gW$0/#W9mM[+&%Ds/?@'!'@U;eX%Gg9!`ED:sQ@b"+L)b;c<)Zd[L9I6&-B!\d0#NHn<)@8q#iB.K&+eXD,K5!mujonb:h^i4BGs*mBm^_g5I1<0#gr:!Q*2l.nDA`G2%7DhtP$a2f7@:7[H:%kA.FmqA:#2)A4WFDTtgg^W,8doZjSK6'U">p>RZRQnXOJsOF.n?gB1#48*KZ49o1@UijSC(mRq[jut`;!sN%=.pIi)!].0;+hd;e1`AtedN1X%VQga!NOb+WE^8Idb%+jJ3-gVqKHo,A)qn0=Gidec4QM-[]!Y_Pnfr3BT"?pHYJ#gdh_To3[1[8%eK4C761t=&KX=6l<Hea)ltDG`L6sBA\sE)h@;p&dQu0B*Z0md[eL&N@&AX5`2^q!\d*oq&PX5-]&^2iu*ht0Apc=jmKMT*F-=&G_%j4siYNsG<iA%Z$MQ;'b?c6?@)-eK&S4gP"tC'O_U+=T@C,D=qd8W\uCTR.4N=JRlkQSHkt?-+cg9DT%TccWO&S6&+0Me&"\BL89,%>Ct/f!i)#D,,5@?4B=O#8.m;CJ"4W(W:6C4USL3o:h>.e:P]FCA.(G:fGr<_cp:64:nB6_D]P=;Pi#lQg7.#uQ!f.Z6_rXs7#2!g%Cck_&J]fZ'><W(_SiCPeZFOQQSI_$l-`O1\<noB%l@8kmQ8t"'.1,L]0J")_!1;f;%ub2+_3h<SOR'\!!jl^nni9&gYZckpl,ca(%/2Dg9=94U[`UJUe^1b*^M%G1n'E]m3U3;WqdFs:!0d'JXQHY(K"4um/V>"qhQuXUS!(@q\j"%3e4I<cbO3nLB=.j(3aZK(DUG6E`%_ep_K('q&,%'YRfPlZ7DG_\5KiI]:nTTpC<_pt*((>3Tr!CK1]$rU+iSm-K0@@7*;ZI)*aVuVoM5,<df+m[oc2U3:%X4[];Oq+Gk%AY3A2=RcMO'u1fZo_919DO8>b>EnHDO.MFuk;dM^UMWDWNh^SpX3>idF-;'>604jhKcgX9J[K=0IqhuKighBM[5l4An9G9##^YGY%`ER=T")'M`b0cTqR:nnJ<#[?^XNmCq0N%s.5A<5LEcQh'5]t8_a!X?1b#W^A,+R]1,6GpOfHrBLb6C?mT]p".(55[0$7R[6#X1T0%!`(!OUrVc&F9k8_/U1-Fb@eW5R`af54SB]%SB1/VVd<$`3)"jX?GRsd0O.<`:J0h,!Q0c?G]<)Y4;_ch1JH\ra(IB*/-@JkoI-A2%Om1!c:e6S5"inIlNl;be*6>Qf`&K*jU'c;C"GAs0$k"+K8A=9I$-5%U&.^7seR]rPN$M>dXKH5nMKKolkjmL?h=1*R!,7R[)B2uS%k%#sPCi`/dU4W%6[Q0Ce4jfOkfp#O!\R,+#W\83d)PR0@d?j*u7TrWm8I-(J_-sE=jhGk]hSV\\PY`P/T$AofX;lJFG<A3RC'PfP%$nUC:$O9u@LT*,`K;X!QJciaO_1Uu?D^u>>:JkRq]U!8mRH6`I=bVm]RcX'M"B=c1G5R0O1*--`G*'K?)JFu`ABj^b1pe1&")G5q%"?)j;@%=NH,m*E5BgK;`5D#k'8Q%qP<b/(gphC7W:[bT="H6*O3=`h)f*?U?+;'Da6*>Do*5\5S9RD_e$)!(tpC2hPfbh,q>B*66%a;QC7_mZ3a-2B/:7-f(hXi[T^?kke/;6gk2Uo6F..?tSJ'ni8N>Z/\Z'2U8a"^Y(Cfm8mM/W._aR2"'?JL!3?/[C9NlO2X..L^#_%/70*973U?eD:[`i3<`YKW+.*$j`/.PQ50OYdILEr>*O]%:K<rW/LD24%E#X-k@@H$!pX+MBaJR8j3f;Y$ne$E[.6J7][4gcKL/GN%dE)1,kp0t*Qjcbc-`Lh<$4==UV\AD`UcMF7SJ78!*8!%20etm;4sT7L\?*rp-u*K8Q=moF-KJUgbY8?PUiDNc#HI<mQKVh_:YB0L%*^9k&i.+%s?k.Sn=qMH-Qodh\K3Xf-F3=rP?6cg)%?:ZXL1-]&U@rF&(f"^Z'NZ>?L?BWTAj'2>PWi25n3IaOCSlV2J`t'?7iZ1h%j:h+D\U:E#kfuFHT$k#Y$JEnr:qMm&i^9?X2.b%.ZQ"tJ2j%^H5/E9r/'Xl+p>ai-Qt5<uZa%qP"Q(F_T$!MDAM5+t2_aPPqaD5)%?BQ<AqOC:\<<N#"FujVV8RXY+4.Tb_!L".-T@4+a8D[>>O.rP+N3RCa7A^5hCLmHIU'B$.)%D\"OprPVND'G@J^dl^F+WY0+<*MB%?jVM72XRd7HAkmu=f2Fi(oroP;EY7P/Co_I44-%=s!!ic/lHRA=o`e7!`6RfHk^[)<tT<!MBOi<J]XAB>)R@X`8_H`]o$B]\+FES%/!8$e(ck'Cd^"?,,S$4`=;0OJ::fq(/h/h?kqU5B[HcMAA<2I[O4o=O>49km*\I,"D3**dXTHZ!2tgp%O4#(LKg"/BU:!"=>;Z3\%3M9XF;6i]%@uld9.]Y^97?eb?rY]NZReSbpf-Yt6CF0^%213YZinHZ*-PJ^&I*K'U?i-9b'>O5uf-Yskp1317!Kha<br1$qpLN<R%#2e#jrntH0lt]WAg2m=7CH@riNg#OWfc5#D']E<XCsK<(k_1RXc!1u+)6B+4fl8>O<c)>jF*=l%lFlgJUR*U#lttmZ#DRG:FuD_!%PG#9pFuFD@<C9@5db>1d&tKP2I?P^nnOo>bYq3MV+\(g.Y%hlB<W+]!62>p(MDZ`IX9r4T(TTT!NqY#W76NB!bAa8FlIo249?EeX%jK!4'r2!niX2TZ6KX_W\E=GcEjY&JUS[7Lir+3$I:R;c'q+LA$5XaAIlCO<]]Z4dICW_Bd/5">bBGWam;_,tG$!<+>lblDZSIWg)%g:5^kR%;6J^e%?R;50flSAo(V?kl\\1p.Xr4J4iJG$#-P*ie]R&iM8?"C8+_M@rE\[HXY/*X0Fb^B>.reBh_E"mlNW4B>aK"YB4M%'QaVW<"?'DVl<:i5SP*n-_X47\M@hNDC\\0a.^[9(WU*>?KA.,n2:VPH&O-G/d`C%LGAN/Bp%(<ce7p0A;@Etbaq^;,9'niq3hpB%))5Q"Xua_7#RsOSN%nlD('`&0G(@`h+_meS_O*uT9*\\GjBU\PF'26V/8Q7qeM8h99D):n-OP/:b@:!jG8B$/=H,.M$QA/O.RmTQ%B-YH+1")S,BKQH`FcKo3@qbRq@PLd&)3Tja9i3cG*]I^(\'96##r[YNgB&LSg/JA:R&5b<A+X#fcW#X3+?(u"f#c'JFfrlgo)Tk-%Lb[uo)ipRLZt--k($*VaEkk"4PqQmOZKU5sJr2'f/bQo3<.+3F,iBOu4;$eJ1[>/W4T\9]K"Rqj!+__f%JEMBX;p]M7Oi0]!lp($%%A%>C6;&9.g+h1p">^q!Htq.H"CAKL&_48miF%\R^5CWr^pc?LR]G.oGVHT88uCU"`:Pt>3qO:f-EspWUUhSX,IeY.<F$.V'"R!E%QPUX3pDDr5^iD233)!PT$8O'HF5TC8!+?\S:2Qf=hD!$8CJmMNWerOm6k=q,@>Zd2?=kfhNA2ctkp1gY'f!Y&\_b*/MM'>HoA[$9%"sQa0J_s=_g'^FYSWN5=Hmp_HTht?rPfF,E2O&ZRb6I&9l=@'F7V.5!7]L3t;;E@pZ5W<L>[04DWiZ&UO3m]W3\LQP:kW:CF7]U'%YRSJt&n!)R%AM9s7*9(nW5bk"EHBeU/hJ$09#ZslZtuo2BL?/qF5O(>>-B[5^ue.o*3k-YS#W\W?"Jg<%TUTM-0-hud`8FnXNU8T%I9iZNDj$fGhQ#-Y<H2T6X+<M;2Cp9m=&ucX/_i*`iNd@[C<_W2Wh`g-Y1Mn$"t`hDr*TW2!X+3L_\nj8(mF6hA>gbD2O%P,1kqf&%fi.A/3X\JI+?VVA1c`$2A*I-h70Yh^^-'CU/LFjCDCP'OC,*O5YH`\&dZC(B$Oq%rK8c`bZm$B?A(1c.7@N6En#RrXqD"m&+C'TV%Jjm)?U#MaKc$9cC)37dJC.^h.ggZt_!0o9GP[N]Q+3Xc.#,7sbPn8<3U:Oip>k](,Tk]LQ>>.m-J:L.mp_71tdKeh(oaZ'u%jA\T%<Q>E,o-?X[S&NrOQD'la,2G#P1+F],\t!kM34Mr!b,H-bGOM$q(lJY%Yh!bOJ:gcB?Ombh-SYb8#mRWDR^!ud,T0iYM?Ntc=6muD%Fq>GtN:@GpFb@YbMtt(;arZ-B<XEMW3=,ji'^>jc/&5Rrk'Y.JbI:=dn+iP8S+@Pgj^PiHQP1T3U,@=TLr<b^f[*Kth17SI[Bt?C%V78)4F('D9>o)f5"Mq[SMW&M4MQ1QqQ<CS9M$CiNED8#TpN'_b/]#dtB+,SDk:BNL2Mt-)7Y3GW$Rr&YY-O<V@u8G)#*&FX<G?e+%XNq4_iM':(=(dN4[<<Kf*hQSrGE01JK+V,u_7*U[]YT[mn_g/4r\Ak(8t\itfG92p"%)Ws^;We/WtPW0@W?`t#3<(,#[>5d@<t$M%&IKO:(u=Xg^rrRS%AkHhI@KO.3CTiH7c0ZY<M$J-;7M_@b"]6;HE;RX(j"uNJuWuSpdm>Zl1Tdh!qC)ZUM#YdTiIsEhk%X_:mnH^%)?uAn7A8HLfH8h6C.S?NHoD_pSj<9OV6^c6.t;6@OsAm).Xu,[7?#H1&1YmoAuM>8S+`6<Z>fa?PIV:j].??&Mrd(QMKVra%^C8`%]$8+QI&b9'"#O:8"6/gQLjY`sD[VWFLWSW"&3K4RFs]&V>g1DW"rj!I'01nC2(U@P,-)/*aa7!BlJ`#\o,5AhA;1T>HG#>p(tnj)%i6J<mI+4#GD4<:&F`MW(&9BUm7;rMm-+,5J3q[WbQ(jT2r(SNIc\EOWOAE\F\DjlJ=,^18Sbe(<53qF"dA!4NXiBC,cFd"r]/(Ms%ctA9.=F,:$dUUO+Z;F[,<aC!<cR5Q:piZB6@W]P.N87LsUei/pS]c-nWId9=HPNknOYXu0D5C=466I<1lh[WUp>=Q)=/;m+ls))B%\N8o1$aPmUXcDu'<9dFX[*<ouakf@<$uZDN\.'+QNFPY42<`tL*"T]C!tc"M"/8V987g;'-;PK/oYIj]TF<q!19bln4J<@=atuVm%'Mg[`^mY</;.F,l[1i[<rID,jCj]p\^#mHr*e!q4:?l'g5m,Pl+Xi(mp5ngHGW:G"h;GZ\lXSM245ApLb*_8dkZM>WiT066'9eA&%:Y1Y!VN[q(%VB;Ca]$fYA<fr^[`Zd'9JW2%<<JIZ#L=_F),?bme50(1@]L,WC9..6.r$>Q4m+O@PlLrRD,(OMfu\9YjBNE51G"pa%[ch1Bp-0GCTp2Sj.T(p:2c,N0jJ.R+&cd/4H9T1K\j%*SFJrS"amU_P"A@CRX/aImWSl,`)b1e>rXg,2hh9s(nNF]+3r.IC=c`A:%DbfK7]8ru8]^bT'OPBB+8<@/S+Le8dP9SU+#.^_3!$8-'H4Pu%diG;@)n-[=a-.-BAimhkIEhr4X)&5D*MMW2cD@m"MX6f=^<7;$%=:s6,]55T'9;-cOWTYBd#jmQJFE>mj^$.>J@]e$_^e)B\4=?_/F[<ZjdmZa`C7!+!@DWQZf/;H%#'Zh="_Fc/`g=_8R<.BkHN"m,%b=rJ,6hCXb"AhrBLWn5c\TF(/$bmlrlq5");cAs4Lj(?=>q8o,CoD*'H-CB,B4Nj&[^d5TF40+?1g.1A&WVQoD-pRY6.J6*S<WVM%j]"8FF*Y>N*SMZi24`a-412>\WlD.GO=Z;YV;WI'b1cqR(E,,T'h-3#fLA\j&+?cZR)t%@SmjEkBM%qSiE\;(qQ_52!iJ]uKaG$Z%DX0%h9kl<AlDclX&TO["diRQ>1Z*`'(7fC#qc?mAe\-GP>N`ps](h=;3a79ko%d=nEfc@MrN#CGYODGM46'lmC88A@BZ9+L6B0K[%'q6lU1EqGl/1YuS0R@#,Z$>Z.E0V0=-JBe0emqrWGK*"W-ZTA<:pAY.<I)D*_lNhj3Fk,I.$Wh$L\/D_#C8ac6AZUL-i`CQ^2-a2%gJg%9^B0c!C;.=bQUGj26]`mViI-`1"SOHu_3U#G#FB@;["*>DGPff?Ts-P9c6`>e5Ab>ECX(;)#@0XO_k%tc7^Ae-"q7S_Jd4t#%/=<-ZDbCN:<EW_e5O3`daOP)-=so^X*JJN`.jHhpibb9!<$h0TZbBR>1cc50,;Y3oj&-QpjW^L3\!rm.(6=M*Kj^)YqJu'7@]6nT%%Rj6&k!D\-*>BoZ+uYE2a,m[d_D`QHUQClk7FAuEY3K;e)2b$rF\EKT-n.2:2V!8-U1i\"13i's'J6t82gbn'PJ11%d'5V/i%JM)%_8G$'$t/!%WhA:8:>OR[\"i7_!u_LSemUsePn)_MZl^8U'F5g4Gjrp;SWaA3//[2"W]S@TEBh'1\U[\qeW<dAe[LUF+S(TKD-m``%60'Jkb6RBNhY.AhaAsrl#rb&#1pBumBRkkp\#(@i,9<kcSPp";7?1;-YLSo!SP4a<1l[@gg+nF,[<=qUh"cm81tV8@;q.gh33M%S%)9hBga3n+_?##=kXrU"!G1?_\K&7o'hZK]#W#.CR8<K5_,sag(@=2ra:c)[&&n%Di3RXXUDn#k5S>).p\$)PLBQSSB@?AEY.0tgF%OS)b;+D<TnMLO30TX_9A.@F'F'SMW<OiU0"2+DY`N%ed=`NmU&$h!LBko3EE8:CFR\"56<%Vh$>XkP54q80CmPR0U8<NBN,H2otc%BPu1]HPgAt[/P*-THL/63j'TV0b#Be:5g:sGtk^[-YA]s)pd*N56C-)LA\:q#aM#1^ABYD)pN%XP@J,MPHodV,o!1!lu\q^gQZVu%g$&YOUC5#3Ze36Xd<6du3b6ss5afd-UoatgfHPS1Ln4)n:p?k9=(U:A220Is;a''MW6>r<s4gBDA/490=k8+aaA[@#UqAl=I&k5!%JM]?;mLjAp]Wk7"ieMA*lOkt0XA,RO68_&urlQ0;b3oUMU\U<3nkmsd+FY]`SQR2+k9OoiiN.$g[7MYGA;s5mduf<&5d&lG`M\VQ%;Is4F1@P'Lb-qEl10q:GWX.8X#8j4u5tjgWHk1%17KK^Zj--!e&KbW6TiAUgduBmI&Y%knRdEU:Qf-[Pg-Ji6:]KhB9C"e\1WOe4%"+,F)">WGa3Y!uUZ:4rO2muF_ZkLDBUD0[rnM]S-Q9$k/E?+UI4-[H]'GDX0h"uY)mOE;-rlFg0[\deK!7dhgUlW_k5"<RB;RgP*%(\,YV1c?L6(h9\ojWZ0XqtM2Q/?rU:&1mKH"%O),&Ur.^Un&]E_34'1L:?f%L>G9.=3"i?f@O`opIKiFCARjTQ&]Oq9,.5@[rft_%ApLjtheD/'=CYdKBJ=[;>d\>g'[[trDD)94&.q?/:%1>!4B+5s&LN-NS^uXoR-Oebeb&<qX>Ugo;++7+kW'Rg5-"=Z9m"26S8W6f%pR]<RR=QCR_a^dC#@\Js^b/;FVQZej1V:HQVZN'Ha=^Us?9ena3)*VqXi:K%:5>u%i94CCF/*:]:TZO>*`bn:`9GjX0udL#s)ma=%2F^o=endn>;K6_;IBG&qGan6*I?/rM#WZ63H=$)sFX$"4#qgT:E%ZfX8]LQGf9$*fkQS*]hFLA#A1hqSojDeh&]AD-'ani*r.ALD%dkmaV?)KW=f/otiEBD[fMVY"D-*(V-ZeeW(>$G.Dh2&G(Y3]:cPIG8`pOO@s%GEgHh9H+sM:'$L!$;a]e&\8YQ6;V5)gh<\&5AsZ%Mk/)pU59"+(">)LU5>SVomIcIKB+_[G&T]'+M4?bGCaGsa2bGg^`hd\<7EU@#d'qhFmd#hq8NjXAfNk.qk3@<2R:kTrg#tK8k@K=%9WfjaAu4oq>W:od,H]\!BE33pd&J\N;8]IR>I4Qh&mI9"ZVkKk%Vgld`njF',-&^O[`:s^kn.)eBCekY9919`,s5sW;jHH<VZ5hd%Du<!8P)6:KYDJSo<2tPr;5b+tk:#sK_n!>pb](#.ct*6olq!:ZkVF/\EN#^diH'@bTi)W<i_W9WbrK+i:pH-ii_ZIo<uh'!l!(c@%1Ri=ad@NQB/Sh=o\bMFY9k0>#')Q$;QRbuk'm>**LkIX\@MdJ;5h&IaSR>r/XRh^Sc0=:M',?M05>=Pq`c\R.lt/:D2f,I=>)o7C%/kn.$&fNfY+.E."?fGqB[jIV*ql?d&a8KF_4f"O4.C%$[PIUJaAG8p5h.P2lZ`Un^4j%?]qQ*UBp"!_ZD$l%GJ9H<Jnk)>7_0.Y-%KNWe/QLAfZ9,V4j5"FL?clj9`m7HWMc0V,k_8W^FF2#op7d]l)[[0b)[cQWZXn8Ksne%00rH&#J?t!*4T2&9V*8RU@N%u5,/cb>e%KQ11"2-^^FJ4%n[i[^Q(*D`?R@[*>6e5"o$DjSk*6md*dG>3<"4@IVc8g>tbEA+7<``SOCqo=riNTcMO&pmX3MN?eM7@>Q32?hKf%NlOD5kr8ahL.04%l1=s]gIj9+p_a<A5D;jA4`D`a=Vl[Spii;X6M/3>9e@lc15)^)W;3&?$gG+$8n"5pbAuZ<nb_@cFlS!F4Ycp$%XD_A5di2j#HqnDRYg79-<S>h*4bFtUT4E8-$>,6^#l4Jn&#r'@.09i0*ZN2%P"-QVC"]=l;Y"RL*25a.a*OH=8<a9k,6/HjA`A^E%?;Q^u>Jqql_sq39Fp>O2#NJl3Ko\7Ol9:[[]85r7'ERPa4,OqG)gN[@49,YCKt$"L!V]`9;%_>+Xh4p:gN)0U`[\3b%1iQl4Sg0S%jN'pEbpX2'?#C^#CG]lfrP="BCXHe+J&b[]V?H)E^X9rpD27G"0=f@$f%nj@Z7pQnp:ZBu3%mp'S^%EqQ]jIB/X4Q30lk;e@W`h_%.$DW5Y%978Lm's07D/^LO,IL!dPH18f<QcRN6.i#*VLJu*iD>'</I,/QF#p(@Y09DES6\,--T#8Vmgs/f]rsmT`p+T@>poG^Y/:9%Y',sI=_hne("en:/X_m-PbEI.'[\7AT1:g!jo\T_,@dFT2`deb((#6A&qM8UU9T8)q\k"5a&?2@);0Ze'3Zgbi?4V*m?fQ$)bb2m%a\C]LAteWN0eAsg^,>dm,iN[k%bID(:qIrK1[FNpB"$K'E>h>u#8T0;g/m&]18p'3Ak9#tUQ*O#2"K%3;8"Np(GSGrGbibc>Y%MQ%ON4"Q)XpBu&pUnk8+t+=Gc@5HF4ErbhP,\9c2%AE(SGGq+j7T9J-neNl)JB\KH>Ouc.M`a&!6e%2DrS6"#SP#b6rRrI"7<Tf)Wo.%f0/bsKI2MDcYrs&cA*/XD5nd\h]e_q5(r=ii1Ya=QIiCJlt`X62d09?UpBq?>&cr>J'Rp\Ufa_W;-fR5U+!u#]1\N-&Op!;C_=At%/\+>-$VBdC[&O!C>Oj4U;61S=S25O&Q<G/q4HP)?1&?jWjHKjT^]AJ@1sdReAqJLe>jNI0COD3a]K8]s:,H0N!>VX9<YoYj,T;/]%cMQIQ-OKY#1-Zf*WR9CU0*4W,7E\pQ+Z#S,^,-+/k]o#?T7Bd/_u0lYoq^P!A/'J?lLdC0H+k]:5N/?.d@kB&^*pK!(T"a;K)74-%^6,f7+IB@g12HRDoM]5!CJ=&CZeu]CW;m'(TK7IrHQSVA>N[6%8W\VAnm$R<@gHg7=Wi*fUL#p6R89O4aP9X74(r,E%..hXUPnVS%W1EDDK)V,=B4RYOEFj/Bibd8U`_[Un5I=SI==8hiQli)op*RkNP.OA_,<s1'8B0%!RWCC-:lV1Zd9YbSNRS8>06EQ#<a<%o,b_iW%9[\Yk9'5T(UVJEP\$Kji-`*`i7a`MM/3e8gDTS:[;,BE+>!KbrqVI2G?r1\:p8En/Zo/pNKnhHlZhrs.2@^2#r,@B"Pp[`&5IKrQ%JKa_a@'t"9[1`U]KCco7eZk0i+X2B4Z1a6,e0eI9c$O6kK!C7a1h>sJeEi,kb!aN#U`N:C1^(44S+aN,dF)#p+*I8Z&S4<4E&"eH%!<+rsZ/3,,)D,!1^,A:cLFtK.\J6SnbXOsc+e;4bs'-M:IUlOIH+>u/eB\L"6(jU&J-YI.TNF"ZZ2)OKL/_a@ApgWn(:k7InV$r<%Bms)_PfCF`T5+8i=g\k]K.KudW3_<B-T'V@8LE'8gNM7"Q"3#`\:-4Om-X(fW`2sg:t@FdiK9*33ng3+[AR39IA?b/M\F[*m0si'%!fgV6K_77hHbhZn/#o(3HRNk=JpV'pg5.o<>"!)M^]U^mZLpbF4=H4pMom(+VujH]KV9OZ!,I%!boa;]r(\UHMJ.piqruqeejnkt%PrsE\:M:-^V_6.an-"@[mP6-PFl'U!oOT=sBJnYN\2>9bmHe>#+4beKO4flGg[,Ml2"`RH@^+Y.bgVG&5W7XYAHW[&`,WT'6d4OL%XfG*`F]EEsdS/Cs*_#7,_!bC=)bX?!p2V!Cp%jE7!;id!J,M:o>:$PC73e,(cr)I#)db%(O;O_o;rg8%:ac@iXnqa+2pj]FMlK^S%F@VpJD4aLZDkiURp"*p%X4>KC)CH3YEU;9>/'V(RqGFTEQ5SkFI[_[+(bJm7^.6e?9p+r"XDa*e>MlH)oaq,q'?sbMIuCm7WMq;E%\0'q'`aOc6!pi8=fm@Va_c*<JLi)/_QpjG0YH>]h=D,OsUD`-3[c+kO4CfB0P&iY0F%kD6b=h#jEkNm]P@jJJlWa0l.:\'$W)b>.%U/(Sn7$uX,@]-moG(_RI;l@<aVFuF,Zo]*V>M9d+[E"PK*aPoAhJ"'\[G%s>hCP69cR,r1qN$!jbJ@jP<LQ79s'mr@<YW7jCCHWd%DmR0C3M54m)g>>,5A/I/;o/&N-SW^7Q$42/qs*`7%Y?msVpNhuB6)@+9Tj&`&49E+")gBf%FqTe.&u\<=iIQU+VA:0k3BSus+>Ch%3DDr;Fc^o!6s5g.d:326?YLeDgT5<VR3qNh#SXfREe"ub\TaYkFBjKR@]]Kt6@M2If3%k)*<VH8':i]tLd>cN)LI/;qWfVb#+TJE%=FempQX;_`(59GC4sB,9g:fr8eD4[;>sW4#iqsU%EBn9Is6ApWDs]Ei3db2YK,AH!d\71K\pH?[Z/QftED7T&")Z"sTo*()/sU*B%&Kbo`\XnlM_Q;BH>%5\'XX`7'Z"l+MO0nt_.M-DE*?!`P<:jY$="4JKQU7t>>,PB>N!o1=PSVO0[-q5m;7iB%`Q(.787SE_>p3o.%S0U#EIcRA2$dSMiC>iV!2t!G@7ET"NEms=g&k=*fC*T813)W_@nqJQJ;U4R]K*ROf]GK+\iC(K"Z:k'M6sIZ&9R.sKmVtVMJQFbc%pY25,-.8sWhK@M,8DBH:PhJP;>"n5A)k0QEa,5`k:<Z&DIZsud<'IY8OrA"(kd(@&%qC#?iV?AULTe(pks_*Bq["rj$3#rE@49GT%Z^:a$`i6$L80"DZ:T/b:YW5H,eT@Y>8`-T,<0,_[C^3]j_9"qgY=pO[8Vo=gMf-F(lEVLq'eeLRBRT\&8X:d@'pkEG+YL_;^V7rZ%#kdP$aR$?I?/_si.)i9B10kGE1)Bt]Uh(;)YShEo801Dod,f,qpD3<lei'+`<]g_7[QS>8aM\osEX(YkY_W_d@h]oWXl2Sf44/%!%<SGJ\qa6@Kfs\ndjYpqqB"3lA9'5/H<iUm9PbQp+CDOpERssM[73.GhHl*m@6oUtIE@?tBpc7XZ>G6!jE0YAJeI3n\VU0%Ik2B^h%+&O42_^k5!bAd;/i;FjWO236YctI>-a.97iEO^fp6t(2I&K1YlVI-#T;05K'KoEl^69P?se)=Ccl%(J^<GIUV*GF_M#>Q^`ltt%W%<^n2$Xs3BSA^3L[m7[RY6Jg]s%]CY/StOn6\qomHG#aG,19I8p9W%HuZ7I109M!^S:hMY^6eD%uK64WD"":)j"s0k9!cn"+??n(j%eChj@b19bgDm$ZF)-sCN:I>%FVgU5frn+sHAPQMRn;=ddG_lR[ZZ:Z36;sMS*eH_FF>o<Uaa<M2-[_E<d%%d%[S%](E)(,;lrAuk%oMUoi&t,e,MTOQ\YL#ok-[T,f`2DEE<k%<nHT+=\?fufPf[Po#JK_4kVQ<]VLof`V'c(I%P)ereY3Z"6jFC=eF992dGOC9.=s(oN%e$b"jQqlM7NZE,g_<n%`Fko`hi)pOZ@-G&Xo:[8_20j:f8W@P]mbp,&3TF=0iq+9Wgm74+M3jA?\IIn7JT65D#_KTbF\&Xi*R'ec%5'nEm2d7UX+EBNSH?N#joIXki"BqeJlGU(RpN.KgD4u#_Ro43jUNkShYgD]B;L(ZmgJm"LhP%+'->+h).+s-d[qXa$K=?9Wk-co`%4Hn2@)1KrKgZgWfdT,[?bk07^Yl*scVUBOO9'KbqO0q"nYBd]B;Gt5Nn>=PmMu?7?&*ld4Ph^g$T#Im*g<\3bVj0"il!\/0]5B(`%^!6FTTALniVl9*&fiEf6ZF"sL>+nM#21csT11cW%1Dq=@1lq@aUm>hIa=)R1'*[,Y9tQlA)WF$Ya$.6CAKDu"I6:;<&p8A^,!X&e%G:uSTo!2%&(H:[&U2b$;5Sm,eXKf6;hl876]4_d0;Eb`1e4ZK_c`'gL@45#3.Xj>Pr:K+Y8Q7._ip;S8gejn%hm7@bZV4fVcY>Ik%9SfT7M_$#Vbmm>$_LuVud65ZedmnCi>cL6k'PB&KU@Rp1Zu8?nUA9++V_eMXJs5EOJ1j@ZM_R&/#U*EfJ`f`m(`s+&8H;36OaI38%[';5_oTXoqM6TCaGDmuBN)<a6"nlYs8s&<_VAEXA^g\/4;3r*m^\VZS$&NG%d*Id-H+Z(?/4&[mQW`2o)BOR_+`)DQ6B/`-F/'Zl%8GrDt@[r;lJ\Rfp'6mEf#Tu6pq_#jG5g3lXQB1#/e@W%E8seV@JAI$*oqcp7%0!J#FQmj^CenQY;tj'TcdFir9c/7]!ZmnncWT0"%M7,g-Gle^>d7uEbW?*!/0+LM]%<JaO'M\0D1O\VM?;ICkc3i?XC/u-S4>"\h-q`EeJEB:Z4YG2R[N"TI)TmfgDSU^YOg25Vg:Hd)%[OBBB\ZgAXncgoUUV#HNK0\G$+BJG!k?FQk5&f(=Q0T8<e]0(AaV[Z=dRL$s#DX52qZ>$28]nmQ\hU@KO$o$36C+q0>^Doue__50%X:sV[mAb6<"*)a5/?MnP$'JliOGP!8e:!3_&jf#u.X<*V!r.RPVmr$+R%Vc.hm_T<Cj9)1j4lJmMU=k`<5>j#Xd4d"LC[c\-+Jm\%Ae<3p4Sh%-i\[ns@DUe3O_J^EZ=.[P:ek#P:e<!l_6ObLOR@qjL'9\9:lV0um11VH2h#8PHCh'S/-6MUo/ZRj4S`R22i9R@F8&#`%1H75r3`.UeZ;>do&a3bZd?U%%!Z;FMDlt$6)VhA?qk?O@&'thAf=8+u<@58_d>Hr3#McbY8/J5(pnuXH!;PeTm"RW:UZSeLLk1gF%PQ3aA4#/Qq_KnGEI4Ig`jD:jN,kF)e7l:;WlG#;1#AfF]mE3=eV8Jjf6k2NdL^Q`t8)_6+eP-B2TQhUTHmXs77oll/i8>-$r6#Z3%NuC#umVdt<5DeHOq#Tii<-#PpKIXAOWoX(5ko7#dU80\9:0L#-q^i1-klW+B"^8M[Q0TuIIHN%TID@5;p(VL[XCN4+h2f]9MB"ls%2jk&N/n-A.lGKc]N*1^0\%,t98LX7(gHR.jY(KWM==.PjOZ`fCSr_7+M"ko;^/^2(:nT*oB2s*::`\cN3T"WLTcBrc5[QG!814i;%Lk\M;5@fD1UDPEp8V_BhMo!NAjFH7U!QWlg9u$oR6p!;YTOInXenF\/4lTJAjP&p)8!s?r1^$Nq9?nD5#1@WYaonnH^,Kd>e/0cg%k$oH!+=tC[m'''`#@uPJ@FHi'A[p5gF7<(hC9eGW'K4Keb&C`3iM7fD/BK!O@8gOVSWN3RM2am06L`_hk:KninBukdRI5aP_AhC5%Nme=1q/+]lVFmYb4c>G-FL=c#KQK(YaU%F`eKdW$d/:-?/iAfMV0Cuk/s;ge8D5Rcmp_Me,X!p*/rneX)TftG]@9A(Nh5<&o$;6<%^,8jSaY`BC0<4Rqq\Y?K:)0/3\La@F$cu.cP<C6G/\2qh2LI&MZ'@9H'5%"GV.C9[50=(8FQK3*dRD_fo&YKQ1Y4'5B-0e5@q0Va%UMDQK.1p\+?%\d,VL7:q)3H2jO2r1SopfKuak\r?YAH"?CYbT$.:FNgW4b2c[Ko^JISDj!AA!s?Z1h1k5g(Op<o0.WBGAEU,au14%G3Zl_Q$Y*..+aHg3+>bW7[Om$`N^R"h-D,T$:QIN2WIoA?(pK:Zu6[mm;s]c9$N[O_h(5oBIqUiZVWNuL.R`CY-A&t(>Tdq=bh<$%:f=bYV3J`&^/-\Ar*M(!D7[uY=utdRQ?"!2imE-^(:W&b:fNf3`F,[RqAGOZN@L_5krSbN5::lSc?7pCW.\^pcqI$sXA>Q"'T>'U%VYT<^VY<5Kp+.dPUo8d@E],LbK/EoDi"2NXC+=pB>,G!dOPj;%*&eT3@^Oa4.L'11ehc]=(/20Xp%AVOWO:3j)&X@;/9ITEB;q=,%aP#aPDq#CO:Zehjm*SEP'+@cAl5C0?R_k#W\<F"1-OsLG6K6)O7>?,HojkY5(1#V).(Su0O&S],ql!ljTta;X]5:4`ON<[=/j_)A%::=^?#T[P#6flCR$H]crcIG1aHF^[_qS#Z\5-e3WW_P.:06H`R5h-oi;9pW)GL[aQ3r/OkM)_8"5j#'"6[U*YVlZqmC;9W@b#HKL%?pDE]hA$R:#FLD9\slP.EaT1'-IhCiKa*^5TAX6^LRn'-(@=t,rLEP?J`u,qTV$Ub;Z8)799K\*1e_`-(<Sae<J'MX.P#X@(#Vt@%Fm5etQ0KP;n!?)Z<#")R6A0aoE+KGhMDOnpEJlD+-+tu>jDE@:*pPH>.fG@+g_9I3`NVq&05E11^ors9D\$t:$O1?k]U&"7!J8at%bBGXh!ib30ho-FCc*-]/*;+Kp-[*XV0L=IT\U'#f.D2WeWcuP(GYFap?&U'PFKXmL$H/4DlrWii2K*P7^8cCuPchLm4QlU5-E72C%L.&GOF\3lqbKXsKeBF\&!F1Al<k<#j`R[K?d\75gYjZOF=W?Vr5cMiD=WJ(pel5fg8+:MV8upC]cP)M.Q'(1TU+n]:ARrs0AZKZ(%/=$Pgm4LW<c1tE=Tj#.;pIW(XD,7iVD`B,kp/E59BZ/Zu<2*GsmN/_uh)]:oG-dpcf/BM;h:,h!<._'VNWd`2Ba_])[N/8h&]dR9%Z:%F=!GsUjgQUAWS5_aQd-\6>'UcQR@,Ii0D^s';:3ak(Fd@DmC>;^!L(04oQ&r9gXd^G*o,;b9)KoCtPYfJ4"(ZKo5GMm.k`h64%On5Z\BQm$GZ5hS$Jde)iJrDQMVXei%HB_<8B,MI0=jnCQM)['3UuLg[gT5>k8-:!JCe#;7/j&qcY+TR;qHC5aoSkAdH$2LE;&B[m%r87Ojhl]q7._=s@`&FEW!-nR>K^62h3^t.Q'/-_^M5jh0pK4=`<^"T.p:T-Ih%p@7<f%RA<ntmA7tbPoV7^`1^/6lmiL]Ur&k#IE%6arR\jX\QdROtGk4H=1TUd%k`(j+37>j;O(Y7X^^XqJj?KnrUH_jJY2TO6FF0CIUqF=f7HICusOUhMmB0oXj>o$DpRF-4g7Y>(9X%eKHHqX"'s[:&;S6$)quH85eP[&Yh@)l-ac`]5cr@\3.`"OcE3Rc9]<DF/LgFJh%KQHBI-(e:H6r.En^uMK1G[L._PEkUI@GLR8@e%ZK2oZUh4(PDO9?uVofd(V\^(3#-:fCCo<a@$PgAq^WcT+UH['a/'=u8>tS7:3`o68@87b3,ig*s_(D":bK?/H(<A0X0[gR^Dj6\n%?nU,$1hPDQ3>!*g$J[%e\tG2'$X6IFQeP>mOXYu$($7P1Pq9Kr7u=cM2*<q9-kSFi=8g=4Dj>EZeWlK,dWG%?\5JF5><uu&gk;b"%?5,boQ8rO,#qq0J%3Q:li'fAbUHd2SrZa(RC8oc:^_mWqUjk0H,G&,K'RVB1)/6)TW:VOBHPg]M9@#FJ6\=A+<*f(AGan;aaZTQ>%SX2LRPLo!.@,j,i"3irZ(Nnm97"tG/&[Gb><$uo:M2b;1D<&!L3D\.Sh0ONsU@E`Fp[^eD$^4-)-`ZcbNDZ:=W$KA$*>nQBO"3R:%5JPJ?`Z"FLr?Z\QN!%*Dh(<"k<6#)/Vom9b#^`08jN+.Lr=#W];ei<Ao%<8c.b)B,6_,OR!8afSek#,.Y<_AnDuKB/ge'f^NbFUk%ml3"\ZsNQuoP"D?RKCsN<#SPR9,/d&5lI)Bbo0_b`O4gqHn:"'4B:)07KXsFXlku"5E%@:[X2AILa&:Ka6!n?,W6_R(u++cT_k\9%g.^'/O.PZ7-R3XJ4kD.Hc(s\]'XEZsg[]XCl>p?Wkh/j;Fk[A0POA''l!&N+)5]%ib303B,[3K"*MCQ]eW^5<mF4=ZZuR5HO."%&%c;UYCD>L7"c6JGdoQFae9E7Qi4A-nP1m.Vio![aqfjb;I$dBOIpSM)cmaK-s7%9U_nfS%BSdITeJ"-)4>]7d87<?/ah&"kaTk8IB%[2<\Oh"7356@6'dMq[C.8i.bf?662!&mg152\tAHhd4lbb;VNW$!JB)6u'jFRcJ\pCHn%LZjnL)r:.&o.Z+`@gUAeJkuk*[\$:Q.%OJb(Ta/&1s$/$qGB!H+o&*THo?V>h>64a@7;["A<-m$i5;-YN,Vj_47Cp$tV:Yr'/qA9DRn,9o[S$PQUJhKt`\YhWpG^-,YN.@(9%lGKd3Z<+\#Xu+,qSFjLC\td3o!itBG?)jX>n3fU4mW&ZWl?6anlg1MrSNH>%Ip!)n+9F/]*4RLJ(eMd!.!_F+>oD)39=5.A[V)ud%*_]ek\#V]TU.stqSPGV5Vm]K\RSR.:T[r]pkF:^C8$t1s1LPagX4L^*ZGI^djS8)_>mS)FEf$Q8q=@!0<2S2LMp5a1+0MF+/K;Np%*(lKdlN)sh/I3D4L,'QeWuhA5\?RDtP3b'Y^KL7*2+a00d=3mDTH3UUla1S:o&JC*l4Uu3H1lc_%d'es'UQIa-@%jjanOnX\RmMj%Ts&+EVjg?YkLK85$f8NPg0X<*s*;&d,-'q,g"DLdZEO(?HUSCf=50e%.GkQKCEgKf^\^o=QEKF42.eY$C9OPTHuqek)6XtMO(:Zi%q@5J+W/CFib<-t+.]oYf/Bt#_gVMd8,/9cqE)i=*.]NscX3Bs$WhL_&=.,a3g=sqlPJ4;NG>WYDB=+8)H:9WJpm!A0LN*YBe.pM(%n<!iL\tXLQVj)A!H<ln8:M3KWY#?BW49bDp9"2If93;^^ZpXf4Mik`X7(!`[CGpUI^5]A23!a:a^J4QBbcTeW[4:hPk-f!rZ(hcs%TuG"p4aR\cju3'Kqr4ld(EADm)G(K\CWm:5&-07`]r4Y./ROn"BXB@0^r"mPkYn$hoiNYRBl+N(4'hikAa;`q+`=?IrU\d>Da!0*%BpYVJ8IG^lp0$o<K%5$FHrEV?'9(6P?]FB#S?'*P>R#B'h9MJP?NX_XXngu9?faet2(pp`Zad6*r8YKrV4P3XVe^dGltnBN"(q!7%o,?QQs"`nEX%f'HlDS6Q;f(a<*1Bij8b9=b7-Io^@Anp9Nc`&n'<d&=4'.p&oTcs<<BLnY#uJ>d&n?bZ#YAK&^WV?hJ6Rp%*R2CZ%O/K7U[>i(mYAKY-6\iMnF>01V'Tr1J-[i0O:p4bBcB=5A:hqQ6pWV`ijZ:N7V=KsfD;X3BCk9//9<54*$a`oicQjFH(.]Hra2c%%%6<><.PC$Q;5Z;OL4Y8ckq[7KuV>!IDE":0:R0''lN+T1TJR0^OCK6%&cY\D;+ORV0U^6-HU&:f4`aE3WYf1Y2S?/iu0"E7&;c89^%R#&V!-'QHd)@35]@TgTNK.P/mPYHt*U[irkd3'*S/(8U+`9(fbp6B%%l>?B!WllS:$2H8V=3U:pl[)F';:Vd8/:QYth:F,eCI0s"%W@/I0Ws!@>GDe:A8W3Q2h(k&3f6Hq*OiKDQ8DRErlm+WRW-4(U^=boEC:?aoJc*%-DNVph5.K*[OiH!`&r71thMO2.?fufHaL&U:%+V>NK/tmjT4FF.!\<VQ^B.t(mF:d&hL[QUtXOD.Bo)sM^3pAgse5B!q:?rcM41c0rTdt2i7H-pocp!&dmR/$bMEo%rUusU?JsDDW%6'cuFqHi4g2,YXm9fh92s)M_WpUL"!!ku-%>l\Y@r@S.-U?^p[ACj"Mp$:;q4i]elR7bFfl)3f*/Sr2s:nm56/7H9KTQ554U0d2L%+(]b[@2621,fb*pmQ]l^A'6ZsQEG<5)u>VAQF)/J[;D-odBY;>b@[\a3R"F9D*>9X&O\P<<EVbUiZ:-.KoY9%gJ9%uSfQ"J#(1-[%\RUK!<EpCWXm0"hD*L+K6c.%-JiuS3h'c_R[`]FdSCr@?RIn0F2K20KCYR6Rb!UChHm6qJ@*A4`W='6+7``j9;V*6m2,>iITlNGd%f]?#_(8\%m;J.f>a54Hc.%@dZBM*lP-L%u-2+3A?n,H,!*kf4teA]Hn+b\%8mUNu?Jsm#Uje@C<k34'QhR?VcWM+qP^@\Z]6+n&U%iC]uI\(4?t3!;bV&!:(7mK,^f<q66*E\Cp]I6'Y?gSUfI21eF=`l>LUSlW:55q[cU`AW)4erNP($^FVR<"%E#8*k*DGAB)C9K9J\%oV'sVj+HuJA::0)KSYkAC!$RXfgNF'IZeMFR%BbcSMkjmf\CZ`9$J^$e@dt92ApU-4k:k2KHRrSM_;7e%),e,j[(H+,Ocf*@EBuo%&*j#eD:1@EQ.q@q;(+>sU9[E'FQ,VeH-%o-&^46VQ&kX-W&3.>h/'sRMlO)=AS42''@uZG*%K<@Cj"8HD<UPrW4XD41+<6T<7PaZ%H`2:FU2kC_Bf!)SU2lTs0$kKN9_h`K7j80^,3<FG.R6m:Ck.`QZF4o":fgXaHWM"5?l/BXkGh,8L?Uo$kU3<PVV7rJ+a[.A!LYG9%!@*_?#j*@J@]([g$&4\,J0o?8g7b$!10'&,^kPpgW_N^umoG3jSb-3CqnMt<s6q-0@K68cJ,f,TrND:^qg\Smg]-"mq1uofc+j9S%s7Dq5rpcW[ci<k1rZ_ZscbK:"s865RrpenF]:=?Lr\&d#bJ3taJ,YKns4@;@:]KN@rVZJXs7i4Xm`%3Vhu3$DlG#L]o-=kC86R7t%&+j%a;]rGf49OSm$&%kQlU+Sn1re7bM2/jT/8C+sf#fD!)LoMcS2`01e@J#W#KNrqT@0Z\k6OqLH;be@`YL&BQT/`=TgZoX5OtcC%>6HE\nu0,Is-p4`O5L!#^\[6U=T3\FGQmWOrpenFo=t4pci<p8p\_N#_nZ4YrhoE2r^XX:6jCjo*[rIJYQ&j[2N1E7XS#*/&TR8\%lG/Z'jP\Z]fTYgf&c4Fk>;eX>+7UQ?1UsmI_2nM9N9sX;5$EJrdcSk7E9RosKgGWH$sYf<6L<"P%.66rC%1kXW!/<!9WQM[,hgZ8%q2MXI36gXYDgEMmbP-Qcn'FR+8"Y)L'6p(a%r>dG`CpR/`5a^5#T4L;i87X-lb&=Xj$GBrYt5/.X7DA-m<jj!IigRV"YXE*njDXG%+8D-=F8UJj>uim73'k(+6@%aN2W`BcDaZAUr?T.L(e4TKpTubD@.Z+Y^Zfmjmp=%5:@'I_+-5kGli>VfI`[Jh>1bK20e6[[ROe[(%rET5HWWklY&,n/\#5"8Q+9(-i!7_&(`F(gKnm=WCJGrIHe'4p9^^B"E.0uRJq"*7is*i;+-snS90J*<R8mr.iSI/UpNV3j+,>]rm%>'u8d]ErU11$KB[3B[a)9_%;>V)i^-%h`t_Agp(U;oG4U\f]iVipXc#%.*+QN([)W7L&IFTs_L7U(Gbn;!C/e82?b6<rjO"agCPt%\r+u*;nqQsj=ajD*TJsEkOD[>Fc7]:V^?*4:"P/e?O"JV?lD9%13u$O%$Yclo.%rZTMK)]pJQ3Y9cPIYPj("%G6\p%@dK*>I7%Rc%dbj%f8s5o"Nj;-eb7)!Kc)M4(<[doLV4:hP"Pc9@q/,[]]oD[G-H5tfOAr2tDc57hh^H!pA87BFY`FX3Y'8>3*]ph;oXt^3.XBOm%q>QLQaZb^Qj1%5DEOti1g6(&bZ^TmYW(XtPGPeX3Mml7N^42_">1EC4&hS8+r&4:r?H+58q/0o.kTF>P0?Mr_W=GrlP^\u0/Er*i%6PkV1Z$]iOBF'MIr->fWj)><*Z.)aID.+L9*<%mpauVEF(4Z'cf0r9/8t^tW*`ldj/<*>j9\9Eod70>"jNs4<g4rfPR<Mi&.=Ftj%VRNhE>T/au;Nh.<\gSq?4<(=S238I$Luu:eE4)tgdGM">lk4lF'`Co^!fJ(2_d6qkPW$`qW(Z#*bmrM9/]/F2,=P.@6eloUZ5]@]%l8T:<54*mJ.nispG3lH3M/;APY7nYuP57$\r;X&TYiYTmBqN0VH[Z)M9Jd%/bYjsAVI@_[PW=gRjKr7er9crTE@pn^I.E5D3hb#J%`nQf/nr,>!1NY+m./btiLXV3(d`si@nogI!QHqWg1pJ%n3Vf0$`qVI:Lou#%5`l-+n]0[A^SP''MUEkdNJKa+ZAdYHNke=>['LHo%S-c,%eHI>^F[O`GefXMahE7_YHe_1*P`oUi:[,ru3HZdhnRT7/'m$c27pS-4!jAP5:'"s-b)5Xg2B([oni,r6h^7<$0#r%VJYGq9%Tl#Dm>K[&W@d,:#nd+N%TTka*gZd3.@k6Xk\1KgIi@e^C$)-`<oQ]P>M5h\)c36YY'AEkPT8QS$Y\clm'q2]aM%A&og?2mm47\5G%_.V*lWB,g!0Z9K-gsY59:i5W;qDZ*K^Q=+-#b:L3oPl29BjmLo"'PUg&_"Z#!UH3s-oUO=+EZ>L51&[%@`+R%h$#nPGGd6TOE_nY%>Y4SK0ok^2jKguCq&\6mT(@=?om(iZg.ZQ+XA9g"p`AQD\bJ;eRpO1&BfL9cX$'@H<hkM_$]&tf)oRb1MJbg98*Rce0.Kpp,*"ZP%_q_AGZ;T.@?W%MDI6oLg9Ed2SU\0rH]S_Gt$BEJOC!(U6Rn"1AB3,<D(2^Y1qK6sEZ>[^.#uLd4N)c"+\305d^Zk+[2@g>Y68iF"%c'hI>`-;EYbdsS".XR&<]V2*$7EZ%XLlm,Yils\m.j.<:XLhk[Kde\KW^qhHTSgo0U8C3PF<<[9E,&<Dfn^LVj,2N\Ae'/lp2e+4%T!Ei0/4l@Zp3Nn/;[5p%W8N-Mrhe<;D(a*HW&>3U<P&=DGU@ODS?N&UG\M7_F+(3A`Y_<lWkb>/XA(]PYK@%,fG8YV<rlFXh]jXY%mfhVdDhZfS!/t\`I450:fIGpV!$'`k-]4,l?uM=d"m":ghm?=1R>\t9W\d.6BdGEmT]O))#ITP[A]HKF;]VSjg\D3:&>;t$r]FU/%4>bnd$&IR_Q-`?SJj!+\jQo<&,8J80iQ+9\QcDnHV+W2l$rXHMQd"sO*l6i,hC.=e!Mi_s/cBob3)#<Ch>5mUmo^P(gJg9d\7$Yu%#**3K&17LP$DhjC+2N(^j<[V0mo>jt855BARTI0\MT9/P>W'P3:Z$/!gJIHnnT\&V]qnYIV"_AKl++rMSAJQOUJXnaOnj6tW%llp%kqkg1&+ce<h\eu*:jR[p/@nmdh3O,Dht/\<bf&cGYn[!#&:jQ9E=/XQRl\82N2WsRBrNXuFC:GUJ.#AmTg1!QPrFXtZ=:2cF9TB+%\TsD(rE<0ag)[_#?@gup$raQ*aj4Kn#Js9+'YI4^3La"FZ1$cG-<7IThWB:5/sX1G`[d^EreO#af.JpI?%ZufGc'D&JDAPlUq%mI%a.&Af%3EK6TGuTukT4RYk&!rofT>CP\-g^L(s=.2c]ai*N:1;$cNP?p]"$QkjuKO;fK-$J>l.KSGTa_GC,UgO?QGU#m/EI1VLR(S%pbj.J[6="RaKaoNL?CB-lh$2;1GE!OChIZ2T6&]Mpm=nTpDM6V)9n-eYJ.H'MVO<J_ATM:6hE:jdhtnbG+L?mBD<];<;<eCPC:nL%F[OuEI@]>d>%6i9W+"G[O,r_K&-VEDp,B+6YLE#\kq";__f"b#oAN;ihfoJ2CBl8A;"lAZ:Q'0_/3cb\?5o%&K$;a^L+.0b_gq#E%qtL=&>bN<2W[F3q6nOlH?27,jbq556!hY=k4JC2m+RHji<im6?9fENU=IO2l/T7[a^<Z_T`URe'NYW0s#B</MLN6B)fpd9RW[2d(%gA&WOG3"g'e[DCZ*4pD9:[(qjXG#CO]1%LGVQLpR_2R+*lH879D<n2BP$X5Y818^SR75)_1/IID:4>C!P0ZR5>b#J[hJQPL<H7M&%eG)6UJ(*0I2AJ`?^.>H2UpZfq$:t\;&ac@%d+m&eF,:(i39EYLOT^pM$H$Vl6AL(V#+Qk5gd@`e=d-e(ApqKC=S-NE_#i4#NCnVT%b$/%N5JGX2r;iKdh7KjW6a#-#6j1Zqgi%KVhkoBeGp=:YE#8EE*7(]f6OfU<L0b-Xh<<;X*/B8-bMme2S`;Cf5ZN5L*Mb-`d,&Au%6#M702oa9[(Z?@SRJZcY][:h4>h"$l\_54h"6LS5.!n(Ij*dq4:??)Xj4.`6<fb;WbOf_!+(+3j^f`0gK)=2mF-6m=(39CNqMj;G%fdpSYBS=e!fC9N?c8eJnE4iS]jD1ud:kFdm:Z>LfIO8&rEhaI*\e9rf?fa8$ngk9F[^,_Q/k_._<3AJ16V@o/+^J&dMCdT4ls"G/%\,"p'P^hF+mmVXg+CLMl8#QYcAJqB5?r;^%0M-g1qLd@_?5Da2V`,VO_`MWU(dO7</F_]P2'OGc9*Meuh<(tV)86bN_q`hiN,#qG%,"7?aUk1bcTtG8OntI0H[>%TlY:jH`Q@!FB8'5pFCA;r>pUlFVANGj34p5th&8.>!+:Hf5P34i>G8F.g7<#_-k"/&+fS/-TIN$&V%52Z((<o?QK)S.r0E=/N\D\d'%E!l*62b\<q)pT9]\gh2@)/GSI[lSJ_Ap5^\S(6I?Bn:&N6ht<a2nb2h46%JPc1!$r`"4$jj70Rd%R<tE4gB$FKNW^)1I%0H[/pcr7*mf#TN\]qO\%S(QGgMJ1O_2\UDKB+L,-;5/6BQN&$n7PjT.fX&&\om[*e!Hl>o%)U+Im:Q96`Dm%m5/3Y5,WkY]D+-%O,p>Y_n3]mrc?*.=tU^?#tag#VMg1%lGf7<"%C+L54(d'<u2;tEP1*iI=.11/$#;BiE9;,O&K$WSi_4+_Jf]Z%_j^L?dru1"_h4//T5%rJCcF#Y0i'_gDlp.Nl/-Q@V_?M=#i\`O&Y9J<rR_sZb>Fu688uaD;L%UDXD]gNbF6R-"b.WW7Qko1f]a<c%DE<VhP>r.%6+L,tAT0I+Z;JS-Ym_9%bECDT:eNdLjbPMu6]9s3$*1sd/1opR<%<ZB'^<s$Aq/;#pbErS%@'kT)qWiceAmBjAZk_J%*)iEt[-2cJh:Ud`87(J!4Mmu_c:95>(+SQ1],W8FqECBh]&!4qhSrUd0,,GoS%-%._BVjkPu%,;[\)I6e7an*1Lm<jC$+D)A)2#%%r%dr7?H&8A36@K.9>*!^N:<)Eas1q@EA2/g^lL\'9G24gE)Oqf2X!oZh2O]keQ+8baH'b%Bj05hg=UkE:rm=id3@HK8upuN#il6`%BV;M*<DZ?-SR?E.>1\!F;[]H^DCFXZc.oemhm?=1MbajY=SIhTBAM2:-q2i&PFiIi@9/"G0,$^"3#>?qq&*+DOUaB4.:>5<L@Xbt%Ume`fe-o9fG2_JM1]._QFU>,u\8H*9#H9dGT%Q=LA2p.lfMG#m*Q`U?;b!5u1V[X<I$onFB:dNp`NJCnG*^#JVYY7R2_fFdJZI/"%S[CEgJa66Z9*-TA^dTC&h%.SWI^'IeX<GaUE*"(=6FBN]Bb"^2/r<V0\"=qt.d4[K?.!M%P7N=S]QL`qH7[N!olKO[]o4TXEN.mL%icB91U9T8+NN^"-WV!=U!PkUIRV$-[Yf@jKZ9c>O!1I.e]:6[C7pO<=\'akk5-ZsugRa>+H.hmrFA:H^4KhF&ltG27Pt;Ec)Y`lr%hr]F;$i(0e3'ifTjIV>\dLB)W^dA<U2:;r%RREmZS3rD#5p#TCaYs\E\JF?Iq<3bJNO=%/Oj=DlP[iE"]QAg;83)hJ^KY]t@DVEQ%!E#FE%]^f8!Cpj7**o<$)5N:"VLQedM#@8LR#9nfQZfFL'6Sr,hV&ZC&^CUR<]j.prX>W[]rZ2W2J#jO$*m8T+6Tq??<XV%jX<#W%9k?Q.\9ep40:K!t#*g=4i(DIjEYMbQ)l2)JaTRf&-T!oJY!qgDQlWlarhe<;D)Ml:,Pu9tDA0lagj4)@H"oga?OUO>CYMpT;X"?o%DbgBu*E-HX5rTVK[p'lIe=o0_!$jQ02>c`rJ5fTF(cfc<?"8<8HXrse(;ktPg;+ND&_F%r`edu\h02T*'tqihVDn$^/e7?1em-SD%hPd)]fi>l5<o=#K7J'.W3CJqkM*C/_EFdEfT1#(qKHR/f`<ju`&535f(.G6n]e#gCSkkJaM"6>*Q3\)"ip\PI5M7LOTptKq\Z]A,%2:M(J;0Il#rGRn7l"th&(_8+QAo/+W>[r#QR5p,O#<c5,qLjWd23<c5mbRNrK2YlcV]U5*Z!MmjkfHP4A[(s[+1YL+;,q-_"#r6I%EhP-2G-\e)+[[JtZF`gS^)tm^B6J=NP1]2q%G9t:FnW;?)Zb'VP2'Ri(A&DT1/NPq1Vtur-h#^6OIWt[@8$J8HsYQ]%2mM$PEV=I%e7_)l.#B?B1n_Z/guXWmCdNd)26F;fFqR9?j=OrN0oR'N]=8N%ChQ@7T$i+`%1QBJP)A\^oP]$thmUNl8schs6r"Tsq&&"k$7$hR%aR3U*))rfE=lF)a$64nH7lf!*3"h5QP\):^6umUc/2Ja(O^eZVs(Vo-9O56gO75b%rn:(]s,/1n=6)orMk8$,06Thp0caT%Q%WMB%J(&T6D0$]R*nLX[qmB]E\--f"'Q$pr?&o$7(SMXZSb97jm:o>!Q`rZNX?"<LB6d%bZGF2BbG1)5[i4&h[^`j<2+dZrO5k$(o3!-p%g9*mtj"-8O(":0**nmdRAq/;#ppN=,RREq<Z[]+cX$Df6-dET7-ET\@MT$8J<1/#Z%"I+F/h#oXaPq$;4ag:/M]q011EZLmND.^k%cKQM.Kg!g>,3d;Y8Fu*@GbTa?F]f@YF/4?mH&(EI\,SAbS)22p=ZJXU<CndC4GbKugIr$S,mKc:!sD6XXQ)YX&87V9F<`/RTKqm!%-ms%CeXL%n(2OA2+N7C%MB#H8b>HH?S1%3j=j)aD.+!-kG&ef4#W,+76#$`,JP+qfFm_2*<So.a'q>!f_b<jkge(4P50T]uXuJaF%oNk&b\9C0^[]`T3biFSZ/O*,tY,@._0DXYfV`Dasau(Nt^jhVncdPjE@uGO28F:Z%j;L?bX/hbUVFUQK<60KWrB3e`I8(Xk.K;-J%=uDHJ@fGE9iK5'c5t3CK*_Fg5+:0@4o5kV3@=b#U.52,us(e[`8W:QC)qB'>!smkFl;I7mhPfQkm2;5tcb/6e[G8;i>s8JaCfJHq%i+;I<]o?sZnL01XF+oC+._.'k!rB8/-!*HD+o?>aFQ8<p-sc-p%N9O/U?]qYG`E-[<7MfInm$(=W]JqV*06.?jX3WQ3P*6%TIUUL%HL6Qs$0[IH^Zt(86]?D,Q`SY$LKVP!Xa:s5nN?K6hSclooj\d-b&4LNL<**bHs"qBh!o5SIUZ+6-<asTWQS5\()^R?4]u=.ELXJ8%WXk&9>]JoZiN2d$5)mSmQX<eD3AAT:X"&ISlhfk3WS_c+XDb`1+etH`;$I&iqW%0gc"/eWd8=V@?;PID`Yus3Tu<*'p7lZj+[Iub%';p/0@+`t(N@n:+C$I"@'G.3TDUS&cc#l(LTm]uD6;aks&era.HWG3_PaI'g\h1cm(iRQ]_tn6D2m&%RT\NS(%\nO:+V!dG<Q[4o%96`@`G=BC1""aRF^h-f_UCh]Hs0O20FX_u0UMrj!%@niAAQpI2Qlp<o+VcGb"n,=pjoh]h9.CN:.RO+B:b8t+ol1]\6-B2T]QEa7%)[1]R@825Hrhd0pAL@DtmO4IGSjeaZs*4J3PU%#2jcp\+F%DdQQ.<o8)P1ta0L/k=n,3&r7+nO>Thh)T7*;6P^ilEq&SH+4(hK`;%k92%u,n3`Sb)!<K%-N3=N1l[+O?3=h`%U5X25r]_Ba!Bp%]^QF!P_>-VRQ)4*raeoGKLOH0BEa[*oi/TrlDgQbn3qM4J]jN3\oq>%rh%rj;!eNf0Z'0S-JR01c2d-A6_#0b>L!973Biq]M-nQKs"&U"$<K5mKk6*!B@>-P2ZU:[_hha!%O=&i[LOUcJA.+p&i37T&U_n'%VUt?L*a\Ob.bm[t[1'rlCOeRj=m`STKh@0)I@LH13)aqPAD5B?%Mlt2r\u$Y7:iF=N-V.tRgS7F0i[uU9bU'[hS*[WJ/VD<f!e#-%(q2\d\%\88To/ACltE^KL)FKl>&o]$9I&E^02oXM'`SrC*Y3pkjJFF&TCY>=&FHB55h+hFOR*]05kZHnRVKOd6Ykcca_K:IpbLfZ%FCQso+A+>rBd(nk(%pqknL`7%A[2I$:4*FblL/qY?Z?$CG)igj5!B0Q;^>Z&Z[o$.I`A#/^Zg/oR>7+/*RCSe3!sYT4H>FCD.;u`%Kj<f&oQ:4k5K8#UB[u<Y$-.:.qm<aQCSO9hZ+C+p=t&X"'kuL0A^5B`4iT!(rRf]H]Tu:I+jiDY`b_,MD=ohs]H`S/:VV)PqB3A@%4ag&gD<gl^;tJ0X]L3j%4N`N5HXH5N_(cQa9uZ.OZ"8W(S?WoH6lO'WA&`c;*?m$AT-?da8$pAj$K5aH"_'"iJJnnlSb"a3d]^R<%9/!'_gEm.CJ1i\ph0kc)R`5'%p;U8):;JNIigk;`>Pa`c9s<S]b'6Ho:_!j#iJ71Easb5,qc)>Wj@asm-3f#cm*'QS\K]NGgSZ2B%i^WsCa&o(/4ab_f8GOiAPCKaQNJb/+2LZL@,D:RmJ8LPn2^FrU77X'h40@-PT<ripFaDKD3j>ANP<n[5SGYMhebh09kN>]Yl820O%i8Q/:&GHkd.2PJdWjr<cOGdTeCm]QV:TItX&cWUXqHP&]p'M.G>TI+C`6o@MBQZ-dB6J6-SsK]3Cg0-I_goRrU:i4@!#MAYX5tMi%?jF1*QhfOG4MK%[,8)(kPb/s<bo[2X]58e0':/NK6&lN8X*:B@SH[YjSg0ebA,L,^pAguoehVse$Vql\%Lsd#blcrHh8I)(fBY,#%C7qaE2qfq:0R-;7hsnT8;*4^Q8XIL,M-jH:="a$1BJKKHop]:,\%-bE'fjG=/;8`$aZ%Y<3Y4(>oKj1LkrBm5RIU9<AKk@fS;QKG%a*%4q.((1/P=>aJIkSEdJ-g(:EAOhAY?hDnY]U:M(]@Irk'M)ih96aq]P*>Kb96[[T2>"\q/,OY]o6l.nJu5*VCR5CGW)QVQXFVm%r%)r!=8<X)+JCcl1<k<>;g:g9g=S.d).N%oKV`kcWQ*d*,0U^`X]UoYaLVeI.)tP<+&WSr,K:d5g>_MOdhq%^fd(9>Rgj\t[XVIV%>;LSprCuIp\%-a@P($F[4,:Fs#l*-eatrW/%V.j_RWDDU/]r)k91K`hYS6O#Cm:hSD.@B4`1791m0NKdK8%1bq7NEb24#Oujr7a>%=^4CP':B.HD;e>pWU7iPG%MI8G]H$kJ;P[WklL<7q4$6\[k7+iFcW]>s/K.3,U=)$=HEM%E"&VV'LaM./9VccZ0#&hap>VP"N*O'%1HH_aPG0Oi\%:G@QY\%A`YOAZ*`\>[Y&+3Q-H!A\5NFQ-MHS+cmJKp%kt;#eSR!0`/W9-Z6+?]%r\s4FIjH1L>"7,CrfiJ1.?gaZ%r&)n!=iOCX"U](f0V4`ZkrA6=3_pLB-btmro@.`)iWQtsV$WETp1(k>lGAKrX425Z>p_"d?1#_e,8W#=k";X"6trOaL2s=uY&ABr%Bm"fmN+;=:=G,2cQ4.8^=LJ[lQ-c\,]ulDl@IFC)KRW:Re4,$K\@N^6B6EdWno83d%[#]Q78NXQ*$XihcbOuRjC?@s:P:k.kM(!,%,%USVpYc,*[d:5Ns(1Wm]SuAt2NFeX<Mib_-0hJ*I_MtF]b_u;n05`/Q#@lK7fp_ToSuOj.]ErC,*4=0/1kZ&e^p+8C?e0e%8ba@%R^s-Q%M$TZ9moM6,W?OiANRBpW#nJ$R+@l-'\,(k%"7eUVLQoe282f*Z!(X!&&[ZMmX\0!6[Xal^)5CseDtBa$lE,-Ujj9YcM;ad%.[cUS%5Ol`*89JfAecA2i63m`b'5NYK&@YEfQfec,ke6tT<CQ#R)=Wq,ua7q:+nRbX2Vga,TLc[fW9gFM6)eGVLR(kppN%$8+B]q%U%#-E8Ol8bKD.[ND($4>a2n"kUG/e%@0oHgqs,MF:fPL$?sK!RnQ(#Z'J57W)k[YQO*na#E>$m/oKL8qNfY&oecTE\ToFXHL1WM!%P0-BM?UmCt4u`>Go6&F,m;qt[]oI$[ER[,3c8WY-p8[0$n1ObY];lXO48/ZH_k3)`V]fn``6)>Mgcf;i[hA7OGbc?9^GVO)n?p5;%BTbKCEj;a%)'Jc).ck:!';VO.b0?3\?c#7n.cki`kEZC6:FWc;j&bGBm`X[0g8hq^aAZaTV;^\2IO-"jME%*)XWk17flSlsi9iTG%#?<M8-I-VF9/W(@!*4?2`/2O#!]a)k90Z,:PRsGE]4=817<$"#<+:tI1u&c$ANN$bT\I*9jf$HcEqR&7qD[;DJ(*-H$f1?n-fR`d%+J5g3HpLI.KlpA7j!_sbAmp+t=u:'8?<4&O8,72GDBOtu;6G45`=('j?<p^C/2!!(rju$2hrcC@h50f4P<>J[HJ_Lg3FV?WX;;u?%_hE74M]]:?Bm"fkP!>3eiRL*B7k#6$j_^McmU];1:+7"9j&!,(+/N5L_Ikr]CAEufq;/$6]/@#l,eu\<30h7$3l7jY4&Vof#)p\F%#s;4.@9(&49-kBTjU=O@VLR(lpbjR^r;uNn&\-G77&-q>#3/WFfab=kj8s0Hg.JFA\nsSN6sO]8N:C&ZWYD5_,5p4_._7pi>E3&U%e3f=J,KD7e/na@n8#_fD>loHVGsag8bLe?`m_K%0]bFu9a/*\R3Vf0$`g7S=;rIVc3gb,mZT@qUhJoZX/+7^g*EV+6eT%fUFhXr;%/+;E]-nfkdbMp%[%P/)+l\4GG>oh-Np<2`/hN?.L3+/>El/2+s^@%)TjnbDN?G"aQ#@<B;k(2Wjn\dPoJ*^4["8>IKl,j+3`m\]E%GVu(q4Rh(,Qj6rG=]\1t7.Ap5QjC-emHR:H5NdOB$gD"Gk0\T+Jq]/6JA6<"TT;1D4&=$2&n%$YGqoS6cZBp.3_tq-HDDmcoeaSl%LPWEc:Tf#5L%jAK6K*;L\"9Bnf!IWrGm`PVZCHt::VrsXYd8Um4Tu%p3`U[!r(V+igU%q1#i/2NIX4cjc^EPUIsi=>#Z&0.]DD6P%X<G6:HOoc'\pu]8^^pU<r$IL9rVu']OnI;WA]Y>cLnQ_!LEn&%SOku/[F9,GW;?BaX\''7Fo\<W,TIq'XpdSCgrBKkAcDE,]D_%b%H1V3-=RO.`3RXde/EsuQF$V9RhCc@L%Tg5ID0eu*\sZE)e[7K6HlN#/#%Fei.2nCA:mlkD4MfRF[MjDe4)G.A7p?1`.G-3;EU^<?%3mgJi56SD/05VaTC>j7%2_C&.q;]D89,YE%BB>Dc<[jeF3kHZQV.CBFRY.*BW_@,)\a&5=*nf18=^SJj-EK\kBcd5oBQU>VijH,m%ePOh9)J?IXf%`>Z6FN5$Cq3C3ZB9"G!m:1Fh[We!Inos>GO]NF%S)F'm@4d(j$+UBoF6D$%\A#pim%<[X4u!QF,Z0&=B#gh)-WNJ%)G'dIBGG<bNK-INr&cMedEXX=4-(V!KP^p:*nI<(PB`\a?@4<IH?pU9o>hQt.$X7uT82hU8m9!SrhaPt>OH`TP$(1FJbZE42e!c\%.S(-EPU:c>$-$F=.&7UK8P[9MdT2_Cj]o#T`)WBWKd16(<,`D1-X/&$8N@j-7n4_O51(JQVK#8<>%G\o&e%M!"k[>]q/D5>n-&Cd%Q?f#W$6l0sn)#IAe)L/69-3@37<7ln,58?>/c4X$j?Ba6>M_m`\W89KcKT6kpT_PV"L"05I?^7ph#&F<+.Gt^fBGlf*[R^:Z4^1*%\Q<n]mn[Gk'/XdfAF?5N-9IM<F,uKRV=17%s#L+K?H?JfPY9jFe?SPn-ne/UQS2ANlB;*WG0eWsEZ8CT5Q.QWDVAknUPO?hXEPps%/G.&RkdB_)?(anuAZ==/&L+/R4a@brUJ"q4-JLC@Qf]/LOZ%E0jF.o).%cR"ht/Q#Juj8CK@bFLL[%jF-+g.SMK&9F@oH3h"t*WB%[S'G^"t.m(34]X:i+*/*R#7h;HP.dZh]gQEKW+QC.FcWdl`&=hV!@B/SuUROQH#mN96V3L'D/]NFaBPU9s<S1GatnM'I3$p+:Bpc%G.\L_PkEHMckn/#Z?oE>gIH6Jp-#*$I"^kED+s9#EZN->Ni?/u0_C7t5%)E1qDjFUmHSE\.$hbL@3L=PnM)[(-S!VOaoOZD2l*Aq%iXjtpa7ShG+738a[fjU.bZ7j0669Iq,BQf/DnrJ3R$FJ8iR2>DAqaYeN9p_kKg$4_)]]@`VJ?i[-65,Jn:ZkgEauipRUCX:cf^94%[MEbA\C1eJ#K@l3(L5/We/CHL%$LZYrXuSuj3j[V=]Il7f9tOg-GIaDiufJB&pcU<>_bf*2R7.@W<Nab8O02'6Sq#?P%JSq9gH(-%knjC`*O]m==gk0']=-*eX%cf;g1Qk-Z?>eZ;6&W\;3_4UR<<C@7M-3]\^4VBg5O(.C5HMf90ISf8R/j9q;:g2^31M-c:enVEC;hH%=N@Qf<p$,4E=cueY_.iqpPAZi&pCL5Xm=mCf;1-/!`R-*g0kn-qfjm+HW1*6%-7#&E.gps$XEj8::`=o)nWS@Uni3rM411]WuUo(%$WFQ^PJq?mjT$nRFNXEHqb8a(gLQgt0>e%RAH5j,n0nY$+M;$<!98L*j7Q<V:Ve9p7RXh`NX'u:+aTX]JKM#9o1^,MTF[ir6Y@(M%L)<2,QAHVIL&a8i"DOpp[QdmpQIMgB!73`>F]0:`a=6:`lM'@gmH[_69PhcFYg)80Z_l=4%i]j&dc09T]#fSKOjkAC@QXS?T[k[#%NGWO#89_m_h8Qg"r#["m48+(n]1Ht"&">2A/aCC<I+[ONe/A^rNoI@%W&;i#HA\/tdo]r-j6*nnht/i+!apFpCE8\e8&(]AFJ#8=%V,;kDBc;lrl>IYbS`=Uer^M(rGJOK#[nCp<of#'V.bNX_><1Lkg#"4.a[SGl%;/'jTP[L'NQZl4],aP<GGZ>NkI9^5Zql+>M^(J,%qW8h2iOX345sue+lVk5kK/2LQXRBY"g.[:Z#AJo<V$f$g)c4/3l=6?'*FaD4(j_gpY8m*&fNsGoY7].[=::e7KZDRDG`Ifj<_$H9%>dH#aUrmf>F7qOEO0:A0aJ?9`#qPAs&'h;=;MkY\ML7sk/bZfbg%6:m68fZqH-)o=?s)Xr79Noh7ntt59ICE-d]&'fA^f%7)(1h1%LDe-YjO/1?bq[iGnL,WL``t83'9j*UM*Z?>J,_8!S)2.l^oR38O135U/Q=_HG=cF@1Wc)$lt)->M6H(teJNHGT[OugjL:3/S;iKm%k8:X(4j-fk[7Rr%lJ9L"*X<Q/\!Ae@g#pfHAe]:.<5"hN,ldd#qj[;ZDfbFh4r2=t[UgItkRk3G#Zu!nR0MO`5-9@C'u3C-P-l.l%<aD#ge1"!7!@sYf*K*7d@;TrfP!TeTN0D92Hm&O]Y<[4mY"]3[XWTAas!k1BZV&bhU.Z?Tja-0WeNi4'[b072$^%6Z>A=QW5,WnV%ql&E;\<3oSQJ/haLU]rXA`RfqU+e@n.p!%2On$On@UWfYgJjUL,PC%G'c0@9P;\''8goX_(U=\>,-POR.#bP*9ElY=X$!^SqO-O3%l!eC5F2-s>I%?3$9\c%)N=#Nnp?cJ/Dqh,rOa8*bSY&!B6;)*B>cN#s`%N&5VQIeG:oc)Pcbg&E>-]>7g['[Xefj(jl;&_aMsu+m%;C4;gG"V>$9%iKO?H:WXkg'1n\(TY[E7Af)nZ^1W'!Hisp`CliC#brj/86U&:5iQd9:AQ#$QBt6-!C6UBfh;]J]`RfF!t!AN<(L:%\bHHho,hDH%[hg^?W?'<aR[DdaLilIX"b9k)kZg3-7d(T>;67ll.RnKJp`5Qaaa=Oq3t^1\#D?PD1<rdd-;4_bu%cPkQ#/].qHH(%W&8^"lkZC66DA3YQHCB86IK$O$=d!?@G>U8KS4CD#g-=,TIK`pI$fKDD$E$aSsa,7dj-%djCV40#Rb&JJo*K+*u!OA^D0r&d-ne=%C$69o\8J;'f?)pW;17bKer`Z,EK&2qHu^[4QNkrfa-=,**^VC[P/6J"9PLh%TQIg`TkXVXF/VgL_('7n8V.Gn1?)((N%XE3[:G@$%Ce?Y-q!hR]);n[ZQGXd^7HGS[h\(?#($W6dp\QZ03`l-UN2%<#_$'RFqDU!dD`d!12!E%&-I_Dc[=i;(G/`eO%]n,6qj*bm82sug%Z[6['Bje":[Y8cn?j\Spans+LKC+'JFN/kgT]ldR'qksWFm49BJ)=Hc_QBGl$93rHTCS6qY-9q'I&6c=2YihCa1'asj0<_<B[Em<%7i=6PR6!02B$u>tE0M8V'6#1]Y)[:hG,c-FA,Ssr['6^@-cK%0I[YT"Q+jsm[^otJN2N)o923VI!6e?qFfB[&n[/f4f/R?b(f+:'%P74*4^9:RSBK3#L<H#4YBlSNiNPgr(R\>eh,\l5sJrMTtCHW)7[NQj.K<N^4MeWl]O%(gXqUKtG,6r2Li?6'>/fZm5K>b0-8E5/-%]uAVP<bIL=8)_cqiB@5f_9[m&"R;,Vj;8l+V\9J/Nm((+#X$4jU[ZF^n1B&`rhd[)D)Ml\GGfASg?2-:pL9]$8N$>EQ;oZ`.ST#M%'Q0gUfquhi\?EeDV(+M%V3EY:/5Z=t_Ymn(jn*YZ6SB)4]+.=4OLU?ug6K]7,jq4Pk0rf\')+ps1V,;2iZ9Oc!RTeHr\qNPDtEM_%i.9+0ipmb!,T)VI28'26Znr.iq^WO;$(\YTC4B"g\6</NgrWG"Pr?WZmTq5OVUge"g4^K&R5^J`G>isbMG7?fh12$G"i5=*X6^lm%7,dN(_/,GO;$Zu8o(TeVnng9[6OcnVU#,Rb]+#3,5`oUbB1!-8P&h7*XbfR&!d\u4e=_mBNTe*)-1*O`>Q'@ZjTn79%<T$3F-L14%&P_bh+1IdFXt<([+LKSt_04N"i%bt&nQb<"">^W%Q?1ft\@kW9Sti'.XlfoIjr^qnnh^7Yr<':fV@M&:9?/5)1[q$&&RHpJlQk;3%*-"/MdXhE<LI8QkPURA"X,cA9N56mKq+aU1eYS`.E(m,?os#+ZQ]UQ(oYG8.BAMPS-<fS[9`1b(nSKa^4%hcYHDgH'fukp=EnTLY%I&8?Zm?O6l!:=o+l>f(G3fifSA7mu']@k;sb3ihV&hT/J6ol6+2EZ,&YoUj9X@C8U!#9^^9n@6JU>Ba#CZY0Jj'T,eLcc_uFB"'?%=)JP6jj/e@Zp/u.L<"HE)`&,qNeV`l2>T.$&(PdO1mTi&e-f\Z6O6pVpcTEN1sYP+2%;'g^mS@P%?Ub)H$:fR!:iOg&:DtUBl**h%:c8_.N?tinOUeH%"e@8t?lIem*+-94n,6b]2nb,fHfC)>/(<1#UTBb7<*P.)$WM2'[u[_S^lYLoQYf\@/G^K$F6P-Hq6<q;(c_m4%0Zt(!dE(?UQ&O$&MmA'c[/^!mL%c[K=kdT\_g\[(EWr1Z17f%sP9ioLa`(44qf=&PDFT[P9Ccrf2sjFkak.#7B+MELUDP"g!E^Pb%\B#2mdPU/Beq00jZ,BbR7ud1hgb*#DI&nNULDH::YAHpB'8lN=f(rWQ>6M/]r"d4df`GlDCHIu-frYm_))RO?`bHZ&MC%!Z5%UY(%$tZp)bJ,AOl>ue\]oR)qE*ue;<bnnZLSNhG&[["rF>0d37V__\)AItO)Lfp%M.;hf\!f/bg3!p?*A&]1&\gtfEc>EYdC\)5JrQo=%d(<#A>%'DqnD0skZ/jAo#CMk+Kc,C_'?iqr`k.)oqOIFW0B:e$4DFp\M+B`2.],J2=WT+(4MoI_&9dp(0i]<1BiQ7K:4]28_'[V4%LIcthg>^sJ<`n?0m4-AA^/$$(kQ&q]^(&UF.[;/%+Qtclinga955-:]&X]0C<5s^5^1nb=iJ<)q\!c,qBRH;!LSH-g?'HQX[(,fY%"JntU8.E*I>Uj`LL(A/k//6]5IADEdEG\X6H7Dd)aP7GTORZ>G5ifh"#&M!J-c[W2h-6nLG?XE\S"b@0g_*&5A".7<eWdB)dl*Js%.kd/^R>nFql.V`Z]mZCL9hXO$o_Tahd>m&g.rl2j1#=k[UP%30NM@o#+_!7I`npY$MMToDHH%-]j<-@Up5fX(I7A%m:u5i%)6o%@%77(kX+?#q@K'N,bfYjCX;`>4j'u_.bmhr6bp3=c<ZJO_mccaDeB&=%EXbqr2Yf.S?maW$;PXH:+=Nk#\r$p\oV%doS2f1,uO.!!2%CLh;;X^jq9ZYF<aHt9e$eH@UqUA#66dI8C+/7SY,;Sr,2@WQU[WU?ZO/*/>\\QkG&-`'PFR54HC5,WnZqtN)LB#lQ@)VBk[AK-fA%J'Ks:5X/m#D]/2t6=gA7SSfu/fk9IUbVricGa*.!0k^ZgEq0[]gL'c2Fc'ZMYPEo0G[BqMPn1$Fj*C4i*$+ijq6hu&1%>rMVLL^7%ee6VFn`u35h]tWKG5SKIJ#6FATJDP:BOEum#ql\:OFV7E[*I](]$EkA/ko2Ba)OG+6=8=d-dlSc8g9n&<^Q@(FJ+u9-fmq2/XN=P%<GAZY!]=r8<GHPm1V[X4r"WUcp=EV\:]KJ9CIg]Pe(oZl&T[hZZ0\0;XO!ciF^I%JJaZ^lLRJt1KGq$Z?Yc,tX,HQa+*Ot7"VOV*%JP`o'qWkG7V[Moc(h4pCg95#S/+Mu(BU,'m9^'cAWG[thhWB:9bP8Lb*^4T--:^bW[aDQ@KklQ;*gtb;M?BS(RSKj).#uO.#a:F-%UpQq=05*:!O4)`sk!6W\r$;4qf#PGE8.uR#(oIfZ:#`T"?7"B)BG/q&ii-N82&p5WR8P8Fl>]$:oZ(("8);58DgE5WVVuNHU.@Xr%EA`D!:0SJoUE.aHA[RN#28IHt^VO#aK:uWnEP^[%4VV3VBP'Y+cqi\RfK^FL!/?P.9oHd`!#CAIN[`*Yj%q'\4%92=N7e?3j\rsU%_g^9(XXVA=]_QHF:T5`3H_(+0YN'D+qXi1^!&6\a.L74(iS95U!`bL10OJ5@#lTPr.hU;2c+=rH+fKrf,$O>\ZcZ$WoVA$%'he(u%[`;DBANtjn9hc%f6+9<C2lXgH8Do'gcAC[m4E[&S'i5N>$HC@-Ji,$GIE_YeQgnW&*cA%cecEj?6FofBZ%E7.(uH`V^uZ=+YLk?`%/3dXG6Tt[Q?TOZF,U70:mgR7nE-^8j)WOkPFtASUF4,1elLs#66CP2sNMcapo%K\C=(RJf0ikrZf$_k45N8s8S??brMifj(mcJn`%amIjTDgEL4PJfhSguX,E%o/q:>klf+Z;u,rC'THP/fgZQRW_Xg7XEpn,l;a7)f8Flba"1,0t-s]g$$bo'nlWifs(55T#7CaW>#K#%=4]@Qdr$J:6r\:IGH8$QWm27Mr,)El]o[/RnUP-Y/$%fj.1k'eS'BR#+X&jJLj[^mJ&IE]*@W3`)_U/]_[n51;EX>l])N(H`Q3fV%-]Pn[RHfJ,6!oDk)?M4)BJ@IKT_HDM?W27MK[)/q]"i]fB$_#]1&AZ>MQ`4#F"!8`@FI/tO.Z$YkCo^MoC44R:ap1T#I(AjaJ(Ft%5W%)$_p3)/ro3bUV;0^t\FRClBd-3RBLd`F>X*C:4?fKEdOik<%r%YL=W8)P^G[^@=)Y&$V(+*6K+9Z,$MHcn7JaJEVk2W,2c\+8%jXl)NgYD6hs3eBupi1Kf'EG.'cd(*qj/mEgq+:^s.M)^Kps[r#Ip^qr#Jf&>$;$<qdRRDDU]+5Fs&*)3eCPS,K*V2SF)1.8^d6?=%4jpkm-%SQY,3D=L%LQ/;nq#?-h0KHc0NqPGYS&i/o&4+oIEqkiea[K?*ggP1:9hp&%ok_5:No0Xd#*?/Pq@uk<Cjq9O9P<=6>>g0%dip6a=c,V*9T'c@PY:u)9ic)'R[IYRRpd@$omh)E.a?I;OQM4^:NPi2q!YI!3g:G@ZcWDUjg7F[(?&iiIW4#iR-rT%ht07Lc,tlQ%(&n>iD,5D=WU\YuK*@G2`NW'-<\qq>IMN?mA:3.9mKpm[%-sKm]J#"^_XZWpU@\+h`5mjBh%P\?Q+]K)aGX>p:qX@ag=?-WqjUp4%f,eRUVB!d(JQAE.<Du(.CJ9)>Z$d5-6[5jei&R+DhG;5"[a+H28LUs^H?h'&0n_-R=t5iYW6`htR8:`G`1'VG97VP3%-Sk9Nb)r>%*85RZF)Xh3nhLIP\2LnOp,;f;?H6DDbr:aVBG%_YT#+doJhc-HR>]i_\O0+(T#XrfYYK;MkFCoHG8oYuU-m5n-B`E]p<b$*>9WK&%&rmIt\l=Ys^RP%',[E/9f.HAngsYTS1r@T95f,I&D/RJ+3AJ-/TZ'.1:&_$!nSMl%&Y\L>>l406j7'!A-Z<E9"@gU!%Mt*l"7d!_%oZ(Z'^`ma_OHe0sS/n8PiS&)9#J:_*l/dd;B1FHBm:bi2ip:V<cs$$dP.JGiUE7QDS/jGiLiF=SbToS<!e`B5%=XfG:%.-.(AZlY%-!]s+:D=<4AV#bORi5\NK8]0BHbX":-0OHnho6UnGT(K!8dDXN#A(uR!ERdt>JGW#=7,Rh3c35>$S4h:oVp%VPU$jgc/KSbfCgsF%IJGemRf_E\P*[iWAFuht?I-u\W]KP"(NMo\lTM:,O2cD]<Ea_Q!'12!3g;Xf]5VW!*1TX,p=mIIN]KTf?kDN6Q![0*b,T)0#GEl/%"*gWAU0HqD[K%Aj`>+Y:<>[:O#"c$kSbR'q2m&%B`S1eXPE!u$H6&42lp),gAOiD][L^m1NAT*b;tbJYKUNY=-q..OFf^,ICkBqE%C5/j*T<7Com,GK80tW+l:#8h;m[lTsCMc;Bf7%j(7baM9>o&L]TcXR.[L<1bSc:8pA:L)5UYV:/IFn7i%SOA,k4OkGj.\[F!U7dY%c1X18m6EoZ3OT=sajZ]CTKHY20[:*Fs#@rdEPurC0WOP:e5aIc:,?`oHYf@T#sDekdn+pl;7G0:=DIakZkj$AanknDq;8JbmCrX!%DcW*,VaOF_*Hbh60MIE[WnKq>9mb%r]UPoS^@k2;.JC9O6b@I'(O9j>jN:u,`&RGa.9p14GSK%)*99fGE(6DKOfRD?ULkOb1CiU>%qiBOZX/9F`ruPIt2W[&>ZbL-iI%-;>h=Rh\Et>%<lYY^bDf1Jh=_S3cqO(^1RV$[_?7`<qWFm;/71W])+#(Kh2Ihmk"noBrGb")i%;L(+:g<Rg(f>T^?_^d.%Vfskmm_7eZLd;2ukQ[4?r]0k&hT!&#33c=R@<f'&Up*^K&V"9ET@g*^li=J>:Y;TeJs6-J)s)aJCe<4b%*#7)2omMCd@P$VBE)_"$P9h![K:EY:raU'"El(\Fb*Rh#_oJijR7GFRCCIV&he%Aa54pd<4hqm?m<_gaqU7GgqG^o]W?`&r^</H*%&$WX_LZ>ZNG"L"7^1VIi=KG$381fRpa:4!+V"\*jM,L*g7m(bg&i"CR\RPYtGN=6o:-[]_&rt!]%c%fWVR,nu+,d>u>/TIZAq/.\%pbj(HE+W!]TDKr4#mQN'D"aigN/O0.bhJUc#XR,;SEe1*G)l&`.1S<J-$(3hP;N!S%e]ShBWrWe!3?Yc5!U/3$D>:GoIo>?Rnq=O%4"N]N8.UP*ORYojfI@#P6H2OjUpoUGo/ck;UV,.9TP-Md3?$'Fd=s7/Xleb6@#q.oZ]LFZ*6*4M)7?Ib3RMRu(//lKP`Mp"XOufA%,0Js2["A^;;hB_&=GO,-#>(?O#Ouq(N'51,[:>:$k`ecBFZSn`kE0.GBk>"Rs.6@XgLNEM2`%L_Yig9PZ),aKPbSk9(l([IWkWEU%AUK*;0];brc]+qo6g0)?Msn#76VCs)gRmT[N7Lp-+&],#OE&mO1WZKRrMYtaUIS?HqQYGS29Bhf-B')hGIjL*`bV(3rb_)tXGjnZ%(iLoB@T4=E"hq)jVnTQsS%Vq%MD'<72%D+9dYLJPSIeZ]>#T/+69fmk&ZUm4.!:LA\HI+PD*?:c(Us0qaC$G(jVJQO+sIsU?'SPd%hKSBWi>:,b!M2aB@8+$g+tM2[n^kn?ZS)5D.\>t2qk!0]Fu[<077k0dD%i*_gMl9,L)niV=7SumYC_/_P.G`ZUCpngEAAZ7'Na/g%^8R9)e@!PPg"&8=r2"osR[dNXqdSY(c2r1AZ7=tg7_*LbO/8U-q)8+S<lXtSXZcfpVP>cAZV.!bD?J]aIW:<dn&[h\#lp<#ObCSU%1fUZ13jCnhKNB/0%>'1`#0aM5[Of^*6W3BQVm@92po0OYJSh7IQKUJmZ!jlS-,^AfFGd\?I#'&uQoN(d:9BK$g#)BZ^.lK]>U<\7%+,AkZgR+l-Fr[0o?of,B!/5Dni6IZ\IJFES(D6(/2R"q<%PjPUXPQ@Y-c@+ONH%6SJt(-Z9,).NPR/']U:HC_,D4"XE3>>Kb6X>*%d@;KB#;AhpE1=/QhWB:5]D)c)nOF(b%'<!kifD,AM\9\HD2E?CLnBN3WL[9lrpbYc4e6R0UPMT(=eZ6hO!<TDKSNnCF]K8>/81Vu%rLD[Zg'+n^5WY7\50?(0.Za)?.GB#]Y1-YIn#j7';6nujRUdLh:B-p;nTA2$.!.fqB3ppb66Oa8>+GA(8H307&Zs9Sc?)2XbC49H%_#I%kFbZ`V[cs4)23gUTalCUe.?16oMV.!'j/N)GU5dm:eh^b@N&GR!Wi<'DdeW<toTAD*HT)T<?fum]&\c!(_P<u:XQKlJi"OdU%`BGHS@_R8!A#:E/m4Kl1`Aj]qkLfJ2om>`3*9#m:<1uq=ZN"FG'QkD*,.9YUd'U*]SE]YraoQSnh)m5qc]@O`4MJH"$b**b29W2]%FlrELMQbdn9.l<^a&@EGR['$NP7R$4!M4t?+N!bKFeGqn*N#041fR;u2LDh\5iXohHZiJdoI]P\ge_[9Eg9QAl61''XtB/+Cf?';%F`e`(He;E]YmeZqqSNr6C!&!l`c(FuUOemDQ%,;&4mV)\8Z6Pt1LY.l,b]+hVb&0?8>pHL2LF]Rngr?4d)EXKIO9b_T5,g](fENW%Z(iBIp$&>i8bpNeB:cth/j_X50r3/F;aD*9lBWMEBtmg[SJLY'/;@,6fl]rRrGDQ./<?tT`e0sgXD(l4EI?Ypf&JH0^,-+n<%>6r%V[UESpAc/'k*,0*Uu+gQUZqP=91umte"\c__J.1%rR2u/P7C_IYgL'T(HKeeKpP[+3YNb_V;&;YXX_0`b`$bHL:7Vm)[JK9NP3U9%T""6,&rp^4=_=/#6i@C#C_Gd81@[`>XpsE$ZRL13aecSXX'-@j3fA^aKcVkHFVYalgoX\]'<u`39BIagD'A^UgB:Li@oKiZI[X38%,39,('ue=8l*p@bXM"10bKk+U^ZT`eR>2"\@dJOX;=%p)-3Zsp!NM,/%`Zk;-8'Uq8<u1hc?u-W(-pSe7lV;g,E:7(U,N3/ArIJi%+iW*U(1KB:iiRQLg+,`>O*j_OkRuH\]T*I_!GsIPk@',t8XKS/<SZ$_^"Zj51Aei1rg'<hIdL__Jh'4DZKPh(oKNsh]+Ob4rs`tn%W.5]V^R6hD(BqJ0i)(s&;SW[O?7'aX.,_p>/DJN]*H>La!;Fjt;ZdOE^gS1]dc]36T&u?8If2Ca)m'(k6ijAhU41VlqjdU:94NF=%L-ITZ&-<Ls+*n3B4J(g)&j&O8+;c#obGT$"jApm]k1*h]o[<g%Z'p9*G'&Wt*K"q5%O$B>@unh*C%#XYbD,T$[Ri0u@q=r-`DRKf%7Z3#X&UL%p^V59p`:tt[oq9TV/ElH8c2F5XnRWW!#CP_`_u<dn>cL.+^i_>saG,Ob2@g9T(bpW%P"hRh`4K/%Nt5/"':')<hOk`-%@uFWb)!gT$i?@ZikbeNCfHT^]<<,"9\_mW'QPtRVH)S+of35&/;5;#B&GaD31<0OSoQ0a#lr%1;iN:&\SeZOpD3su6?Sir-ZR`bb%&t.0eOFro4QSetR_7t0-nMn\OgpJ&L_2];!7rGoH@3;\W-;ca'c2E^^Z4siH(B[_KC\j_N&jlu8Jet-uIV8<7a9aGXL?:rh!EK>U%^J+Tt=7L,;*oKsH4+n8:E0)a>/R8s_1=B!T#56V;*%N\cd51%pH%^VY2hE:3jOh-o+:*f24JTEpAp"iuMpkGn=cImb3](,%gZ"i,%!tfe5USTZ5.k4Cf>>7-iPmG@EhU:a5l7F:EHqs^5D<f;<*8sT:Q8=no7#LM3/TUo%+2fB+`nhEp&1r%$UQBG*4qW`>m7T4,$G6T)%%&EG#;C`(uY9G:fTiJ0U5PX946TLt15b65WY;Yd:?A(MYFp.t@8tXqE=I!bQPs0\cr&l^ngH6H:FAk<k2,:o)bH"rQoZ/l)o'47W%.nd4K1Rb$Rr<peaMP316Z9?P%a#iVeDXY`:j#E(k0>N()(Icsq$`NKG)h+GRBh^6KacpI3qr/G*6P;9`83AGCJ,NDSFnG<VAC")-%25+C`..iYP<LK-8Qg!kT.PJ0K&<"8S[U>A)i0nXU<XDg;A]Ci2;/qkj9pQCVD(DVQL"o;J\444C<k7JK5)\s5-IY3'E\')c!AB?b%+otQVeef(9J9bk^Q;a*q=n*1-B"\2E+lT+1IF[Ob&Y$%]RIsZn(kBt38J,Db#Qbjt?%Aj2Ha#1:8cYbS@;>u]_]C4fMNrF3P-Nej%cGmF.T(B![Z*fu=4^hD_DH']2_T&PsAgnMLi2GION=gme>uRX499@re<f:_9Thb4u3Ds_#EU3s4?Fcq<)K^I*n27IcCL_L?A%=P`%6^.hX\Ar;^D1,"hIFY(I;PF;K?h+)n:C6k@)@oQQ2,U*Od1H+6fheHIX1?n*Ai999_$Q'.KJ[LQ":`e@^^0")df(a6!CIc_d8mLh%)Q$r\@]5rS%>o^&%:,1o"NA_[ru2XSQ2W]fL+Q*:L;_Fm%3#o^K,X%*guK!?:k_%`E3BDQaMf3O-^uXmgn8^"[#Ht8:@No`1h>so%=D_/9/\SIuEeHpeiQ9Tb1-udnPlt5[=/7QX;0W.(AK-"/S+UfXCU0UmeQRuPaVVhaS1;fdA.+n_JIuO22)k2\n3pGoItO:Wk:G8Y%8T8WWgf_gFF3;!\HF]eOUhG:Rj=oNj(5G]'4pAXVZ-Ok^22M+DpXN9!iFs-%3XZ.`PP0N?BrK7)-u-*jfB,I4IaGJ1D',u>0HNla%[]Yo'1m%:fo?(lafO0!)ep953-IY3'E\*3'"!;%'&=+C#MV/2sK\KBonQA5_&3M)>rMB0LAhXOZg0]^V*.!Cf=2p8>e0i3@9J^k,%Zoj'a/a@ck]pNS5K6!u8^Q_2:!Ai0'qdhUI=<N%"NL8WXCofIk%b*?@iW2pAWDd8bNQL5l,Gpcqi#ZLO(_\5g+VT">d_$#p5e!f7%?<+@:"1bHpBMb-@YL.2R3ubK;;)&56$#Jo0IB9@b$/nE99g,Z],ARNt[DFP@)##ph0::r%=Ae0^R8lo+X=T;B"Y%r0Kl#[e9ho1l%D\0QTM[@nfP<[8p/@E<&B.8E(CITDClVO]IJeN3;:7rpWfF-/![LV'=T]">r=#f+mb)@Z,`KCi\OW2$cH%q2RL+W'p9Dfo]Ko$:Q%JO_;k3Re$E/8tr6A%I\0i_?F!:nTV+5m.t5+]'"L+_5AZ'.UF<Ii'WBe,kE-m0o`t.Ao5P8@/m^g5"h!f@=4Sd6?>i8lV=R,j3]T%0gq#p+T`aMI#q\SUOC89^!./)g?juH`d?:LI+H_lN[Y;>eN4a;Y:[cjlB),C?G<Fk6/'Em2?j?^0LW30qnoMT65(=RF_mmRi>J7h%79qW9C,tNH;5YY#'HD;XH6qd8jaaEbE!>6XE>p.7bJ@6N%@],YS`1;5A%?Z3Rh44r&YVc=''b]kB2$2A:.W#hI%?HfHa6OW.Z@*$%P#s/jnKq1.@c`Q45E)+9$JHh5A2$?8%T=0)JHoZJ6<ra,)')@ORgU7VYU`rH6I.K[2/_dG6AI9`;.q"m1r#:d;\(omqP4O"%m#Xu%bkc,sF:8UE:P4K/*QBt49QqP"[(tGaki[D^PuqdNUSl=Ua)1-?lJ.%pJk5)X(hWs>*G4SVG@&UE66k<s)nHFR"A,GnkUtpDo\;1Q%U1]<FKac;U^g5#YLht&g0'joiFkA>-,tt&Q3RPac9,P2IE9;[j&5[hoG0+>R2tt4GW28'hZ$NL:"40Ph5(ZmO2KH$5lr]*!f>qX@%QmbCiBug"c](U2fLdRF&=O(*eUXgk3McmoqA7cdZTMHTnC;P:CI$`#m07$RELm;Ep<l`g#(1M+KO!MBr>fVd`+?r?55lls^b@[W$%OQGt)m;ER3'P`A7`A)LE8ioe,+]M,B\lo:S1l:QY_&T.DaYa.fn=3o?#BkWjTPO%E<!U=(b7be!!_YRs@O<&5*?"uP7)0U9I+F#d%AW27?O=OL/:6^Q#E"#[0W,"e<):!.FZ-18U&$m0I9lS`j2DK$JLZIOZFa&u!LU[qQU\E00L'-&52oKbD+M+BMAEm$'/m;#kdDt#i%A?LmF,p`Iu`[kHZ\K>U;k[E<&L)M"`BA>3`@*]`28[a3bC\Gm5:ntbWDoFIqX*$le(N`)Oc'_ilPK=p-eF6*?n;N5egSG*N5AE;*%B>XM&&5UXe&(&afh8RH#HI5fhg=A)RbS`[j(_RMhLBVLr88[2qF.N4!TJ%>+C+iY)m,@`==aLXK(iijs6Br):lm#>]";#Kdmo/QR%AJj^U>K;j6NX/_i7H%XqAFbLYN26_<3e9+<N4(VdKlO4NGNA?t%>NJHBrXZ437,2M-.mr`VDSqPaY_&pj-[O\%]bQ&<!peendZOZ%Mo/X(c++!Q@j>jd&:tJ6['U.dLiE`20hVMmH3#kBGBq)$^jpiXJL6j+LF"N1<1THW@Fep;E]U-@e;PG8/2?gR`%Hp&ae?lpV9Po)%b8-Z,8V0J[koPm&bCq[\6lj$b`\8&0Q])\-2L16H]9Qh\oRR7b\hSe_d\Y6n\uf7GF\WV"5"(`Rm*UV$Sclr(-?>3u;jnmY[g3X(%1\\eW)GB\LTlm:Kc_X2_2MXgG^..RUi63NkgS2+#X[<2'84GTA\TOhaYZ!$Ja4?r84\d_qQbla0.XJ!<?Pet1`QqOVC7Ul]??XIn%p6$gSWJ`t:clA;oZI_Yqc,dF=LaUe$DL=L5qdK8/Bb6fu@?&4ChOL_PplmmdBQ5a`BfV$=ld9Hdp9Fa0Y$VXhPUlhKct[N7N_80X%eWB[!f3>9V5@s<LC5@q*5[A%\=A)70Qshih"kli&93RA0#h+LXh#%\h*_VK3<>4L0[ce-*MC3rl5[l&`VdnGYjjoPrd75)i<=paC%oIWKFcLf2Of-8lWa/=M3Xa1>35UpDe*0)WA_R0);aI1p-feQ,u]8<s!7D(n%O=I<,4,ljDXRo=cbEOtGVIF-[9#V"Uf&R@J(jg?Y%MqPCW414E(?sV#[_'UCF5fRj\W+F3k((gJmSF^T>7J4\(%DrfL@;7>>BLq]8VHQsCcsYIK<3:]hjJPrWBr\e]r05:eS<<Y#+UYJb%?K^#U3-/mNAX_3P=BlojEn4/Tq=`k[F)!69K0r\JPpB",3<O<4I0K:2W$r(5CG%@3e3F-V*O12!7NIprKTYLQN@Jro3dT%^1I92-%N[4m7p0qn1M?(YRF@tR\3/>;71^I"$RI!dI6s<=e9T)Q%,@u\*=%%!E"1I-TRJ]>d__!GG8%^%Sjg&q/+c1FXJ^]RZZ:8U+Pb]Nm%j9uR`)hq:]]WFGET\kk%!gQ'.Mt7q!_''c?Ufs;O3#bK?Ji(j+P[b*K0mY7tp'%lYS]:dW\33DV&9Ol$[hfdqZIN[m>!8Y96R.Z-%agNOGR'kQS/R:[U\lKpuik.Z)HqKpjA10#?:1\1_?,=t2,uRBd#qVVl'%TqFPCTLI$#HP.N53k%2)aVp9KDWM@(&c39?6g[cFoH7%=H@0B.?uo/V'lCKUm,Df,_@r/Rf$UF@VHlEjt7$(Z@gBSQBRsm(D,'[N@>19O1",;^6Z4RGt:Jf%&rf>2@fn$JLbR)j4RrOMN@O?%ZoFrp8N/>J]!@q!VK9*GOq(cI3Cgp.km`J//K]O>AN83rS"*O2[&JT4cgA7bAhB>"Jn&YDD>KrAMoC591q_qO<ruQ$AeT!(Wj@B6%B-khemq^rs0X=E;VC.$5#fa4^i`F>0=ol1[9%7.A[4k(gbUcLX8)HHU3a51q6H,Ek>,l=A4(]WWNTR`WM?Me1+RUao?`o^gO4->;%E\%ZP\#'AX'>8>LYj-S0;br1R-T[)5<buPIF;@e=#od#!@Ogl-%42o(;laUoGSF&-$UF+;8X3KPmGKGB[fW)/NnK`h5PfQmeB_Q>%#JWFp_^rc5C$:RcUG.10&msYt)QC`CUe9Bf>N8Aa^P4O=Q(g#LCp-^BcnRTr]5,LD-<;86l=f8J&gPhNm:m]R5YNIln7iO^lE4"E%[M3.j/+0PPF<=r.mMarajsGSF`E4#\Daof-#2O!tpfQEIPRZ:s5&@9XT=A$OTGji!/DD^>CohDW[J9MpNA3CJppcbtLD0rFO6`U3%c>G?3&FN'4^p:&s*N2:?ZcU7o.V`%f-D(lMfraB`Ih7Oa/PSR0Je:b]['mP5Y[5?>G`giKc3tr"@D.s_KBd"j:E]CV.[4cP.0\5c%PKIG^'9jD1@_%GB>obcXD+=eUbTWf*acXL61(b_robaY;.s5^X7HH:%SB3Z]\P-J)Yr?qc2u1@1`mQP#'N5n$g>GMQV*RbU8h"aG%>?@YcA%0%Ii]iT(@W>O=oLL1'U_M$b=61.PO#`\(:7:6r\$WP7:2tl_PK#j=V@*!ITQ!Ir`TD`4KO@2WWg:JHL.`#4Gr7DT_lUj!%/^#p2%Y5EVFA?%YUs<(F-(n2^Ee9*F<r?c7atnY7dPE+#-@*tWCR_&'X%d'\T0cL2FJ502qZoAO.cCUS\sAR<`%++i\e!dIN)GL@%?0G+_X:%pPCler:Pj1mD:W#G"e&`\B/aVJ7AH8lB-,Cgpg/:;Uk2fF3f-HNP?+%')Z#'G<I1W6!%*be8B@%upC:!3LiB'bQ3S:F%%@u"WJb,;%Aebn&>>-I54#q%`*Y;9oiMYS8-`LD1=d;X30<AeCM?ttUAWZEO:ORp?W@=(p_-l2o,?7KMOM<*BpL`#^Lc3r^m_pj07%NG$K@K2#4uf,1,;S?3RS5/V0X]`C-(>h9-E`'JFbFG64d-R.Z6'C(o2`Klqqj0^@oohB-K:aT:=G;/IH]L^b6M_HU*C5^3??9=SR%@9-m12J'^F6lp3PY1&=tmgW]T@%/onO'l$1bHRMdC'NKlWqMFQX_,X-Kj7GYc(JFdam&33.g>LI*o>C[#2N1U"1L`Uka')5^t*0'%h,75dCQ2rQ/S11]]<\3S4!Q?"`jm0\6nJjuK<Kh/2S,/'3eG51WHa[@7h%4X['9'EX/-k'T@g3/RoZ!bJ-W/hl4sgd!)Zul2%3rq%!9L.9(:lmeDPb/#C?Wl7DC$UJ01BIGi`>'VQcjc.!;N?4@2+ud37TG1AS_!piJ]q:hhI40_2"ec.YZ_lZ$(0u%7c,1m$s!nIWj.I%bg_4EoY$0fS#m4\HhU_!<A]G!YE=flW&e_.pF-";&q*OE]a*eiQ6i=Z^*X)IU?6\J:f4UU%>VM4U:lieD9r/7CU)Cc`mbLg1'809%EuF]$R1jmm@2K([4%u\C%\2/`V!?UC1aI7;M;Z`ifBcs'P2SeN"7nRJ1nSrC2FVm3JJ4i<$Vp7R0[^H_H>b(4_m7q=g2ufkRO\!R%\Ah:o"M'''K*/l#FK:hO+%AjS%=\Jg*VR[qoL;-H5R^j;3'.b^,pM)@64<K+n^>A3;%b7P*!lPOMj124Po0X2)_'kdM`<1e*M"!C%R:2V]4Mc<-GZYjUEW^ioij'-7*ThAL%!I.Xn>d-FSC9>Iop^L!6pP:Eek*mEf";O"%#^n;*WQL+:Er-)Auhr]L=*Am_[IDN$`Y4`%0hR)DMPLC;aZ86=0`i.8+Z9KE2VN3YPU:<0-J;#`1kaZ'Xc8Y7^!:ZNg8H-ZGg8r%?41;22Dob#%[L:8<Q(fuN('ca1X%/%j%j9:%R+5;tK8uV-S;\P1NU?hE/KM2$+,+#,^pHOg"7.t`*3P[;</P%PXWjPmRrHLVr,'GK\WhOhNY0.879ds)VFG8.MfRd(>]l.:BYHJQ%OL,]6_HM?C\a?B6*1DSK\OM[h7Z9j,<caHhb[N+4HXg$oXVcRc^^3#o,d',lA<.>!`6H&TRVjFG<7/'g\M9[,&g#*""sZ`C\npT!%KLgQ6m$pq:cU"d>_;3*n)@@l=#)\?BhM)LSkm3YDNOWI`a\$e?PICVq9'?;l`Yk`[Pkq@$A0oGtUH:JnFHQO_>0h@cE"o2h!lpuF%+ea:C$nsq1"=jsDliG9^%.Ko<G.U2bZjOMc>N.m;OZe=W$[*Hb:V:1m@ruDJJSIj*FYGYo?i[*\P59:PQ.NTVp,OR&dZh1ppc3.)%-LV-2H^t""PUNl^nG\IRDgAU7l\jqBbeg-!Y?mLGhUQB6kkb+!f<;A1<\L)J^Y>i]?XIV1o(4Qo?C*n4rpE1VmZ`2<V1k)_@Nm:<%V$(;]5XcBcHPsKS!6V9kotFRq>BIEoP^hT'3@RH)UmQe$[VQ`[FTMH:#XPEFKEJoJT(eua%Q7G^oDT'fUYQS)TBu?O+8<OR5/)7>%lMfqnoo"aQ"b)K@r7UX"?!lI"<W;K&IJ)[Sk16ZH=-p*Cf?aHeH@><mIJ&K3m-j@KrG2AuZE2'd&$@N,PqOb*34\pIf.X9b0>;o,%?2<1)[H$qM]Cc+!ipucc>IVft0@G4&CYjh;oq!hJ&)4Jh@<bfC)8ZGuf,HYMY;S&J\XBPRn3=a1[9.?`DLC<MF>71n\B\+q0E'A^%o#]?^mrIOI/h^NoV$i26o?$[ub^5sf5PjORQS1:EIC&md\:1'hIG\<e^?WBi]A6u7ne_*T]'0(_?^n5a%,SSgjncsmq+H2-n::>t%GIRQcI<G'roA\X'q.BWjSUA\_hoW\r.g=,kX;i5"4./#iB@lqJS/l7sa)CeP..<2emO7Oao'S[&S`l90h>-cb:VXD\nbo#FUe`Ji%-6_%eR'<<:GLR[6dF!klM[F#(T_X5:i?2rtJST5sTLO5,6t'A>Z(qtp5/WZI2t2U<K,+0+_)RI*L4h,k!?Fr:5Z][5^:AZd+i?+V%eIO%WXk-IE58JWsF+DCm'\YW(HJX]dXdYt&,D0aWO1GJI70+LW?8amthY",:h4f2`2;*+t8=?=c(;:pr4rJVCGsCR+X%Yr)."HBb%9#n""dJAOfg#q4bH2eAJ'OhPjZY#4IqQKJ2.[uTI.DE]f`Ma\n5IaC;qIRG-N#<,.">+PWH\[7>jt"&r9-"PGho`d3GC%[um<r#u%%ca,0/E=(bF;XHlkPXpid,(*\e>&I^PaP%0H'F^=<+_!kOPYBTm*G^Es,T[":#]"S*T',+7LMhjNK?N'H?DI:$kNpVSDOlt#;m:/%XV('"Z;>/u:k`b]$'MN&6=gmP,d9UDa/D,ZI.k*@(&#*eN]go@Bmj*'%&c"E$[`Z/7reH8`UV7KA$<bp8^_Uk8PN#]kG7?%hB_:^%o8bBf;.^k\k##ai\n%\:Yb0eJ^JB<goC]GFaYaeKP9TG0Io=5Po%611TP(@Tk^j;#Jd;QF@V-n8CL)H34I@0:UZX"3mF4bqR0NG$%o3o&TA5jmZ]'XHcH*tVP)1(;^OEOnW_>rj$!C(VjZLc>k'4F>">M-YZB%BP5GM#)un%j1mcGC(6HVp%%U<7e7(ES(>3!nstSm-N^%.%=H=O8aUsOGc?pqf-o=Fa6D04TG-"s7ehWn+l_O\d=*[11<k@RKs1t$Vf9(h*RiNL32Eme7+opXDa=75E4KVa*(/PD-Ns_gCj17%fL"=b`@kg2m4:2B<s^Ujp;;-aqR]27Tlb*R?[H&8\#f$n&[?sSp!-G`Z.rMNGkK$"(YU,P'@ABcSN-j?7!RRLL5]\[H1e6\N@I1K%;HddE!gc0mZIVK43K14nIfNJqFmRMtgaG;6Q(K:solg'sV.!-ZHg4_0#bG0h/+q5Cd232RWdBe^HtJ2\G8/T4J^-:`c`Ha)mVh!c%]k@4h55KEt&as#?GeSX8`$EoQ>3ueYbSnJ/hPQXsC>PRZ1"'r(I!P\WorB)gj/pmPd%5F2+g'e1+jY8uTXA^BN\0H4]3aA6`u8@?%h^P&\?*3.@T5Mt.YMXi3omUga^]nuX?N)s%jdei7I=ge?aYJg!B?N!Ci,jPIkKXk\hrf[/7,"%bAfQ=#;eD]34(hrKT9El:s6B$[%'j]tBg[=qtTBkt6?2`+to3k,F_M#YXUEU,4%tOLBRGeZqSpQQ)YVHD:a+Hi%"YcAVb-?tYjn"%_@u!UO6,1Z(%N71q*8dLd6A#P$%LAcU%[dhWMjaPSs@,W7a?GC//qGSp`GUe[0l)FH;/_\Krk$:HucB?p"ULZT]#FN<0R$K3EkBj/'Ka'#\`rX.'OB47@ILi._HOXhB%+b1(lj:23dl_WeCV'.5OEcXGAf^k;n4-fG:^nLBYk?j=:IZ.MP/om5?U.t1g\iC&(peJC\./YR]$8N'B7k7*n@IKk[hgFZCG4h>`%?0s2\T;Yb2^;X4m$[U`iPXXnW7a;L1GER.Kn`Mj0WQSi>bjS&9HBb9sBmQ#@LQnYn'B#!;fDkg7/,dLY6bj3n^7YiT@$>tk*rtb+%8()qhm03.A<-2LUg2I+9GY8;0oj?q@L]AWOrYm'W/:.8]HHcK-d\-Wk9*bE>qlrZipGXY.Z2:<Q-&7Noq^A_!fb/XEote8=^N1Tb%ZYu^-Q;M2%`9_I=7/`Yi[7Boa-qo]=oI*C_?,BRJhiBG)r;O#urNcb/GgNhT0D7j`)"UX1"IMc2L)VsVKcLWXW;2m,L2cL3i`iVQ%(#PFWhGiTZ<.+_ZATbqg#ju<0HBcrM=oD!YeaHE!2(M61aELjSJq?'/9o#c>rH;59*qe9_bWO%lUWiXYa\:*#^]3iolbEG`P;cPR%52?UH!77?tcYfWfS&8B+JdGC-6GqIBG:Kj=)M;]Ah1"chM*24,T1pH_I-09W*8c#";&K<KL%3IB\mBrYPG=lSgE\6A7$s+5UC,bO%l2:.6.dU#A*[TrG@fDfAVPp\"T3jd0nAU#5?aqIBQ5]1m=mV>ueKM/0LF?C;+FCA7-T#05+Pl3.3JMR"i^PBJJgAYpSY]b&qbGLb%G=ZFC*k-'OdPU(^BR$'S#fb^5jn+sl(2]&2DIiY$%mX0@T*j4NXWn48JtX-),HDd:^@tH74fDRqa4At4@,=ZOfB(oV<[bjAS"Yd9%\&7S20YI-*hc`f`SY[-HEotR2B5aAH?VQQAm4*X4h+T!-!0:G>]_h:!k/lq%lPDA*XhD-+D1!O1"jH2Y%9/3X"^83kjk#L9mZFNu%=Jg$)"S(ri%)R>\^":TF]"H\.]P5*D6gKJn[[4[[,j'Fa-&6F&=ZJ!,L4.mR8))\6fUPVqmd.NkTfld%'tE;L51IllT`aNFJMc`[%Fo\q@4cIW+9?3T/G;ds:V>6H"2tig^qhB9on#ONcZ@.jA4b!1uZ^:^dD9W3Lrr`DerVXYk(dK"^aVA4a6(cI'?(F.4YSnH?5hVm`%)-F!p@e)5T@R\Z39PJ<Q*")jXkPK]:H?GQ%ak^(*$oh3-)Kh?C:uHn!6TW]CXqr,cI?$VL0;ILM6B>UoKA-M#lGL*h^#57aclGq#%H6U'._Msu]1R1MtU$Q9o/sK]P@idD)_lCK)QLcg&1h$S$H91oP&II&UK3@F1gsHQoE)!m>S"Oh86"0(EHB!KAX6!,gg,X7^'#(r0%k/"WX89gj\FF34<9K-b^\CR!\-ejHq7p:9%@G)T^0W<1%:&C#;OXWM''32U]+)-TR&A'Se0>^2mY,;o%@TmMYaCEl<dO8dj-r_,Q%Bc3/aPtF]Zo`<W*2C_Q9G@e=U?1gS3eklg;FDptb[dkk5l=9XOim(PZ!2b'Te>1ql)(jPQ_3X0uMqu@![T*6b5"j4ed-)9mBQdWP%@rC3s]%Kce;V<k(Yj;&!QI$l!N*M3,]&u\s2bpjqh\44e/Wh6H#Ia!=.U1?WG/BU<VD.,T8lF\B(dbZKHq?7m)3[6SRP6(:\C`Sa%%HW-qnRb`rHH*l>`B7^*,fu(:M.;"m9Y<Ht$"q\Ugk7JG-9j12%JcSMn_WUZN/@!(']"m+JKcu1bViL)ZeaHDAiiG1B%E3XR6;KL%Q.HkS.&Wf-$sdG.*k;kl"A30RhMrV)NoaMCZ"HQJ90GB-h-jhaT:ot_O!?a_Cd9&QSf`7%GPjuj#<hW&]uYkh+.4D/o4(!3r5a*&%OWXBn,<L&_#s7^>mFdW"(e/\EpX&0XfT@T!F%P#HLMY:sHug:\O^<]mZ"$9JM9]747ioi:47_3AA4M)I)VL6eE]lYX=RPsHDY@f*%7s^<&,<lf4W3TBOm)Oc$]=U.RoT2q8<M&^?!P!.;&:?2%_Y*qp*/ni<G;KAKPoP`jVT`bUL`/IPZf:a$=tAIEXg]Jlb;Im@mD+sO%fO`cPUNP'n)mN$m=J9l;_mV518;jUg:A!1.llo04;EN9;)mtU2=eU#=cW4csBsdZb)4gJr^ONZGJ:'S)'in5L8ofG+B>P5f@2iW]%G\,b%>@Zmo#@m'ck<6-EOgU7OrLm?jaBM0kqR>XiI8R#4YJ_0&s%;1ZF8_G$e7X"*d%-$akOeqB^\R>Z?U+1Ts5>=g,\L@L354c"%_VmZ56[8WiK*]L6]8.rA'.6YRG+kD(;*.sYNS6h(U@rFoB2SQ9Mqgadg53_G;S1:e<6:[jN@MJsgd[R_M;tO4]?k[WSkQnXKC[)j%8,iAZkH=t0QKGg*s87rDbPV%+J,4qk"sfh!H[9>h:i-,6!6(>sd,OhZNu#e1nC$=p1O`LI?ganqjA(*1NSJ+%g.LcKfC%\(Xjg*n%[[#QX?JA*=`,AkZ?0Jh9jGpt/7d_JhD'aDc^THQLo\ea-1Ho&)((\3h;cf$an`R(tJ+_L.^YUbB?hW^h?"hY#0p;\ZA>\^TZ;3X"%0LH:&oSkSeKk!7>pAh^@0J8@072Lt7)9OX4DGLJVkiN.\mOSDT,dbfmO9=Q_[.#ncb4*Ir4j-TC0T)/)!3O^Pfq@FM74uIFU:WRM%B`c)M;p,`"'--G;XEDSuZXK<\R7<g6F/[ImA(Y/EVH&,TNb8jq=JaJ^(^4(%3\l73`/$'rmR[Yq-EFB9-WqK3UCN8WCLOT+OUtG;%djUS]fb&pLbt?"6R;aDgmt=@B?bPYY=p<g)KP0SU\H>?(LaLc:3r<qqWVSVBL9X(WO$Y0U;M1dQrR]!8P[P7"A9o(Er.f<Wa5E)Z%OBrE#+k,D;JKquh14^Be;Nk)cjt!;W(u'KsN'X5[<I\q/A`EVB$`fQ3d7$lY.*=Pp,c%Y71$"5?kkpYo1n=2X_A(.W%ip"gTFj?X%"Q#V<Sg]P=#,gFq'!Rs1';Gh+n6#*]Jo>g2QG=;23!(N9@GhD0M^(a5boK1@HgJNZ9Mk!lU*I<+"PjKLG@UuX[":Fu0Ece_2_YAo%`K;>%DE*`(L7gJV,Gf#YVQ&_`*\na#0U6t,&+Z<C+,HXJn,n]%#GpSg\D-50+7Mu3[S+pW7$?rjTc51nkjIfJTo/:LaUkWd"^TeM%iSj+5!&CA5Z#\cSRno)-"q0Nin#K.%6b[1g^=c8L9S#h"-<uiL43fl>UG4iN);^oR/u(@N2mO=Me8lK<l(6)0Rg1jh(WDN]La"XZ%=eiW>1VDD$CrY?WO)2f]V4PqFbit_DkjIZ4C^+g8'.uY8eAu5Y('Z\7Hi;#tm6*V%0h%sP1EHoeS'g'6:Y?05jRn2NJ0^W?^h;Jj%0Nu0!A$hslPW+3B4YYU9R]\ObWB[1Q2E31!'h'+7;&*Me%qQ=p4/4Ffp`9cP-$Q(=2KG-5NKr?tD/A8c;]I<u'@ft$?)g"fE[U-^%V0A=/fuP16a@>SQ-*i[q;'RU%M\JaYC8smT+G1(>F'bia3R"Fe35/M"`4'TaQ8lO4EnQ9)igr:IbXS\)0[F&tV@Ygh1Y\7%VJ'"N%-`UdRGDWV.WL]uWNS7qNVbfHT3@hKFPg85Aph?*#:U\4lkZ/C8E&PukUA0.K<)FWBY)MB-1[6BOZ%kYLadoB+NSHrpBd5Q3=`Y\(%[!g^lA^.oQdn4N5iljP"e4T*r7BP&l<)P6S'/`e2?)FR[;eK([T.^7ijKBeXr>,1o^_+)+55jWcSb1oaHKsW;E&W%;Z.5EU&E=('%!@EKZ+4'1ANBbi+rQfT-e!%P;lp*Kj@M\o/0oJACVhRgU8Eu=poZfAA6\VdH],oNJ'Lfe&WXbUk+5r'*/+>qTjo."g>[2SjhrsZ-%:-Q7;fDkfuX,HTBS'?l?;u6HVc'-=$*%AacrW?Fo(S*eQ'tCfss4#3/i;(9ShgP%:T0N;7f3eK*FhUMqIIm:1K=c>.[oVnM18ETJ%[JG6\])8OFh-I-O_"[fP%ifWg\D4'uhYd/K4MBPAfo+,;_:?MI\R**jjf@4N]%Hp_I^a8k>ebM.^DFV=qefbl"MJ'TKTH/*-i\=p%j1)X=[\t84i\\W0l-sS"qK/;+`G*&r#`mS7D-YNDMg>2;Z1['5q!.bB+7?4;XWQ%q%Vr:AM);6b?tSFp+("$KV_2Y0RdrgeHBIm_%ES/4MCZG,8oD<o)[GPWhKjON+D'287T=TgOiFuJ6nnA@Gl1)Zci&pT#_gKJsKurW>Ys-\KbM![Lap0M5b,J_uZa"NK=@L!nRr@j?%pR`;sGP@4s3";Jt0bB'MN?^6O\nX42]Co]T&```8l,05JT/mYFC%b#]cb51Wq=JY)q!kX]:MX?eg7@!5IJg>7XWLRcikp5dWRZ_F%T7?arr8PciO7uVG3rQc3kofSGI,U!3Zeh4`@O)ZXVo.cq,374C%=k?]XG]C?iAT,>j5#,AdSpo5qQM&^C,]t)B'!k-ED@>Fkf`X_%c.=W"QUMWLH1H"SYK^g1FTls>k.C2NeWUf=Q\CUIlK-L\+(1o",+!fOdAL?!G4PYT27!&~>%AI9_PrivateDataEnd